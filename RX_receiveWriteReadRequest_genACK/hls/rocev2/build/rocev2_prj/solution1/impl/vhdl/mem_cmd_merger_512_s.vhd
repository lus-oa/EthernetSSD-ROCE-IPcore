-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mem_cmd_merger_512_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rx_remoteMemCmd_V_dout : IN STD_LOGIC_VECTOR (112 downto 0);
    rx_remoteMemCmd_V_empty_n : IN STD_LOGIC;
    rx_remoteMemCmd_V_read : OUT STD_LOGIC;
    tx_localMemCmdFifo_V_dout : IN STD_LOGIC_VECTOR (112 downto 0);
    tx_localMemCmdFifo_V_empty_n : IN STD_LOGIC;
    tx_localMemCmdFifo_V_read : OUT STD_LOGIC;
    tx_pkgInfoFifo_V_typ_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    tx_pkgInfoFifo_V_typ_full_n : IN STD_LOGIC;
    tx_pkgInfoFifo_V_typ_write : OUT STD_LOGIC;
    tx_pkgInfoFifo_V_sou_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    tx_pkgInfoFifo_V_sou_full_n : IN STD_LOGIC;
    tx_pkgInfoFifo_V_sou_write : OUT STD_LOGIC;
    tx_pkgInfoFifo_V_wor_din : OUT STD_LOGIC_VECTOR (28 downto 0);
    tx_pkgInfoFifo_V_wor_full_n : IN STD_LOGIC;
    tx_pkgInfoFifo_V_wor_write : OUT STD_LOGIC;
    m_axis_mem_read_cmd_TREADY : IN STD_LOGIC;
    m_axis_mem_read_cmd_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    m_axis_mem_read_cmd_TVALID : OUT STD_LOGIC;
    m_axis_mem_read_cmd_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of mem_cmd_merger_512_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv33_3F : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_76_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_nbreadreq_fu_90_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op16_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal io_acc_block_signal_op28 : STD_LOGIC;
    signal tmp_reg_275_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_reg_309 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op28_write_state3 : BOOLEAN;
    signal io_acc_block_signal_op33 : STD_LOGIC;
    signal ap_predicate_op33_write_state3 : BOOLEAN;
    signal io_acc_block_signal_op36 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal out_V_data_1_ack_in : STD_LOGIC;
    signal ap_predicate_op23_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal out_V_data_1_ack_out : STD_LOGIC;
    signal out_V_data_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_dest_V_1_ack_out : STD_LOGIC;
    signal out_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal tmp_reg_275_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_294_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_reg_309_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op44_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal out_V_data_1_data_in : STD_LOGIC_VECTOR (95 downto 0);
    signal out_V_data_1_data_out : STD_LOGIC_VECTOR (95 downto 0);
    signal out_V_data_1_vld_in : STD_LOGIC;
    signal out_V_data_1_vld_out : STD_LOGIC;
    signal out_V_data_1_payload_A : STD_LOGIC_VECTOR (95 downto 0);
    signal out_V_data_1_payload_B : STD_LOGIC_VECTOR (95 downto 0);
    signal out_V_data_1_sel_rd : STD_LOGIC := '0';
    signal out_V_data_1_sel_wr : STD_LOGIC := '0';
    signal out_V_data_1_sel : STD_LOGIC;
    signal out_V_data_1_load_A : STD_LOGIC;
    signal out_V_data_1_load_B : STD_LOGIC;
    signal out_V_data_1_state_cmp_full : STD_LOGIC;
    signal out_V_dest_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_dest_V_1_vld_in : STD_LOGIC;
    signal out_V_dest_V_1_vld_out : STD_LOGIC;
    signal out_V_dest_V_1_ack_in : STD_LOGIC;
    signal out_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_dest_V_1_sel : STD_LOGIC;
    signal out_V_dest_V_1_load_A : STD_LOGIC;
    signal out_V_dest_V_1_load_B : STD_LOGIC;
    signal out_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal m_axis_mem_read_cmd_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rx_remoteMemCmd_V_blk_n : STD_LOGIC;
    signal tx_pkgInfoFifo_V_typ_blk_n : STD_LOGIC;
    signal tx_pkgInfoFifo_V_sou_blk_n : STD_LOGIC;
    signal tx_pkgInfoFifo_V_wor_blk_n : STD_LOGIC;
    signal tx_localMemCmdFifo_V_blk_n : STD_LOGIC;
    signal tmp_dest_V_reg_279 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_reg_279_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_reg_284 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_data_reg_284_pp0_iter1_reg : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_words_V_reg_289 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_words_V_reg_289_pp0_iter1_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_len_V_5_reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_dest_V_3_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_1_reg_313 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_words_V_5_fu_242_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_words_V_3_fu_266_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_words_V_1_fu_271_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_data_len_V_fu_131_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln215_fu_159_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1371_fu_163_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_data_addr_V_fu_179_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_2_fu_223_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1371_2_fu_226_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_words_V_4_fu_232_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln215_1_fu_247_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1371_1_fu_250_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_words_V_2_fu_256_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    out_V_data_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_data_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_data_1_vld_out = ap_const_logic_1) and (out_V_data_1_ack_out = ap_const_logic_1))) then 
                                        out_V_data_1_sel_rd <= not(out_V_data_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_data_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_data_1_vld_in = ap_const_logic_1) and (out_V_data_1_ack_in = ap_const_logic_1))) then 
                                        out_V_data_1_sel_wr <= not(out_V_data_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_data_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_data_1_vld_in = ap_const_logic_0) and (out_V_data_1_ack_out = ap_const_logic_1) and (out_V_data_1_state = ap_const_lv2_3)) or ((out_V_data_1_vld_in = ap_const_logic_0) and (out_V_data_1_state = ap_const_lv2_2)))) then 
                    out_V_data_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_data_1_state = ap_const_lv2_1)) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_data_1_vld_in = ap_const_logic_1) and (out_V_data_1_state = ap_const_lv2_3)))) then 
                    out_V_data_1_state <= ap_const_lv2_1;
                elsif ((((out_V_data_1_ack_out = ap_const_logic_1) and (out_V_data_1_state = ap_const_lv2_1)) or (not(((out_V_data_1_vld_in = ap_const_logic_0) and (out_V_data_1_ack_out = ap_const_logic_1))) and not(((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_data_1_vld_in = ap_const_logic_1))) and (out_V_data_1_state = ap_const_lv2_3)) or ((out_V_data_1_vld_in = ap_const_logic_1) and (out_V_data_1_state = ap_const_lv2_2)))) then 
                    out_V_data_1_state <= ap_const_lv2_3;
                else 
                    out_V_data_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_dest_V_1_vld_out = ap_const_logic_1) and (out_V_dest_V_1_ack_out = ap_const_logic_1))) then 
                                        out_V_dest_V_1_sel_rd <= not(out_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_dest_V_1_ack_in = ap_const_logic_1) and (out_V_dest_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_dest_V_1_sel_wr <= not(out_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_state = ap_const_lv2_2)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_dest_V_1_state = ap_const_lv2_1)) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1) and (out_V_dest_V_1_state = ap_const_lv2_3)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((out_V_dest_V_1_ack_out = ap_const_logic_1) and (out_V_dest_V_1_state = ap_const_lv2_1)) or (not(((out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1))) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((out_V_dest_V_1_vld_in = ap_const_logic_1) and (out_V_dest_V_1_state = ap_const_lv2_2)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_275 = ap_const_lv1_0) and (tmp_67_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln883_reg_309 <= icmp_ln883_fu_207_p2;
                tmp_data_len_V_5_reg_298 <= tx_localMemCmdFifo_V_dout(111 downto 80);
                tmp_dest_V_3_reg_304 <= tx_localMemCmdFifo_V_dout(112 downto 112);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln883_reg_309_pp0_iter2_reg <= icmp_ln883_reg_309;
                tmp_67_reg_294_pp0_iter2_reg <= tmp_67_reg_294;
                tmp_reg_275_pp0_iter2_reg <= tmp_reg_275_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_1_load_A = ap_const_logic_1)) then
                out_V_data_1_payload_A <= out_V_data_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_1_load_B = ap_const_logic_1)) then
                out_V_data_1_payload_B <= out_V_data_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_dest_V_1_load_A = ap_const_logic_1)) then
                out_V_dest_V_1_payload_A <= out_V_dest_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_dest_V_1_load_B = ap_const_logic_1)) then
                out_V_dest_V_1_payload_B <= out_V_dest_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_275 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_67_reg_294 <= tmp_67_nbreadreq_fu_90_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln883_fu_207_p2 = ap_const_lv1_0) and (tmp_reg_275 = ap_const_lv1_0) and (tmp_67_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_1_reg_313 <= tx_localMemCmdFifo_V_dout(111 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_76_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_reg_284 <= rx_remoteMemCmd_V_dout(111 downto 16);
                tmp_dest_V_reg_279 <= rx_remoteMemCmd_V_dout(112 downto 112);
                tmp_words_V_reg_289 <= add_ln1371_fu_163_p2(32 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_reg_284_pp0_iter1_reg <= tmp_data_reg_284;
                tmp_dest_V_reg_279_pp0_iter1_reg <= tmp_dest_V_reg_279;
                tmp_reg_275 <= tmp_nbreadreq_fu_76_p3;
                tmp_reg_275_pp0_iter1_reg <= tmp_reg_275;
                tmp_words_V_reg_289_pp0_iter1_reg <= tmp_words_V_reg_289;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1371_1_fu_250_p2 <= std_logic_vector(unsigned(zext_ln215_1_fu_247_p1) + unsigned(ap_const_lv33_3F));
    add_ln1371_2_fu_226_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_223_p1) + unsigned(ap_const_lv33_3F));
    add_ln1371_fu_163_p2 <= std_logic_vector(unsigned(zext_ln215_fu_159_p1) + unsigned(ap_const_lv33_3F));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, rx_remoteMemCmd_V_empty_n, tmp_nbreadreq_fu_76_p3, tx_localMemCmdFifo_V_empty_n, ap_predicate_op16_read_state2, io_acc_block_signal_op28, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, io_acc_block_signal_op33, ap_predicate_op33_write_state3, io_acc_block_signal_op36, m_axis_mem_read_cmd_TREADY, out_V_data_1_state, out_V_dest_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((tx_localMemCmdFifo_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op16_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_76_p3 = ap_const_lv1_1) and (rx_remoteMemCmd_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((out_V_dest_V_1_state = ap_const_lv2_1) or (out_V_data_1_state = ap_const_lv2_1) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_data_1_state = ap_const_lv2_3)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((io_acc_block_signal_op33 = ap_const_logic_0) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (io_acc_block_signal_op36 = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, rx_remoteMemCmd_V_empty_n, tmp_nbreadreq_fu_76_p3, tx_localMemCmdFifo_V_empty_n, ap_predicate_op16_read_state2, io_acc_block_signal_op28, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, io_acc_block_signal_op33, ap_predicate_op33_write_state3, io_acc_block_signal_op36, m_axis_mem_read_cmd_TREADY, ap_block_state3_io, out_V_data_1_state, out_V_dest_V_1_state, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((tx_localMemCmdFifo_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op16_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_76_p3 = ap_const_lv1_1) and (rx_remoteMemCmd_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (out_V_dest_V_1_state = ap_const_lv2_1) or (out_V_data_1_state = ap_const_lv2_1) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_data_1_state = ap_const_lv2_3)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((io_acc_block_signal_op33 = ap_const_logic_0) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (io_acc_block_signal_op36 = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, rx_remoteMemCmd_V_empty_n, tmp_nbreadreq_fu_76_p3, tx_localMemCmdFifo_V_empty_n, ap_predicate_op16_read_state2, io_acc_block_signal_op28, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, io_acc_block_signal_op33, ap_predicate_op33_write_state3, io_acc_block_signal_op36, m_axis_mem_read_cmd_TREADY, ap_block_state3_io, out_V_data_1_state, out_V_dest_V_1_state, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((tx_localMemCmdFifo_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op16_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_76_p3 = ap_const_lv1_1) and (rx_remoteMemCmd_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or (out_V_dest_V_1_state = ap_const_lv2_1) or (out_V_data_1_state = ap_const_lv2_1) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_data_1_state = ap_const_lv2_3)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((io_acc_block_signal_op33 = ap_const_logic_0) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (io_acc_block_signal_op36 = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, rx_remoteMemCmd_V_empty_n, tmp_nbreadreq_fu_76_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_76_p3 = ap_const_lv1_1) and (rx_remoteMemCmd_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(tx_localMemCmdFifo_V_empty_n, ap_predicate_op16_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((tx_localMemCmdFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1));
    end process;


    ap_block_state3_io_assign_proc : process(tmp_reg_275_pp0_iter1_reg, out_V_data_1_ack_in, ap_predicate_op23_write_state3)
    begin
                ap_block_state3_io <= (((out_V_data_1_ack_in = ap_const_logic_0) and (ap_predicate_op23_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (out_V_data_1_ack_in = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(io_acc_block_signal_op28, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, io_acc_block_signal_op33, ap_predicate_op33_write_state3, io_acc_block_signal_op36)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((io_acc_block_signal_op33 = ap_const_logic_0) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (io_acc_block_signal_op36 = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(out_V_data_1_ack_in, tmp_reg_275_pp0_iter2_reg, ap_predicate_op44_write_state4)
    begin
                ap_block_state4_io <= (((tmp_reg_275_pp0_iter2_reg = ap_const_lv1_1) and (out_V_data_1_ack_in = ap_const_logic_0)) or ((out_V_data_1_ack_in = ap_const_logic_0) and (ap_predicate_op44_write_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(m_axis_mem_read_cmd_TREADY, out_V_data_1_state, out_V_dest_V_1_state)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((out_V_dest_V_1_state = ap_const_lv2_1) or (out_V_data_1_state = ap_const_lv2_1) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_read_cmd_TREADY = ap_const_logic_0) and (out_V_data_1_state = ap_const_lv2_3)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op16_read_state2_assign_proc : process(tmp_reg_275, tmp_67_nbreadreq_fu_90_p3)
    begin
                ap_predicate_op16_read_state2 <= ((tmp_reg_275 = ap_const_lv1_0) and (tmp_67_nbreadreq_fu_90_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op23_write_state3_assign_proc : process(tmp_reg_275_pp0_iter1_reg, tmp_67_reg_294, icmp_ln883_reg_309)
    begin
                ap_predicate_op23_write_state3 <= ((icmp_ln883_reg_309 = ap_const_lv1_0) and (tmp_reg_275_pp0_iter1_reg = ap_const_lv1_0) and (tmp_67_reg_294 = ap_const_lv1_1));
    end process;


    ap_predicate_op28_write_state3_assign_proc : process(tmp_reg_275_pp0_iter1_reg, tmp_67_reg_294, icmp_ln883_reg_309)
    begin
                ap_predicate_op28_write_state3 <= ((icmp_ln883_reg_309 = ap_const_lv1_0) and (tmp_reg_275_pp0_iter1_reg = ap_const_lv1_0) and (tmp_67_reg_294 = ap_const_lv1_1));
    end process;


    ap_predicate_op33_write_state3_assign_proc : process(tmp_reg_275_pp0_iter1_reg, tmp_67_reg_294, icmp_ln883_reg_309)
    begin
                ap_predicate_op33_write_state3 <= ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln883_reg_309 = ap_const_lv1_1) and (tmp_67_reg_294 = ap_const_lv1_1));
    end process;


    ap_predicate_op44_write_state4_assign_proc : process(tmp_reg_275_pp0_iter2_reg, tmp_67_reg_294_pp0_iter2_reg, icmp_ln883_reg_309_pp0_iter2_reg)
    begin
                ap_predicate_op44_write_state4 <= ((icmp_ln883_reg_309_pp0_iter2_reg = ap_const_lv1_0) and (tmp_reg_275_pp0_iter2_reg = ap_const_lv1_0) and (tmp_67_reg_294_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln883_fu_207_p2 <= "1" when (tmp_data_addr_V_fu_179_p4 = ap_const_lv64_0) else "0";
    io_acc_block_signal_op28 <= (tx_pkgInfoFifo_V_wor_full_n and tx_pkgInfoFifo_V_typ_full_n and tx_pkgInfoFifo_V_sou_full_n);
    io_acc_block_signal_op33 <= (tx_pkgInfoFifo_V_wor_full_n and tx_pkgInfoFifo_V_typ_full_n and tx_pkgInfoFifo_V_sou_full_n);
    io_acc_block_signal_op36 <= (tx_pkgInfoFifo_V_wor_full_n and tx_pkgInfoFifo_V_typ_full_n and tx_pkgInfoFifo_V_sou_full_n);
    m_axis_mem_read_cmd_TDATA <= out_V_data_1_data_out;

    m_axis_mem_read_cmd_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, tmp_reg_275_pp0_iter1_reg, ap_predicate_op23_write_state3, out_V_data_1_state, tmp_reg_275_pp0_iter2_reg, ap_predicate_op44_write_state4, ap_block_pp0_stage0)
    begin
        if ((((tmp_reg_275_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op44_write_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op23_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            m_axis_mem_read_cmd_TDATA_blk_n <= out_V_data_1_state(1);
        else 
            m_axis_mem_read_cmd_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_mem_read_cmd_TDEST <= out_V_dest_V_1_data_out;
    m_axis_mem_read_cmd_TVALID <= out_V_dest_V_1_state(0);
    out_V_data_1_ack_in <= out_V_data_1_state(1);
    out_V_data_1_ack_out <= m_axis_mem_read_cmd_TREADY;

    out_V_data_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op23_write_state3, tmp_data_reg_284_pp0_iter1_reg, tmp_data_1_reg_313, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1)) then 
                out_V_data_1_data_in <= tmp_data_reg_284_pp0_iter1_reg;
            elsif ((ap_predicate_op23_write_state3 = ap_const_boolean_1)) then 
                out_V_data_1_data_in <= tmp_data_1_reg_313;
            else 
                out_V_data_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_V_data_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_data_1_data_out_assign_proc : process(out_V_data_1_payload_A, out_V_data_1_payload_B, out_V_data_1_sel)
    begin
        if ((out_V_data_1_sel = ap_const_logic_1)) then 
            out_V_data_1_data_out <= out_V_data_1_payload_B;
        else 
            out_V_data_1_data_out <= out_V_data_1_payload_A;
        end if; 
    end process;

    out_V_data_1_load_A <= (out_V_data_1_state_cmp_full and not(out_V_data_1_sel_wr));
    out_V_data_1_load_B <= (out_V_data_1_state_cmp_full and out_V_data_1_sel_wr);
    out_V_data_1_sel <= out_V_data_1_sel_rd;
    out_V_data_1_state_cmp_full <= '0' when (out_V_data_1_state = ap_const_lv2_1) else '1';

    out_V_data_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op23_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op23_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            out_V_data_1_vld_in <= ap_const_logic_1;
        else 
            out_V_data_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_data_1_vld_out <= out_V_data_1_state(0);
    out_V_dest_V_1_ack_in <= out_V_dest_V_1_state(1);
    out_V_dest_V_1_ack_out <= m_axis_mem_read_cmd_TREADY;

    out_V_dest_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op23_write_state3, tmp_dest_V_reg_279_pp0_iter1_reg, tmp_dest_V_3_reg_304, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1)) then 
                out_V_dest_V_1_data_in <= tmp_dest_V_reg_279_pp0_iter1_reg;
            elsif ((ap_predicate_op23_write_state3 = ap_const_boolean_1)) then 
                out_V_dest_V_1_data_in <= tmp_dest_V_3_reg_304;
            else 
                out_V_dest_V_1_data_in <= "X";
            end if;
        else 
            out_V_dest_V_1_data_in <= "X";
        end if; 
    end process;


    out_V_dest_V_1_data_out_assign_proc : process(out_V_dest_V_1_payload_A, out_V_dest_V_1_payload_B, out_V_dest_V_1_sel)
    begin
        if ((out_V_dest_V_1_sel = ap_const_logic_1)) then 
            out_V_dest_V_1_data_out <= out_V_dest_V_1_payload_B;
        else 
            out_V_dest_V_1_data_out <= out_V_dest_V_1_payload_A;
        end if; 
    end process;

    out_V_dest_V_1_load_A <= (out_V_dest_V_1_state_cmp_full and not(out_V_dest_V_1_sel_wr));
    out_V_dest_V_1_load_B <= (out_V_dest_V_1_state_cmp_full and out_V_dest_V_1_sel_wr);
    out_V_dest_V_1_sel <= out_V_dest_V_1_sel_rd;
    out_V_dest_V_1_state_cmp_full <= '0' when (out_V_dest_V_1_state = ap_const_lv2_1) else '1';

    out_V_dest_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op23_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op23_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            out_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_dest_V_1_vld_out <= out_V_dest_V_1_state(0);

    rx_remoteMemCmd_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_remoteMemCmd_V_empty_n, tmp_nbreadreq_fu_76_p3, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_76_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rx_remoteMemCmd_V_blk_n <= rx_remoteMemCmd_V_empty_n;
        else 
            rx_remoteMemCmd_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_remoteMemCmd_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_76_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_76_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_remoteMemCmd_V_read <= ap_const_logic_1;
        else 
            rx_remoteMemCmd_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_67_nbreadreq_fu_90_p3 <= (0=>(tx_localMemCmdFifo_V_empty_n), others=>'-');
    tmp_data_addr_V_fu_179_p4 <= tx_localMemCmdFifo_V_dout(79 downto 16);
    tmp_data_len_V_fu_131_p4 <= rx_remoteMemCmd_V_dout(111 downto 80);
    tmp_nbreadreq_fu_76_p3 <= (0=>(rx_remoteMemCmd_V_empty_n), others=>'-');
    tmp_words_V_1_fu_271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_words_V_reg_289_pp0_iter1_reg),29));
    tmp_words_V_2_fu_256_p4 <= add_ln1371_1_fu_250_p2(32 downto 6);
    tmp_words_V_3_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_words_V_2_fu_256_p4),29));
    tmp_words_V_4_fu_232_p4 <= add_ln1371_2_fu_226_p2(32 downto 6);
    tmp_words_V_5_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_words_V_4_fu_232_p4),29));

    tx_localMemCmdFifo_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tx_localMemCmdFifo_V_empty_n, ap_predicate_op16_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1))) then 
            tx_localMemCmdFifo_V_blk_n <= tx_localMemCmdFifo_V_empty_n;
        else 
            tx_localMemCmdFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_localMemCmdFifo_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op16_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tx_localMemCmdFifo_V_read <= ap_const_logic_1;
        else 
            tx_localMemCmdFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;


    tx_pkgInfoFifo_V_sou_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, tx_pkgInfoFifo_V_sou_full_n, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)))) then 
            tx_pkgInfoFifo_V_sou_blk_n <= tx_pkgInfoFifo_V_sou_full_n;
        else 
            tx_pkgInfoFifo_V_sou_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_pkgInfoFifo_V_sou_din_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1))) then 
            tx_pkgInfoFifo_V_sou_din <= ap_const_lv1_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            tx_pkgInfoFifo_V_sou_din <= ap_const_lv1_0;
        else 
            tx_pkgInfoFifo_V_sou_din <= "X";
        end if; 
    end process;


    tx_pkgInfoFifo_V_sou_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tx_pkgInfoFifo_V_sou_write <= ap_const_logic_1;
        else 
            tx_pkgInfoFifo_V_sou_write <= ap_const_logic_0;
        end if; 
    end process;


    tx_pkgInfoFifo_V_typ_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, tx_pkgInfoFifo_V_typ_full_n, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)))) then 
            tx_pkgInfoFifo_V_typ_blk_n <= tx_pkgInfoFifo_V_typ_full_n;
        else 
            tx_pkgInfoFifo_V_typ_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_pkgInfoFifo_V_typ_din_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            tx_pkgInfoFifo_V_typ_din <= ap_const_lv1_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)))) then 
            tx_pkgInfoFifo_V_typ_din <= ap_const_lv1_1;
        else 
            tx_pkgInfoFifo_V_typ_din <= "X";
        end if; 
    end process;


    tx_pkgInfoFifo_V_typ_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tx_pkgInfoFifo_V_typ_write <= ap_const_logic_1;
        else 
            tx_pkgInfoFifo_V_typ_write <= ap_const_logic_0;
        end if; 
    end process;


    tx_pkgInfoFifo_V_wor_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, tx_pkgInfoFifo_V_wor_full_n, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1)))) then 
            tx_pkgInfoFifo_V_wor_blk_n <= tx_pkgInfoFifo_V_wor_full_n;
        else 
            tx_pkgInfoFifo_V_wor_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_pkgInfoFifo_V_wor_din_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0_01001, tmp_words_V_5_fu_242_p1, tmp_words_V_3_fu_266_p1, tmp_words_V_1_fu_271_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1)) then 
                tx_pkgInfoFifo_V_wor_din <= tmp_words_V_1_fu_271_p1;
            elsif ((ap_predicate_op33_write_state3 = ap_const_boolean_1)) then 
                tx_pkgInfoFifo_V_wor_din <= tmp_words_V_3_fu_266_p1;
            elsif ((ap_predicate_op28_write_state3 = ap_const_boolean_1)) then 
                tx_pkgInfoFifo_V_wor_din <= tmp_words_V_5_fu_242_p1;
            else 
                tx_pkgInfoFifo_V_wor_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tx_pkgInfoFifo_V_wor_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tx_pkgInfoFifo_V_wor_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_reg_275_pp0_iter1_reg, ap_predicate_op28_write_state3, ap_predicate_op33_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op28_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_reg_275_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op33_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tx_pkgInfoFifo_V_wor_write <= ap_const_logic_1;
        else 
            tx_pkgInfoFifo_V_wor_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln215_1_fu_247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_len_V_5_reg_298),33));
    zext_ln215_2_fu_223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_len_V_5_reg_298),33));
    zext_ln215_fu_159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_len_V_fu_131_p4),33));
end behav;
