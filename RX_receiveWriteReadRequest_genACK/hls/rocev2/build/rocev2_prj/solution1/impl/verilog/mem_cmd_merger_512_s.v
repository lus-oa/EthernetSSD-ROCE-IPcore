// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mem_cmd_merger_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rx_remoteMemCmd_V_dout,
        rx_remoteMemCmd_V_empty_n,
        rx_remoteMemCmd_V_read,
        tx_localMemCmdFifo_V_dout,
        tx_localMemCmdFifo_V_empty_n,
        tx_localMemCmdFifo_V_read,
        tx_pkgInfoFifo_V_typ_din,
        tx_pkgInfoFifo_V_typ_full_n,
        tx_pkgInfoFifo_V_typ_write,
        tx_pkgInfoFifo_V_sou_din,
        tx_pkgInfoFifo_V_sou_full_n,
        tx_pkgInfoFifo_V_sou_write,
        tx_pkgInfoFifo_V_wor_din,
        tx_pkgInfoFifo_V_wor_full_n,
        tx_pkgInfoFifo_V_wor_write,
        m_axis_mem_read_cmd_TREADY,
        m_axis_mem_read_cmd_TDATA,
        m_axis_mem_read_cmd_TVALID,
        m_axis_mem_read_cmd_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [112:0] rx_remoteMemCmd_V_dout;
input   rx_remoteMemCmd_V_empty_n;
output   rx_remoteMemCmd_V_read;
input  [112:0] tx_localMemCmdFifo_V_dout;
input   tx_localMemCmdFifo_V_empty_n;
output   tx_localMemCmdFifo_V_read;
output  [0:0] tx_pkgInfoFifo_V_typ_din;
input   tx_pkgInfoFifo_V_typ_full_n;
output   tx_pkgInfoFifo_V_typ_write;
output  [0:0] tx_pkgInfoFifo_V_sou_din;
input   tx_pkgInfoFifo_V_sou_full_n;
output   tx_pkgInfoFifo_V_sou_write;
output  [28:0] tx_pkgInfoFifo_V_wor_din;
input   tx_pkgInfoFifo_V_wor_full_n;
output   tx_pkgInfoFifo_V_wor_write;
input   m_axis_mem_read_cmd_TREADY;
output  [95:0] m_axis_mem_read_cmd_TDATA;
output   m_axis_mem_read_cmd_TVALID;
output  [0:0] m_axis_mem_read_cmd_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rx_remoteMemCmd_V_read;
reg tx_localMemCmdFifo_V_read;
reg[0:0] tx_pkgInfoFifo_V_typ_din;
reg tx_pkgInfoFifo_V_typ_write;
reg[0:0] tx_pkgInfoFifo_V_sou_din;
reg tx_pkgInfoFifo_V_sou_write;
reg[28:0] tx_pkgInfoFifo_V_wor_din;
reg tx_pkgInfoFifo_V_wor_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_76_p3;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_reg_275;
wire   [0:0] tmp_67_nbreadreq_fu_90_p3;
reg    ap_predicate_op16_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    io_acc_block_signal_op28;
reg   [0:0] tmp_reg_275_pp0_iter1_reg;
reg   [0:0] tmp_67_reg_294;
reg   [0:0] icmp_ln883_reg_309;
reg    ap_predicate_op28_write_state3;
wire    io_acc_block_signal_op33;
reg    ap_predicate_op33_write_state3;
wire    io_acc_block_signal_op36;
reg    ap_block_state3_pp0_stage0_iter2;
wire    out_V_data_1_ack_in;
reg    ap_predicate_op23_write_state3;
reg    ap_block_state3_io;
wire    out_V_data_1_ack_out;
reg   [1:0] out_V_data_1_state;
wire    out_V_dest_V_1_ack_out;
reg   [1:0] out_V_dest_V_1_state;
reg    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] tmp_reg_275_pp0_iter2_reg;
reg   [0:0] tmp_67_reg_294_pp0_iter2_reg;
reg   [0:0] icmp_ln883_reg_309_pp0_iter2_reg;
reg    ap_predicate_op44_write_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg   [95:0] out_V_data_1_data_in;
reg   [95:0] out_V_data_1_data_out;
reg    out_V_data_1_vld_in;
wire    out_V_data_1_vld_out;
reg   [95:0] out_V_data_1_payload_A;
reg   [95:0] out_V_data_1_payload_B;
reg    out_V_data_1_sel_rd;
reg    out_V_data_1_sel_wr;
wire    out_V_data_1_sel;
wire    out_V_data_1_load_A;
wire    out_V_data_1_load_B;
wire    out_V_data_1_state_cmp_full;
reg   [0:0] out_V_dest_V_1_data_in;
reg   [0:0] out_V_dest_V_1_data_out;
reg    out_V_dest_V_1_vld_in;
wire    out_V_dest_V_1_vld_out;
wire    out_V_dest_V_1_ack_in;
reg   [0:0] out_V_dest_V_1_payload_A;
reg   [0:0] out_V_dest_V_1_payload_B;
reg    out_V_dest_V_1_sel_rd;
reg    out_V_dest_V_1_sel_wr;
wire    out_V_dest_V_1_sel;
wire    out_V_dest_V_1_load_A;
wire    out_V_dest_V_1_load_B;
wire    out_V_dest_V_1_state_cmp_full;
reg    m_axis_mem_read_cmd_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    rx_remoteMemCmd_V_blk_n;
reg    tx_pkgInfoFifo_V_typ_blk_n;
reg    tx_pkgInfoFifo_V_sou_blk_n;
reg    tx_pkgInfoFifo_V_wor_blk_n;
reg    tx_localMemCmdFifo_V_blk_n;
reg   [0:0] tmp_dest_V_reg_279;
reg   [0:0] tmp_dest_V_reg_279_pp0_iter1_reg;
reg   [95:0] tmp_data_reg_284;
reg   [95:0] tmp_data_reg_284_pp0_iter1_reg;
reg   [26:0] tmp_words_V_reg_289;
reg   [26:0] tmp_words_V_reg_289_pp0_iter1_reg;
reg   [31:0] tmp_data_len_V_5_reg_298;
reg   [0:0] tmp_dest_V_3_reg_304;
wire   [0:0] icmp_ln883_fu_207_p2;
reg   [95:0] tmp_data_1_reg_313;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [28:0] tmp_words_V_5_fu_242_p1;
wire   [28:0] tmp_words_V_3_fu_266_p1;
wire   [28:0] tmp_words_V_1_fu_271_p1;
wire   [31:0] tmp_data_len_V_fu_131_p4;
wire   [32:0] zext_ln215_fu_159_p1;
wire   [32:0] add_ln1371_fu_163_p2;
wire   [63:0] tmp_data_addr_V_fu_179_p4;
wire   [32:0] zext_ln215_2_fu_223_p1;
wire   [32:0] add_ln1371_2_fu_226_p2;
wire   [26:0] tmp_words_V_4_fu_232_p4;
wire   [32:0] zext_ln215_1_fu_247_p1;
wire   [32:0] add_ln1371_1_fu_250_p2;
wire   [26:0] tmp_words_V_2_fu_256_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 out_V_data_1_state = 2'd0;
#0 out_V_dest_V_1_state = 2'd0;
#0 out_V_data_1_sel_rd = 1'b0;
#0 out_V_data_1_sel_wr = 1'b0;
#0 out_V_dest_V_1_sel_rd = 1'b0;
#0 out_V_dest_V_1_sel_wr = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((out_V_data_1_vld_out == 1'b1) & (out_V_data_1_ack_out == 1'b1))) begin
            out_V_data_1_sel_rd <= ~out_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((out_V_data_1_vld_in == 1'b1) & (out_V_data_1_ack_in == 1'b1))) begin
            out_V_data_1_sel_wr <= ~out_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_data_1_state <= 2'd0;
    end else begin
        if ((((out_V_data_1_vld_in == 1'b0) & (out_V_data_1_ack_out == 1'b1) & (out_V_data_1_state == 2'd3)) | ((out_V_data_1_vld_in == 1'b0) & (out_V_data_1_state == 2'd2)))) begin
            out_V_data_1_state <= 2'd2;
        end else if ((((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_data_1_state == 2'd1)) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_data_1_vld_in == 1'b1) & (out_V_data_1_state == 2'd3)))) begin
            out_V_data_1_state <= 2'd1;
        end else if ((((out_V_data_1_ack_out == 1'b1) & (out_V_data_1_state == 2'd1)) | (~((out_V_data_1_vld_in == 1'b0) & (out_V_data_1_ack_out == 1'b1)) & ~((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_data_1_vld_in == 1'b1)) & (out_V_data_1_state == 2'd3)) | ((out_V_data_1_vld_in == 1'b1) & (out_V_data_1_state == 2'd2)))) begin
            out_V_data_1_state <= 2'd3;
        end else begin
            out_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((out_V_dest_V_1_vld_out == 1'b1) & (out_V_dest_V_1_ack_out == 1'b1))) begin
            out_V_dest_V_1_sel_rd <= ~out_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_dest_V_1_sel_wr <= 1'b0;
    end else begin
        if (((out_V_dest_V_1_ack_in == 1'b1) & (out_V_dest_V_1_vld_in == 1'b1))) begin
            out_V_dest_V_1_sel_wr <= ~out_V_dest_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        out_V_dest_V_1_state <= 2'd0;
    end else begin
        if ((((out_V_dest_V_1_vld_in == 1'b0) & (out_V_dest_V_1_ack_out == 1'b1) & (out_V_dest_V_1_state == 2'd3)) | ((out_V_dest_V_1_vld_in == 1'b0) & (out_V_dest_V_1_state == 2'd2)))) begin
            out_V_dest_V_1_state <= 2'd2;
        end else if ((((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_dest_V_1_state == 2'd1)) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_dest_V_1_vld_in == 1'b1) & (out_V_dest_V_1_state == 2'd3)))) begin
            out_V_dest_V_1_state <= 2'd1;
        end else if ((((out_V_dest_V_1_ack_out == 1'b1) & (out_V_dest_V_1_state == 2'd1)) | (~((out_V_dest_V_1_vld_in == 1'b0) & (out_V_dest_V_1_ack_out == 1'b1)) & ~((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_dest_V_1_vld_in == 1'b1)) & (out_V_dest_V_1_state == 2'd3)) | ((out_V_dest_V_1_vld_in == 1'b1) & (out_V_dest_V_1_state == 2'd2)))) begin
            out_V_dest_V_1_state <= 2'd3;
        end else begin
            out_V_dest_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_275 == 1'd0) & (tmp_67_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln883_reg_309 <= icmp_ln883_fu_207_p2;
        tmp_data_len_V_5_reg_298 <= {{tx_localMemCmdFifo_V_dout[111:80]}};
        tmp_dest_V_3_reg_304 <= tx_localMemCmdFifo_V_dout[32'd112];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln883_reg_309_pp0_iter2_reg <= icmp_ln883_reg_309;
        tmp_67_reg_294_pp0_iter2_reg <= tmp_67_reg_294;
        tmp_reg_275_pp0_iter2_reg <= tmp_reg_275_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((out_V_data_1_load_A == 1'b1)) begin
        out_V_data_1_payload_A <= out_V_data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((out_V_data_1_load_B == 1'b1)) begin
        out_V_data_1_payload_B <= out_V_data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((out_V_dest_V_1_load_A == 1'b1)) begin
        out_V_dest_V_1_payload_A <= out_V_dest_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((out_V_dest_V_1_load_B == 1'b1)) begin
        out_V_dest_V_1_payload_B <= out_V_dest_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_275 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_67_reg_294 <= tmp_67_nbreadreq_fu_90_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_fu_207_p2 == 1'd0) & (tmp_reg_275 == 1'd0) & (tmp_67_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_1_reg_313 <= {{tx_localMemCmdFifo_V_dout[111:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_76_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_reg_284 <= {{rx_remoteMemCmd_V_dout[111:16]}};
        tmp_dest_V_reg_279 <= rx_remoteMemCmd_V_dout[32'd112];
        tmp_words_V_reg_289 <= {{add_ln1371_fu_163_p2[32:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_reg_284_pp0_iter1_reg <= tmp_data_reg_284;
        tmp_dest_V_reg_279_pp0_iter1_reg <= tmp_dest_V_reg_279;
        tmp_reg_275 <= tmp_nbreadreq_fu_76_p3;
        tmp_reg_275_pp0_iter1_reg <= tmp_reg_275;
        tmp_words_V_reg_289_pp0_iter1_reg <= tmp_words_V_reg_289;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_reg_275_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op44_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op23_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        m_axis_mem_read_cmd_TDATA_blk_n = out_V_data_1_state[1'd1];
    end else begin
        m_axis_mem_read_cmd_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((tmp_reg_275_pp0_iter1_reg == 1'd1)) begin
            out_V_data_1_data_in = tmp_data_reg_284_pp0_iter1_reg;
        end else if ((ap_predicate_op23_write_state3 == 1'b1)) begin
            out_V_data_1_data_in = tmp_data_1_reg_313;
        end else begin
            out_V_data_1_data_in = 'bx;
        end
    end else begin
        out_V_data_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((out_V_data_1_sel == 1'b1)) begin
        out_V_data_1_data_out = out_V_data_1_payload_B;
    end else begin
        out_V_data_1_data_out = out_V_data_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op23_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        out_V_data_1_vld_in = 1'b1;
    end else begin
        out_V_data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((tmp_reg_275_pp0_iter1_reg == 1'd1)) begin
            out_V_dest_V_1_data_in = tmp_dest_V_reg_279_pp0_iter1_reg;
        end else if ((ap_predicate_op23_write_state3 == 1'b1)) begin
            out_V_dest_V_1_data_in = tmp_dest_V_3_reg_304;
        end else begin
            out_V_dest_V_1_data_in = 'bx;
        end
    end else begin
        out_V_dest_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((out_V_dest_V_1_sel == 1'b1)) begin
        out_V_dest_V_1_data_out = out_V_dest_V_1_payload_B;
    end else begin
        out_V_dest_V_1_data_out = out_V_dest_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op23_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        out_V_dest_V_1_vld_in = 1'b1;
    end else begin
        out_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_76_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rx_remoteMemCmd_V_blk_n = rx_remoteMemCmd_V_empty_n;
    end else begin
        rx_remoteMemCmd_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_76_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_remoteMemCmd_V_read = 1'b1;
    end else begin
        rx_remoteMemCmd_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state2 == 1'b1))) begin
        tx_localMemCmdFifo_V_blk_n = tx_localMemCmdFifo_V_empty_n;
    end else begin
        tx_localMemCmdFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tx_localMemCmdFifo_V_read = 1'b1;
    end else begin
        tx_localMemCmdFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1)))) begin
        tx_pkgInfoFifo_V_sou_blk_n = tx_pkgInfoFifo_V_sou_full_n;
    end else begin
        tx_pkgInfoFifo_V_sou_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1))) begin
        tx_pkgInfoFifo_V_sou_din = 1'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        tx_pkgInfoFifo_V_sou_din = 1'd0;
    end else begin
        tx_pkgInfoFifo_V_sou_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tx_pkgInfoFifo_V_sou_write = 1'b1;
    end else begin
        tx_pkgInfoFifo_V_sou_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1)))) begin
        tx_pkgInfoFifo_V_typ_blk_n = tx_pkgInfoFifo_V_typ_full_n;
    end else begin
        tx_pkgInfoFifo_V_typ_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_275_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tx_pkgInfoFifo_V_typ_din = 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1)))) begin
        tx_pkgInfoFifo_V_typ_din = 1'd1;
    end else begin
        tx_pkgInfoFifo_V_typ_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tx_pkgInfoFifo_V_typ_write = 1'b1;
    end else begin
        tx_pkgInfoFifo_V_typ_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1)))) begin
        tx_pkgInfoFifo_V_wor_blk_n = tx_pkgInfoFifo_V_wor_full_n;
    end else begin
        tx_pkgInfoFifo_V_wor_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((tmp_reg_275_pp0_iter1_reg == 1'd1)) begin
            tx_pkgInfoFifo_V_wor_din = tmp_words_V_1_fu_271_p1;
        end else if ((ap_predicate_op33_write_state3 == 1'b1)) begin
            tx_pkgInfoFifo_V_wor_din = tmp_words_V_3_fu_266_p1;
        end else if ((ap_predicate_op28_write_state3 == 1'b1)) begin
            tx_pkgInfoFifo_V_wor_din = tmp_words_V_5_fu_242_p1;
        end else begin
            tx_pkgInfoFifo_V_wor_din = 'bx;
        end
    end else begin
        tx_pkgInfoFifo_V_wor_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op28_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op33_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tx_pkgInfoFifo_V_wor_write = 1'b1;
    end else begin
        tx_pkgInfoFifo_V_wor_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1371_1_fu_250_p2 = (zext_ln215_1_fu_247_p1 + 33'd63);

assign add_ln1371_2_fu_226_p2 = (zext_ln215_2_fu_223_p1 + 33'd63);

assign add_ln1371_fu_163_p2 = (zext_ln215_fu_159_p1 + 33'd63);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((tx_localMemCmdFifo_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op16_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_76_p3 == 1'd1) & (rx_remoteMemCmd_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((out_V_dest_V_1_state == 2'd1) | (out_V_data_1_state == 2'd1) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_dest_V_1_state == 2'd3)) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_data_1_state == 2'd3)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((io_acc_block_signal_op33 == 1'b0) & (ap_predicate_op33_write_state3 == 1'b1)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (io_acc_block_signal_op36 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((tx_localMemCmdFifo_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op16_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_76_p3 == 1'd1) & (rx_remoteMemCmd_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | (out_V_dest_V_1_state == 2'd1) | (out_V_data_1_state == 2'd1) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_dest_V_1_state == 2'd3)) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_data_1_state == 2'd3)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((io_acc_block_signal_op33 == 1'b0) & (ap_predicate_op33_write_state3 == 1'b1)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (io_acc_block_signal_op36 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((tx_localMemCmdFifo_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op16_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_76_p3 == 1'd1) & (rx_remoteMemCmd_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | (out_V_dest_V_1_state == 2'd1) | (out_V_data_1_state == 2'd1) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_dest_V_1_state == 2'd3)) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_data_1_state == 2'd3)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((io_acc_block_signal_op33 == 1'b0) & (ap_predicate_op33_write_state3 == 1'b1)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (io_acc_block_signal_op36 == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_76_p3 == 1'd1) & (rx_remoteMemCmd_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((tx_localMemCmdFifo_V_empty_n == 1'b0) & (ap_predicate_op16_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_io = (((out_V_data_1_ack_in == 1'b0) & (ap_predicate_op23_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (out_V_data_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((io_acc_block_signal_op33 == 1'b0) & (ap_predicate_op33_write_state3 == 1'b1)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_write_state3 == 1'b1)) | ((tmp_reg_275_pp0_iter1_reg == 1'd1) & (io_acc_block_signal_op36 == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = (((tmp_reg_275_pp0_iter2_reg == 1'd1) & (out_V_data_1_ack_in == 1'b0)) | ((out_V_data_1_ack_in == 1'b0) & (ap_predicate_op44_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((out_V_dest_V_1_state == 2'd1) | (out_V_data_1_state == 2'd1) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_dest_V_1_state == 2'd3)) | ((m_axis_mem_read_cmd_TREADY == 1'b0) & (out_V_data_1_state == 2'd3)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op16_read_state2 = ((tmp_reg_275 == 1'd0) & (tmp_67_nbreadreq_fu_90_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op23_write_state3 = ((icmp_ln883_reg_309 == 1'd0) & (tmp_reg_275_pp0_iter1_reg == 1'd0) & (tmp_67_reg_294 == 1'd1));
end

always @ (*) begin
    ap_predicate_op28_write_state3 = ((icmp_ln883_reg_309 == 1'd0) & (tmp_reg_275_pp0_iter1_reg == 1'd0) & (tmp_67_reg_294 == 1'd1));
end

always @ (*) begin
    ap_predicate_op33_write_state3 = ((tmp_reg_275_pp0_iter1_reg == 1'd0) & (icmp_ln883_reg_309 == 1'd1) & (tmp_67_reg_294 == 1'd1));
end

always @ (*) begin
    ap_predicate_op44_write_state4 = ((icmp_ln883_reg_309_pp0_iter2_reg == 1'd0) & (tmp_reg_275_pp0_iter2_reg == 1'd0) & (tmp_67_reg_294_pp0_iter2_reg == 1'd1));
end

assign icmp_ln883_fu_207_p2 = ((tmp_data_addr_V_fu_179_p4 == 64'd0) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op28 = (tx_pkgInfoFifo_V_wor_full_n & tx_pkgInfoFifo_V_typ_full_n & tx_pkgInfoFifo_V_sou_full_n);

assign io_acc_block_signal_op33 = (tx_pkgInfoFifo_V_wor_full_n & tx_pkgInfoFifo_V_typ_full_n & tx_pkgInfoFifo_V_sou_full_n);

assign io_acc_block_signal_op36 = (tx_pkgInfoFifo_V_wor_full_n & tx_pkgInfoFifo_V_typ_full_n & tx_pkgInfoFifo_V_sou_full_n);

assign m_axis_mem_read_cmd_TDATA = out_V_data_1_data_out;

assign m_axis_mem_read_cmd_TDEST = out_V_dest_V_1_data_out;

assign m_axis_mem_read_cmd_TVALID = out_V_dest_V_1_state[1'd0];

assign out_V_data_1_ack_in = out_V_data_1_state[1'd1];

assign out_V_data_1_ack_out = m_axis_mem_read_cmd_TREADY;

assign out_V_data_1_load_A = (out_V_data_1_state_cmp_full & ~out_V_data_1_sel_wr);

assign out_V_data_1_load_B = (out_V_data_1_state_cmp_full & out_V_data_1_sel_wr);

assign out_V_data_1_sel = out_V_data_1_sel_rd;

assign out_V_data_1_state_cmp_full = ((out_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_V_data_1_vld_out = out_V_data_1_state[1'd0];

assign out_V_dest_V_1_ack_in = out_V_dest_V_1_state[1'd1];

assign out_V_dest_V_1_ack_out = m_axis_mem_read_cmd_TREADY;

assign out_V_dest_V_1_load_A = (out_V_dest_V_1_state_cmp_full & ~out_V_dest_V_1_sel_wr);

assign out_V_dest_V_1_load_B = (out_V_dest_V_1_state_cmp_full & out_V_dest_V_1_sel_wr);

assign out_V_dest_V_1_sel = out_V_dest_V_1_sel_rd;

assign out_V_dest_V_1_state_cmp_full = ((out_V_dest_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_V_dest_V_1_vld_out = out_V_dest_V_1_state[1'd0];

assign tmp_67_nbreadreq_fu_90_p3 = tx_localMemCmdFifo_V_empty_n;

assign tmp_data_addr_V_fu_179_p4 = {{tx_localMemCmdFifo_V_dout[79:16]}};

assign tmp_data_len_V_fu_131_p4 = {{rx_remoteMemCmd_V_dout[111:80]}};

assign tmp_nbreadreq_fu_76_p3 = rx_remoteMemCmd_V_empty_n;

assign tmp_words_V_1_fu_271_p1 = tmp_words_V_reg_289_pp0_iter1_reg;

assign tmp_words_V_2_fu_256_p4 = {{add_ln1371_1_fu_250_p2[32:6]}};

assign tmp_words_V_3_fu_266_p1 = tmp_words_V_2_fu_256_p4;

assign tmp_words_V_4_fu_232_p4 = {{add_ln1371_2_fu_226_p2[32:6]}};

assign tmp_words_V_5_fu_242_p1 = tmp_words_V_4_fu_232_p4;

assign zext_ln215_1_fu_247_p1 = tmp_data_len_V_5_reg_298;

assign zext_ln215_2_fu_223_p1 = tmp_data_len_V_5_reg_298;

assign zext_ln215_fu_159_p1 = tmp_data_len_V_fu_131_p4;

endmodule //mem_cmd_merger_512_s
