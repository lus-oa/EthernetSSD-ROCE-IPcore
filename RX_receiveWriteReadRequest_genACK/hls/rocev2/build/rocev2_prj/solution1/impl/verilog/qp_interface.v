// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module qp_interface (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        contextIn_V_TVALID,
        stateTable2qpi_rsp_V_dout,
        stateTable2qpi_rsp_V_empty_n,
        stateTable2qpi_rsp_V_read,
        qpi2stateTable_upd_r_1_din,
        qpi2stateTable_upd_r_1_full_n,
        qpi2stateTable_upd_r_1_write,
        if2msnTable_init_V_din,
        if2msnTable_init_V_full_n,
        if2msnTable_init_V_write,
        contextIn_V_TDATA,
        contextIn_V_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv68_0 = 68'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   contextIn_V_TVALID;
input  [122:0] stateTable2qpi_rsp_V_dout;
input   stateTable2qpi_rsp_V_empty_n;
output   stateTable2qpi_rsp_V_read;
output  [67:0] qpi2stateTable_upd_r_1_din;
input   qpi2stateTable_upd_r_1_full_n;
output   qpi2stateTable_upd_r_1_write;
output  [47:0] if2msnTable_init_V_din;
input   if2msnTable_init_V_full_n;
output   if2msnTable_init_V_write;
input  [143:0] contextIn_V_TDATA;
output   contextIn_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stateTable2qpi_rsp_V_read;
reg[67:0] qpi2stateTable_upd_r_1_din;
reg qpi2stateTable_upd_r_1_write;
reg if2msnTable_init_V_write;
reg contextIn_V_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_36_nbreadreq_fu_96_p3;
reg    ap_predicate_op7_read_state1;
wire   [0:0] tmp_nbreadreq_fu_110_p3;
reg    ap_predicate_op22_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] qp_fsmState_load_reg_312;
reg   [0:0] tmp_36_reg_316;
reg    ap_predicate_op31_write_state2;
reg   [0:0] tmp_reg_325;
reg    ap_predicate_op40_write_state2;
reg    ap_predicate_op44_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] qp_fsmState;
reg   [2:0] context_newState;
reg   [23:0] context_qp_num_V;
reg   [23:0] context_remote_psn_V;
reg   [23:0] context_local_psn_V;
reg   [15:0] context_r_key_V;
reg    contextIn_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    qpi2stateTable_upd_r_1_blk_n;
reg    stateTable2qpi_rsp_V_blk_n;
reg    if2msnTable_init_V_blk_n;
reg   [15:0] tmp_qpn_V_12_reg_320;
reg    ap_block_pp0_stage0_subdone;
wire   [2:0] trunc_ln109_fu_142_p1;
reg   [67:0] tmp_1_2_fu_249_p4;
reg    ap_block_pp0_stage0_01001;
wire   [67:0] tmp_3_fu_280_p6;
wire   [67:0] tmp_1_fu_238_p5;
wire   [15:0] tmp_qpn_V_fu_264_p1;
wire   [31:0] tmp_30_i_fu_299_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_102;
reg    ap_condition_172;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 qp_fsmState = 1'd0;
#0 context_newState = 3'd0;
#0 context_qp_num_V = 24'd0;
#0 context_remote_psn_V = 24'd0;
#0 context_local_psn_V = 24'd0;
#0 context_r_key_V = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_102)) begin
        if (((tmp_nbreadreq_fu_110_p3 == 1'd1) & (qp_fsmState == 1'd1))) begin
            qp_fsmState <= 1'd0;
        end else if (((tmp_36_nbreadreq_fu_96_p3 == 1'd1) & (qp_fsmState == 1'd0))) begin
            qp_fsmState <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_36_nbreadreq_fu_96_p3 == 1'd1) & (qp_fsmState == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        context_local_psn_V <= {{contextIn_V_TDATA[74:51]}};
        context_newState <= trunc_ln109_fu_142_p1;
        context_qp_num_V <= {{contextIn_V_TDATA[26:3]}};
        context_r_key_V <= {{contextIn_V_TDATA[90:75]}};
        context_remote_psn_V <= {{contextIn_V_TDATA[50:27]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qp_fsmState_load_reg_312 <= qp_fsmState;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (qp_fsmState == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_36_reg_316 <= tmp_36_nbreadreq_fu_96_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_36_nbreadreq_fu_96_p3 == 1'd1) & (qp_fsmState == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_qpn_V_12_reg_320 <= {{contextIn_V_TDATA[18:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (qp_fsmState == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_325 <= tmp_nbreadreq_fu_110_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        contextIn_V_TDATA_blk_n = contextIn_V_TVALID;
    end else begin
        contextIn_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        contextIn_V_TREADY = 1'b1;
    end else begin
        contextIn_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op44_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if2msnTable_init_V_blk_n = if2msnTable_init_V_full_n;
    end else begin
        if2msnTable_init_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op44_write_state2 == 1'b1))) begin
        if2msnTable_init_V_write = 1'b1;
    end else begin
        if2msnTable_init_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op31_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        qpi2stateTable_upd_r_1_blk_n = qpi2stateTable_upd_r_1_full_n;
    end else begin
        qpi2stateTable_upd_r_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_172)) begin
        if ((ap_predicate_op40_write_state2 == 1'b1)) begin
            qpi2stateTable_upd_r_1_din = tmp_3_fu_280_p6;
        end else if ((ap_predicate_op31_write_state2 == 1'b1)) begin
            qpi2stateTable_upd_r_1_din = tmp_1_2_fu_249_p4;
        end else begin
            qpi2stateTable_upd_r_1_din = 'bx;
        end
    end else begin
        qpi2stateTable_upd_r_1_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op31_write_state2 == 1'b1)))) begin
        qpi2stateTable_upd_r_1_write = 1'b1;
    end else begin
        qpi2stateTable_upd_r_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op22_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        stateTable2qpi_rsp_V_blk_n = stateTable2qpi_rsp_V_empty_n;
    end else begin
        stateTable2qpi_rsp_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op22_read_state1 == 1'b1))) begin
        stateTable2qpi_rsp_V_read = 1'b1;
    end else begin
        stateTable2qpi_rsp_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((if2msnTable_init_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((stateTable2qpi_rsp_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((contextIn_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((if2msnTable_init_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((stateTable2qpi_rsp_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((contextIn_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((if2msnTable_init_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((stateTable2qpi_rsp_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((contextIn_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((stateTable2qpi_rsp_V_empty_n == 1'b0) & (ap_predicate_op22_read_state1 == 1'b1)) | ((contextIn_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((if2msnTable_init_V_full_n == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)) | ((qpi2stateTable_upd_r_1_full_n == 1'b0) & (ap_predicate_op31_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_102 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_172 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op22_read_state1 = ((tmp_nbreadreq_fu_110_p3 == 1'd1) & (qp_fsmState == 1'd1));
end

always @ (*) begin
    ap_predicate_op31_write_state2 = ((tmp_36_reg_316 == 1'd1) & (qp_fsmState_load_reg_312 == 1'd0));
end

always @ (*) begin
    ap_predicate_op40_write_state2 = ((tmp_reg_325 == 1'd1) & (qp_fsmState_load_reg_312 == 1'd1));
end

always @ (*) begin
    ap_predicate_op44_write_state2 = ((tmp_reg_325 == 1'd1) & (qp_fsmState_load_reg_312 == 1'd1));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((tmp_36_nbreadreq_fu_96_p3 == 1'd1) & (qp_fsmState == 1'd0));
end

assign if2msnTable_init_V_din = tmp_30_i_fu_299_p3;

always @ (*) begin
    tmp_1_2_fu_249_p4 = tmp_1_fu_238_p5;
    tmp_1_2_fu_249_p4[32'd67] = |(1'd0);
end

assign tmp_1_fu_238_p5 = {{ap_const_lv68_0[67:16]}, {tmp_qpn_V_12_reg_320}};

assign tmp_30_i_fu_299_p3 = {{context_r_key_V}, {tmp_qpn_V_fu_264_p1}};

assign tmp_36_nbreadreq_fu_96_p3 = contextIn_V_TVALID;

assign tmp_3_fu_280_p6 = {{{{{{{{1'd1}, {context_local_psn_V}}}, {context_remote_psn_V}}}, {context_newState}}}, {tmp_qpn_V_fu_264_p1}};

assign tmp_nbreadreq_fu_110_p3 = stateTable2qpi_rsp_V_empty_n;

assign tmp_qpn_V_fu_264_p1 = context_qp_num_V[15:0];

assign trunc_ln109_fu_142_p1 = contextIn_V_TDATA[2:0];

endmodule //qp_interface
