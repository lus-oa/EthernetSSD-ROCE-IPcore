// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conn_table (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        qpi2connTable_req_V_TVALID,
        tx_ibhconnTable_req_s_3_dout,
        tx_ibhconnTable_req_s_3_empty_n,
        tx_ibhconnTable_req_s_3_read,
        tx_connTable2ibh_rsp_1_din,
        tx_connTable2ibh_rsp_1_full_n,
        tx_connTable2ibh_rsp_1_write,
        qpi2connTable_req_V_TDATA,
        qpi2connTable_req_V_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   qpi2connTable_req_V_TVALID;
input  [15:0] tx_ibhconnTable_req_s_3_dout;
input   tx_ibhconnTable_req_s_3_empty_n;
output   tx_ibhconnTable_req_s_3_read;
output  [167:0] tx_connTable2ibh_rsp_1_din;
input   tx_connTable2ibh_rsp_1_full_n;
output   tx_connTable2ibh_rsp_1_write;
input  [183:0] qpi2connTable_req_V_TDATA;
output   qpi2connTable_req_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tx_ibhconnTable_req_s_3_read;
reg tx_connTable2ibh_rsp_1_write;
reg qpi2connTable_req_V_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_66_p3;
wire   [0:0] tmp_111_nbreadreq_fu_74_p3;
reg    ap_predicate_op7_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_reg_226;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [8:0] conn_table_remote_qp_address0;
reg    conn_table_remote_qp_ce0;
reg    conn_table_remote_qp_we0;
wire   [23:0] conn_table_remote_qp_d0;
wire   [23:0] conn_table_remote_qp_q0;
reg   [8:0] conn_table_remote_ip_address0;
reg    conn_table_remote_ip_ce0;
reg    conn_table_remote_ip_we0;
wire   [127:0] conn_table_remote_ip_d0;
wire   [127:0] conn_table_remote_ip_q0;
reg   [8:0] conn_table_remote_ud_address0;
reg    conn_table_remote_ud_ce0;
reg    conn_table_remote_ud_we0;
wire   [15:0] conn_table_remote_ud_d0;
wire   [15:0] conn_table_remote_ud_q0;
reg    qpi2connTable_req_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    tx_ibhconnTable_req_s_3_blk_n;
reg    tx_connTable2ibh_rsp_1_blk_n;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_8_fu_201_p1;
wire   [63:0] zext_ln544_fu_208_p1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] trunc_ln321_fu_164_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_113;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conn_table_conn_table_remote_qp #(
    .DataWidth( 24 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
conn_table_remote_qp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conn_table_remote_qp_address0),
    .ce0(conn_table_remote_qp_ce0),
    .we0(conn_table_remote_qp_we0),
    .d0(conn_table_remote_qp_d0),
    .q0(conn_table_remote_qp_q0)
);

conn_table_conn_table_remote_ip #(
    .DataWidth( 128 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
conn_table_remote_ip_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conn_table_remote_ip_address0),
    .ce0(conn_table_remote_ip_ce0),
    .we0(conn_table_remote_ip_we0),
    .d0(conn_table_remote_ip_d0),
    .q0(conn_table_remote_ip_q0)
);

conn_table_conn_table_remote_ud #(
    .DataWidth( 16 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
conn_table_remote_ud_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conn_table_remote_ud_address0),
    .ce0(conn_table_remote_ud_ce0),
    .we0(conn_table_remote_ud_we0),
    .d0(conn_table_remote_ud_d0),
    .q0(conn_table_remote_ud_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_226 <= tmp_nbreadreq_fu_66_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((tmp_nbreadreq_fu_66_p3 == 1'd1)) begin
            conn_table_remote_ip_address0 = zext_ln544_fu_208_p1;
        end else if (((tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0))) begin
            conn_table_remote_ip_address0 = zext_ln544_8_fu_201_p1;
        end else begin
            conn_table_remote_ip_address0 = 'bx;
        end
    end else begin
        conn_table_remote_ip_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_66_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conn_table_remote_ip_ce0 = 1'b1;
    end else begin
        conn_table_remote_ip_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conn_table_remote_ip_we0 = 1'b1;
    end else begin
        conn_table_remote_ip_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((tmp_nbreadreq_fu_66_p3 == 1'd1)) begin
            conn_table_remote_qp_address0 = zext_ln544_fu_208_p1;
        end else if (((tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0))) begin
            conn_table_remote_qp_address0 = zext_ln544_8_fu_201_p1;
        end else begin
            conn_table_remote_qp_address0 = 'bx;
        end
    end else begin
        conn_table_remote_qp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_66_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conn_table_remote_qp_ce0 = 1'b1;
    end else begin
        conn_table_remote_qp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conn_table_remote_qp_we0 = 1'b1;
    end else begin
        conn_table_remote_qp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((tmp_nbreadreq_fu_66_p3 == 1'd1)) begin
            conn_table_remote_ud_address0 = zext_ln544_fu_208_p1;
        end else if (((tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0))) begin
            conn_table_remote_ud_address0 = zext_ln544_8_fu_201_p1;
        end else begin
            conn_table_remote_ud_address0 = 'bx;
        end
    end else begin
        conn_table_remote_ud_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_66_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conn_table_remote_ud_ce0 = 1'b1;
    end else begin
        conn_table_remote_ud_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conn_table_remote_ud_we0 = 1'b1;
    end else begin
        conn_table_remote_ud_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        qpi2connTable_req_V_TDATA_blk_n = qpi2connTable_req_V_TVALID;
    end else begin
        qpi2connTable_req_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        qpi2connTable_req_V_TREADY = 1'b1;
    end else begin
        qpi2connTable_req_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_226 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_connTable2ibh_rsp_1_blk_n = tx_connTable2ibh_rsp_1_full_n;
    end else begin
        tx_connTable2ibh_rsp_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_226 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_connTable2ibh_rsp_1_write = 1'b1;
    end else begin
        tx_connTable2ibh_rsp_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_66_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_ibhconnTable_req_s_3_blk_n = tx_ibhconnTable_req_s_3_empty_n;
    end else begin
        tx_ibhconnTable_req_s_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_66_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_ibhconnTable_req_s_3_read = 1'b1;
    end else begin
        tx_ibhconnTable_req_s_3_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((tmp_reg_226 == 1'd1) & (tx_connTable2ibh_rsp_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_66_p3 == 1'd1) & (tx_ibhconnTable_req_s_3_empty_n == 1'b0)) | ((qpi2connTable_req_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((tmp_reg_226 == 1'd1) & (tx_connTable2ibh_rsp_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_66_p3 == 1'd1) & (tx_ibhconnTable_req_s_3_empty_n == 1'b0)) | ((qpi2connTable_req_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((tmp_reg_226 == 1'd1) & (tx_connTable2ibh_rsp_1_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_66_p3 == 1'd1) & (tx_ibhconnTable_req_s_3_empty_n == 1'b0)) | ((qpi2connTable_req_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_66_p3 == 1'd1) & (tx_ibhconnTable_req_s_3_empty_n == 1'b0)) | ((qpi2connTable_req_V_TVALID == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((tmp_reg_226 == 1'd1) & (tx_connTable2ibh_rsp_1_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_113 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op7_read_state1 = ((tmp_111_nbreadreq_fu_74_p3 == 1'd1) & (tmp_nbreadreq_fu_66_p3 == 1'd0));
end

assign conn_table_remote_ip_d0 = {{qpi2connTable_req_V_TDATA[167:40]}};

assign conn_table_remote_qp_d0 = {{qpi2connTable_req_V_TDATA[39:16]}};

assign conn_table_remote_ud_d0 = {{qpi2connTable_req_V_TDATA[183:168]}};

assign tmp_111_nbreadreq_fu_74_p3 = qpi2connTable_req_V_TVALID;

assign tmp_nbreadreq_fu_66_p3 = tx_ibhconnTable_req_s_3_empty_n;

assign trunc_ln321_fu_164_p1 = qpi2connTable_req_V_TDATA[15:0];

assign tx_connTable2ibh_rsp_1_din = {{{conn_table_remote_ud_q0}, {conn_table_remote_ip_q0}}, {conn_table_remote_qp_q0}};

assign zext_ln544_8_fu_201_p1 = trunc_ln321_fu_164_p1;

assign zext_ln544_fu_208_p1 = tx_ibhconnTable_req_s_3_dout;

endmodule //conn_table
