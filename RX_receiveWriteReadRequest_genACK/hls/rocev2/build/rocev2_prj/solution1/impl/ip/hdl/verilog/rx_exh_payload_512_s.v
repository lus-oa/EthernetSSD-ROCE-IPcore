// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rx_exh_payload_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rx_pkgSplitTypeFifo_s_7_dout,
        rx_pkgSplitTypeFifo_s_7_empty_n,
        rx_pkgSplitTypeFifo_s_7_read,
        rx_ibhDrop2exhFifo_V_1_dout,
        rx_ibhDrop2exhFifo_V_1_empty_n,
        rx_ibhDrop2exhFifo_V_1_read,
        rx_ibhDrop2exhFifo_V_2_dout,
        rx_ibhDrop2exhFifo_V_2_empty_n,
        rx_ibhDrop2exhFifo_V_2_read,
        rx_ibhDrop2exhFifo_V_dout,
        rx_ibhDrop2exhFifo_V_empty_n,
        rx_ibhDrop2exhFifo_V_read,
        rx_exhNoShiftFifo_V_1_din,
        rx_exhNoShiftFifo_V_1_full_n,
        rx_exhNoShiftFifo_V_1_write,
        rx_exhNoShiftFifo_V_4_din,
        rx_exhNoShiftFifo_V_4_full_n,
        rx_exhNoShiftFifo_V_4_write,
        rx_exhNoShiftFifo_V_s_din,
        rx_exhNoShiftFifo_V_s_full_n,
        rx_exhNoShiftFifo_V_s_write,
        rx_exhNoShiftFifo_V_3_din,
        rx_exhNoShiftFifo_V_3_full_n,
        rx_exhNoShiftFifo_V_3_write,
        rx_exh2aethShiftFifo_3_din,
        rx_exh2aethShiftFifo_3_full_n,
        rx_exh2aethShiftFifo_3_write,
        rx_exh2aethShiftFifo_5_din,
        rx_exh2aethShiftFifo_5_full_n,
        rx_exh2aethShiftFifo_5_write,
        rx_exh2aethShiftFifo_6_din,
        rx_exh2aethShiftFifo_6_full_n,
        rx_exh2aethShiftFifo_6_write,
        rx_exh2rethShiftFifo_8_din,
        rx_exh2rethShiftFifo_8_full_n,
        rx_exh2rethShiftFifo_8_write,
        rx_exh2rethShiftFifo_6_din,
        rx_exh2rethShiftFifo_6_full_n,
        rx_exh2rethShiftFifo_6_write,
        rx_exh2rethShiftFifo_7_din,
        rx_exh2rethShiftFifo_7_full_n,
        rx_exh2rethShiftFifo_7_write,
        rx_exh2rethShiftFifo_4_din,
        rx_exh2rethShiftFifo_4_full_n,
        rx_exh2rethShiftFifo_4_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [5:0] rx_pkgSplitTypeFifo_s_7_dout;
input   rx_pkgSplitTypeFifo_s_7_empty_n;
output   rx_pkgSplitTypeFifo_s_7_read;
input  [511:0] rx_ibhDrop2exhFifo_V_1_dout;
input   rx_ibhDrop2exhFifo_V_1_empty_n;
output   rx_ibhDrop2exhFifo_V_1_read;
input  [63:0] rx_ibhDrop2exhFifo_V_2_dout;
input   rx_ibhDrop2exhFifo_V_2_empty_n;
output   rx_ibhDrop2exhFifo_V_2_read;
input  [0:0] rx_ibhDrop2exhFifo_V_dout;
input   rx_ibhDrop2exhFifo_V_empty_n;
output   rx_ibhDrop2exhFifo_V_read;
output  [511:0] rx_exhNoShiftFifo_V_1_din;
input   rx_exhNoShiftFifo_V_1_full_n;
output   rx_exhNoShiftFifo_V_1_write;
output  [63:0] rx_exhNoShiftFifo_V_4_din;
input   rx_exhNoShiftFifo_V_4_full_n;
output   rx_exhNoShiftFifo_V_4_write;
output  [0:0] rx_exhNoShiftFifo_V_s_din;
input   rx_exhNoShiftFifo_V_s_full_n;
output   rx_exhNoShiftFifo_V_s_write;
output  [0:0] rx_exhNoShiftFifo_V_3_din;
input   rx_exhNoShiftFifo_V_3_full_n;
output   rx_exhNoShiftFifo_V_3_write;
output  [511:0] rx_exh2aethShiftFifo_3_din;
input   rx_exh2aethShiftFifo_3_full_n;
output   rx_exh2aethShiftFifo_3_write;
output  [63:0] rx_exh2aethShiftFifo_5_din;
input   rx_exh2aethShiftFifo_5_full_n;
output   rx_exh2aethShiftFifo_5_write;
output  [0:0] rx_exh2aethShiftFifo_6_din;
input   rx_exh2aethShiftFifo_6_full_n;
output   rx_exh2aethShiftFifo_6_write;
output  [511:0] rx_exh2rethShiftFifo_8_din;
input   rx_exh2rethShiftFifo_8_full_n;
output   rx_exh2rethShiftFifo_8_write;
output  [63:0] rx_exh2rethShiftFifo_6_din;
input   rx_exh2rethShiftFifo_6_full_n;
output   rx_exh2rethShiftFifo_6_write;
output  [0:0] rx_exh2rethShiftFifo_7_din;
input   rx_exh2rethShiftFifo_7_full_n;
output   rx_exh2rethShiftFifo_7_write;
output  [0:0] rx_exh2rethShiftFifo_4_din;
input   rx_exh2rethShiftFifo_4_full_n;
output   rx_exh2rethShiftFifo_4_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rx_pkgSplitTypeFifo_s_7_read;
reg rx_ibhDrop2exhFifo_V_1_read;
reg rx_ibhDrop2exhFifo_V_2_read;
reg rx_ibhDrop2exhFifo_V_read;
reg rx_exhNoShiftFifo_V_1_write;
reg rx_exhNoShiftFifo_V_4_write;
reg rx_exhNoShiftFifo_V_s_write;
reg rx_exhNoShiftFifo_V_3_write;
reg rx_exh2aethShiftFifo_3_write;
reg rx_exh2aethShiftFifo_5_write;
reg rx_exh2aethShiftFifo_6_write;
reg rx_exh2rethShiftFifo_8_write;
reg rx_exh2rethShiftFifo_6_write;
reg rx_exh2rethShiftFifo_7_write;
reg rx_exh2rethShiftFifo_4_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_29_nbreadreq_fu_82_p3;
reg    ap_predicate_op8_read_state1;
wire    io_acc_block_signal_op15;
wire   [0:0] tmp_nbreadreq_fu_96_p5;
reg    ap_predicate_op15_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op48;
reg   [0:0] rep_state_load_reg_324;
reg   [0:0] tmp_reg_337;
reg   [0:0] tmp_i_i_reg_362;
reg   [0:0] empty_225_reg_366;
reg    ap_predicate_op48_write_state2;
wire    io_acc_block_signal_op50;
reg    ap_predicate_op50_write_state2;
wire    io_acc_block_signal_op53;
reg    ap_predicate_op53_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] rep_state;
reg   [4:0] meta_op_code_5;
reg   [0:0] meta_route;
reg    rx_pkgSplitTypeFifo_s_7_blk_n;
wire    ap_block_pp0_stage0;
reg    rx_ibhDrop2exhFifo_V_1_blk_n;
reg    rx_ibhDrop2exhFifo_V_2_blk_n;
reg    rx_ibhDrop2exhFifo_V_blk_n;
reg    rx_exh2rethShiftFifo_8_blk_n;
reg    rx_exh2rethShiftFifo_6_blk_n;
reg    rx_exh2rethShiftFifo_7_blk_n;
reg    rx_exh2rethShiftFifo_4_blk_n;
reg    rx_exh2aethShiftFifo_3_blk_n;
reg    rx_exh2aethShiftFifo_5_blk_n;
reg    rx_exh2aethShiftFifo_6_blk_n;
reg    rx_exhNoShiftFifo_V_1_blk_n;
reg    rx_exhNoShiftFifo_V_4_blk_n;
reg    rx_exhNoShiftFifo_V_s_blk_n;
reg    rx_exhNoShiftFifo_V_3_blk_n;
reg   [0:0] tmp_29_reg_328;
reg   [0:0] tmp_30_reg_332;
reg   [511:0] tmp_data_V_reg_341;
reg   [63:0] tmp_keep_V_reg_348;
wire   [0:0] tmp_last_V_fu_203_p1;
reg   [0:0] tmp_last_V_reg_355;
wire   [0:0] tmp_i_i_fu_207_p34;
wire   [0:0] empty_225_fu_301_p2;
reg    ap_block_pp0_stage0_subdone;
wire   [4:0] trunc_ln135_fu_171_p1;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] empty_222_fu_283_p2;
wire   [0:0] empty_221_fu_277_p2;
wire   [0:0] empty_224_fu_295_p2;
wire   [0:0] empty_223_fu_289_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_223;
reg    ap_condition_164;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 rep_state = 1'd0;
#0 meta_op_code_5 = 5'd0;
#0 meta_route = 1'd0;
end

rocev2_top_mux_325_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 1 ),
    .din18_WIDTH( 1 ),
    .din19_WIDTH( 1 ),
    .din20_WIDTH( 1 ),
    .din21_WIDTH( 1 ),
    .din22_WIDTH( 1 ),
    .din23_WIDTH( 1 ),
    .din24_WIDTH( 1 ),
    .din25_WIDTH( 1 ),
    .din26_WIDTH( 1 ),
    .din27_WIDTH( 1 ),
    .din28_WIDTH( 1 ),
    .din29_WIDTH( 1 ),
    .din30_WIDTH( 1 ),
    .din31_WIDTH( 1 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
rocev2_top_mux_325_1_1_1_U160(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd0),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd0),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(1'd0),
    .din17(1'd0),
    .din18(1'd0),
    .din19(1'd0),
    .din20(1'd0),
    .din21(1'd0),
    .din22(1'd0),
    .din23(1'd0),
    .din24(1'd1),
    .din25(1'd1),
    .din26(1'd0),
    .din27(1'd0),
    .din28(1'd0),
    .din29(1'd1),
    .din30(1'd0),
    .din31(1'd0),
    .din32(meta_op_code_5),
    .dout(tmp_i_i_fu_207_p34)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_164)) begin
        if ((1'b1 == ap_condition_223)) begin
            rep_state <= 1'd0;
        end else if (((tmp_29_nbreadreq_fu_82_p3 == 1'd1) & (rep_state == 1'd0))) begin
            rep_state <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_96_p5 == 1'd1) & (tmp_i_i_fu_207_p34 == 1'd0) & (rep_state == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_225_reg_366 <= empty_225_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_29_nbreadreq_fu_82_p3 == 1'd1) & (rep_state == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        meta_op_code_5 <= trunc_ln135_fu_171_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_29_reg_328 == 1'd1) & (rep_state_load_reg_324 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        meta_route <= tmp_30_reg_332;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rep_state_load_reg_324 <= rep_state;
    end
end

always @ (posedge ap_clk) begin
    if (((rep_state == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_29_reg_328 <= tmp_29_nbreadreq_fu_82_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_29_nbreadreq_fu_82_p3 == 1'd1) & (rep_state == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_30_reg_332 <= rx_pkgSplitTypeFifo_s_7_dout[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_96_p5 == 1'd1) & (rep_state == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_reg_341 <= rx_ibhDrop2exhFifo_V_1_dout;
        tmp_i_i_reg_362 <= tmp_i_i_fu_207_p34;
        tmp_keep_V_reg_348 <= rx_ibhDrop2exhFifo_V_2_dout;
        tmp_last_V_reg_355 <= rx_ibhDrop2exhFifo_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((rep_state == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_337 <= tmp_nbreadreq_fu_96_p5;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exh2aethShiftFifo_3_blk_n = rx_exh2aethShiftFifo_3_full_n;
    end else begin
        rx_exh2aethShiftFifo_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exh2aethShiftFifo_3_write = 1'b1;
    end else begin
        rx_exh2aethShiftFifo_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exh2aethShiftFifo_5_blk_n = rx_exh2aethShiftFifo_5_full_n;
    end else begin
        rx_exh2aethShiftFifo_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exh2aethShiftFifo_5_write = 1'b1;
    end else begin
        rx_exh2aethShiftFifo_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exh2aethShiftFifo_6_blk_n = rx_exh2aethShiftFifo_6_full_n;
    end else begin
        rx_exh2aethShiftFifo_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exh2aethShiftFifo_6_write = 1'b1;
    end else begin
        rx_exh2aethShiftFifo_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exh2rethShiftFifo_4_blk_n = rx_exh2rethShiftFifo_4_full_n;
    end else begin
        rx_exh2rethShiftFifo_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exh2rethShiftFifo_4_write = 1'b1;
    end else begin
        rx_exh2rethShiftFifo_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exh2rethShiftFifo_6_blk_n = rx_exh2rethShiftFifo_6_full_n;
    end else begin
        rx_exh2rethShiftFifo_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exh2rethShiftFifo_6_write = 1'b1;
    end else begin
        rx_exh2rethShiftFifo_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exh2rethShiftFifo_7_blk_n = rx_exh2rethShiftFifo_7_full_n;
    end else begin
        rx_exh2rethShiftFifo_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exh2rethShiftFifo_7_write = 1'b1;
    end else begin
        rx_exh2rethShiftFifo_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exh2rethShiftFifo_8_blk_n = rx_exh2rethShiftFifo_8_full_n;
    end else begin
        rx_exh2rethShiftFifo_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exh2rethShiftFifo_8_write = 1'b1;
    end else begin
        rx_exh2rethShiftFifo_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exhNoShiftFifo_V_1_blk_n = rx_exhNoShiftFifo_V_1_full_n;
    end else begin
        rx_exhNoShiftFifo_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exhNoShiftFifo_V_1_write = 1'b1;
    end else begin
        rx_exhNoShiftFifo_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exhNoShiftFifo_V_3_blk_n = rx_exhNoShiftFifo_V_3_full_n;
    end else begin
        rx_exhNoShiftFifo_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exhNoShiftFifo_V_3_write = 1'b1;
    end else begin
        rx_exhNoShiftFifo_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exhNoShiftFifo_V_4_blk_n = rx_exhNoShiftFifo_V_4_full_n;
    end else begin
        rx_exhNoShiftFifo_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exhNoShiftFifo_V_4_write = 1'b1;
    end else begin
        rx_exhNoShiftFifo_V_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exhNoShiftFifo_V_s_blk_n = rx_exhNoShiftFifo_V_s_full_n;
    end else begin
        rx_exhNoShiftFifo_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exhNoShiftFifo_V_s_write = 1'b1;
    end else begin
        rx_exhNoShiftFifo_V_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_ibhDrop2exhFifo_V_1_blk_n = rx_ibhDrop2exhFifo_V_1_empty_n;
    end else begin
        rx_ibhDrop2exhFifo_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_ibhDrop2exhFifo_V_1_read = 1'b1;
    end else begin
        rx_ibhDrop2exhFifo_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_ibhDrop2exhFifo_V_2_blk_n = rx_ibhDrop2exhFifo_V_2_empty_n;
    end else begin
        rx_ibhDrop2exhFifo_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_ibhDrop2exhFifo_V_2_read = 1'b1;
    end else begin
        rx_ibhDrop2exhFifo_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_ibhDrop2exhFifo_V_blk_n = rx_ibhDrop2exhFifo_V_empty_n;
    end else begin
        rx_ibhDrop2exhFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_ibhDrop2exhFifo_V_read = 1'b1;
    end else begin
        rx_ibhDrop2exhFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_pkgSplitTypeFifo_s_7_blk_n = rx_pkgSplitTypeFifo_s_7_empty_n;
    end else begin
        rx_pkgSplitTypeFifo_s_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op8_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_pkgSplitTypeFifo_s_7_read = 1'b1;
    end else begin
        rx_pkgSplitTypeFifo_s_7_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op15 == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((rx_pkgSplitTypeFifo_s_7_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((io_acc_block_signal_op48 == 1'b0) & (ap_predicate_op48_write_state2 == 1'b1)) | ((io_acc_block_signal_op53 == 1'b0) & (ap_predicate_op53_write_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op15 == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((rx_pkgSplitTypeFifo_s_7_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((io_acc_block_signal_op48 == 1'b0) & (ap_predicate_op48_write_state2 == 1'b1)) | ((io_acc_block_signal_op53 == 1'b0) & (ap_predicate_op53_write_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op15 == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((rx_pkgSplitTypeFifo_s_7_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((io_acc_block_signal_op48 == 1'b0) & (ap_predicate_op48_write_state2 == 1'b1)) | ((io_acc_block_signal_op53 == 1'b0) & (ap_predicate_op53_write_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op15 == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((rx_pkgSplitTypeFifo_s_7_empty_n == 1'b0) & (ap_predicate_op8_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((io_acc_block_signal_op48 == 1'b0) & (ap_predicate_op48_write_state2 == 1'b1)) | ((io_acc_block_signal_op53 == 1'b0) & (ap_predicate_op53_write_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_164 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_223 = ((tmp_nbreadreq_fu_96_p5 == 1'd1) & (tmp_last_V_fu_203_p1 == 1'd1) & (rep_state == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op15_read_state1 = ((tmp_nbreadreq_fu_96_p5 == 1'd1) & (rep_state == 1'd1));
end

always @ (*) begin
    ap_predicate_op48_write_state2 = ((tmp_reg_337 == 1'd1) & (rep_state_load_reg_324 == 1'd1) & (empty_225_reg_366 == 1'd0) & (tmp_i_i_reg_362 == 1'd0));
end

always @ (*) begin
    ap_predicate_op50_write_state2 = ((tmp_reg_337 == 1'd1) & (rep_state_load_reg_324 == 1'd1) & (empty_225_reg_366 == 1'd1) & (tmp_i_i_reg_362 == 1'd0));
end

always @ (*) begin
    ap_predicate_op53_write_state2 = ((tmp_reg_337 == 1'd1) & (rep_state_load_reg_324 == 1'd1) & (tmp_i_i_reg_362 == 1'd1));
end

always @ (*) begin
    ap_predicate_op8_read_state1 = ((tmp_29_nbreadreq_fu_82_p3 == 1'd1) & (rep_state == 1'd0));
end

assign empty_221_fu_277_p2 = ((meta_op_code_5 == 5'd16) ? 1'b1 : 1'b0);

assign empty_222_fu_283_p2 = ((meta_op_code_5 == 5'd15) ? 1'b1 : 1'b0);

assign empty_223_fu_289_p2 = (empty_222_fu_283_p2 | empty_221_fu_277_p2);

assign empty_224_fu_295_p2 = ((meta_op_code_5 == 5'd13) ? 1'b1 : 1'b0);

assign empty_225_fu_301_p2 = (empty_224_fu_295_p2 | empty_223_fu_289_p2);

assign io_acc_block_signal_op15 = (rx_ibhDrop2exhFifo_V_empty_n & rx_ibhDrop2exhFifo_V_2_empty_n & rx_ibhDrop2exhFifo_V_1_empty_n);

assign io_acc_block_signal_op48 = (rx_exhNoShiftFifo_V_s_full_n & rx_exhNoShiftFifo_V_4_full_n & rx_exhNoShiftFifo_V_3_full_n & rx_exhNoShiftFifo_V_1_full_n);

assign io_acc_block_signal_op50 = (rx_exh2aethShiftFifo_6_full_n & rx_exh2aethShiftFifo_5_full_n & rx_exh2aethShiftFifo_3_full_n);

assign io_acc_block_signal_op53 = (rx_exh2rethShiftFifo_8_full_n & rx_exh2rethShiftFifo_7_full_n & rx_exh2rethShiftFifo_6_full_n & rx_exh2rethShiftFifo_4_full_n);

assign rx_exh2aethShiftFifo_3_din = tmp_data_V_reg_341;

assign rx_exh2aethShiftFifo_5_din = tmp_keep_V_reg_348;

assign rx_exh2aethShiftFifo_6_din = tmp_last_V_reg_355;

assign rx_exh2rethShiftFifo_4_din = meta_route;

assign rx_exh2rethShiftFifo_6_din = tmp_keep_V_reg_348;

assign rx_exh2rethShiftFifo_7_din = tmp_last_V_reg_355;

assign rx_exh2rethShiftFifo_8_din = tmp_data_V_reg_341;

assign rx_exhNoShiftFifo_V_1_din = tmp_data_V_reg_341;

assign rx_exhNoShiftFifo_V_3_din = meta_route;

assign rx_exhNoShiftFifo_V_4_din = tmp_keep_V_reg_348;

assign rx_exhNoShiftFifo_V_s_din = tmp_last_V_reg_355;

assign tmp_29_nbreadreq_fu_82_p3 = rx_pkgSplitTypeFifo_s_7_empty_n;

assign tmp_last_V_fu_203_p1 = rx_ibhDrop2exhFifo_V_dout;

assign tmp_nbreadreq_fu_96_p5 = (rx_ibhDrop2exhFifo_V_empty_n & rx_ibhDrop2exhFifo_V_2_empty_n & rx_ibhDrop2exhFifo_V_1_empty_n);

assign trunc_ln135_fu_171_p1 = rx_pkgSplitTypeFifo_s_7_dout[4:0];

endmodule //rx_exh_payload_512_s
