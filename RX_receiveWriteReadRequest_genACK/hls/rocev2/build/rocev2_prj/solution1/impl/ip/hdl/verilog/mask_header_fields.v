// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mask_header_fields (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tx_ip2crcFifo_V_data_dout,
        tx_ip2crcFifo_V_data_empty_n,
        tx_ip2crcFifo_V_data_read,
        tx_ip2crcFifo_V_keep_dout,
        tx_ip2crcFifo_V_keep_empty_n,
        tx_ip2crcFifo_V_keep_read,
        tx_ip2crcFifo_V_last_dout,
        tx_ip2crcFifo_V_last_empty_n,
        tx_ip2crcFifo_V_last_read,
        tx_maskedDataFifo_V_1_din,
        tx_maskedDataFifo_V_1_full_n,
        tx_maskedDataFifo_V_1_write,
        tx_maskedDataFifo_V_2_din,
        tx_maskedDataFifo_V_2_full_n,
        tx_maskedDataFifo_V_2_write,
        tx_maskedDataFifo_V_s_din,
        tx_maskedDataFifo_V_s_full_n,
        tx_maskedDataFifo_V_s_write,
        tx_crcDataFifo_V_dat_din,
        tx_crcDataFifo_V_dat_full_n,
        tx_crcDataFifo_V_dat_write,
        tx_crcDataFifo_V_kee_din,
        tx_crcDataFifo_V_kee_full_n,
        tx_crcDataFifo_V_kee_write,
        tx_crcDataFifo_V_las_din,
        tx_crcDataFifo_V_las_full_n,
        tx_crcDataFifo_V_las_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] tx_ip2crcFifo_V_data_dout;
input   tx_ip2crcFifo_V_data_empty_n;
output   tx_ip2crcFifo_V_data_read;
input  [63:0] tx_ip2crcFifo_V_keep_dout;
input   tx_ip2crcFifo_V_keep_empty_n;
output   tx_ip2crcFifo_V_keep_read;
input  [0:0] tx_ip2crcFifo_V_last_dout;
input   tx_ip2crcFifo_V_last_empty_n;
output   tx_ip2crcFifo_V_last_read;
output  [511:0] tx_maskedDataFifo_V_1_din;
input   tx_maskedDataFifo_V_1_full_n;
output   tx_maskedDataFifo_V_1_write;
output  [63:0] tx_maskedDataFifo_V_2_din;
input   tx_maskedDataFifo_V_2_full_n;
output   tx_maskedDataFifo_V_2_write;
output  [0:0] tx_maskedDataFifo_V_s_din;
input   tx_maskedDataFifo_V_s_full_n;
output   tx_maskedDataFifo_V_s_write;
output  [511:0] tx_crcDataFifo_V_dat_din;
input   tx_crcDataFifo_V_dat_full_n;
output   tx_crcDataFifo_V_dat_write;
output  [63:0] tx_crcDataFifo_V_kee_din;
input   tx_crcDataFifo_V_kee_full_n;
output   tx_crcDataFifo_V_kee_write;
output  [0:0] tx_crcDataFifo_V_las_din;
input   tx_crcDataFifo_V_las_full_n;
output   tx_crcDataFifo_V_las_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tx_ip2crcFifo_V_data_read;
reg tx_ip2crcFifo_V_keep_read;
reg tx_ip2crcFifo_V_last_read;
reg tx_maskedDataFifo_V_1_write;
reg tx_maskedDataFifo_V_2_write;
reg tx_maskedDataFifo_V_s_write;
reg tx_crcDataFifo_V_dat_write;
reg tx_crcDataFifo_V_kee_write;
reg tx_crcDataFifo_V_las_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op5;
wire   [0:0] tmp_nbreadreq_fu_54_p5;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op28;
reg   [0:0] tmp_reg_174;
wire    io_acc_block_signal_op29;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] ai_wordCount_V;
reg    tx_ip2crcFifo_V_data_blk_n;
wire    ap_block_pp0_stage0;
reg    tx_ip2crcFifo_V_keep_blk_n;
reg    tx_ip2crcFifo_V_last_blk_n;
reg    tx_maskedDataFifo_V_1_blk_n;
reg    tx_maskedDataFifo_V_2_blk_n;
reg    tx_maskedDataFifo_V_s_blk_n;
reg    tx_crcDataFifo_V_dat_blk_n;
reg    tx_crcDataFifo_V_kee_blk_n;
reg    tx_crcDataFifo_V_las_blk_n;
reg   [511:0] tmp_data_V_31_reg_178;
reg   [63:0] tmp_keep_V_reg_183;
reg   [0:0] tmp_last_V_reg_189;
wire   [511:0] tmp_data_V_fu_146_p3;
reg   [511:0] tmp_data_V_reg_195;
reg    ap_block_pp0_stage0_subdone;
wire   [7:0] select_ln313_fu_160_p3;
reg    ap_block_pp0_stage0_01001;
wire   [263:0] trunc_ln357_fu_124_p1;
wire   [263:0] or_ln1356_fu_128_p2;
wire   [0:0] icmp_ln879_fu_118_p2;
wire   [511:0] p_Result_s_fu_134_p5;
wire   [7:0] add_ln700_fu_154_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ai_wordCount_V = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ai_wordCount_V <= select_ln313_fu_160_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_data_V_31_reg_178 <= tx_ip2crcFifo_V_data_dout;
        tmp_data_V_reg_195 <= tmp_data_V_fu_146_p3;
        tmp_keep_V_reg_183 <= tx_ip2crcFifo_V_keep_dout;
        tmp_last_V_reg_189 <= tx_ip2crcFifo_V_last_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_174 <= tmp_nbreadreq_fu_54_p5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_crcDataFifo_V_dat_blk_n = tx_crcDataFifo_V_dat_full_n;
    end else begin
        tx_crcDataFifo_V_dat_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_crcDataFifo_V_dat_write = 1'b1;
    end else begin
        tx_crcDataFifo_V_dat_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_crcDataFifo_V_kee_blk_n = tx_crcDataFifo_V_kee_full_n;
    end else begin
        tx_crcDataFifo_V_kee_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_crcDataFifo_V_kee_write = 1'b1;
    end else begin
        tx_crcDataFifo_V_kee_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_crcDataFifo_V_las_blk_n = tx_crcDataFifo_V_las_full_n;
    end else begin
        tx_crcDataFifo_V_las_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_crcDataFifo_V_las_write = 1'b1;
    end else begin
        tx_crcDataFifo_V_las_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_ip2crcFifo_V_data_blk_n = tx_ip2crcFifo_V_data_empty_n;
    end else begin
        tx_ip2crcFifo_V_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_ip2crcFifo_V_data_read = 1'b1;
    end else begin
        tx_ip2crcFifo_V_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_ip2crcFifo_V_keep_blk_n = tx_ip2crcFifo_V_keep_empty_n;
    end else begin
        tx_ip2crcFifo_V_keep_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_ip2crcFifo_V_keep_read = 1'b1;
    end else begin
        tx_ip2crcFifo_V_keep_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_ip2crcFifo_V_last_blk_n = tx_ip2crcFifo_V_last_empty_n;
    end else begin
        tx_ip2crcFifo_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_54_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_ip2crcFifo_V_last_read = 1'b1;
    end else begin
        tx_ip2crcFifo_V_last_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_maskedDataFifo_V_1_blk_n = tx_maskedDataFifo_V_1_full_n;
    end else begin
        tx_maskedDataFifo_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_maskedDataFifo_V_1_write = 1'b1;
    end else begin
        tx_maskedDataFifo_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_maskedDataFifo_V_2_blk_n = tx_maskedDataFifo_V_2_full_n;
    end else begin
        tx_maskedDataFifo_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_maskedDataFifo_V_2_write = 1'b1;
    end else begin
        tx_maskedDataFifo_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_maskedDataFifo_V_s_blk_n = tx_maskedDataFifo_V_s_full_n;
    end else begin
        tx_maskedDataFifo_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_174 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_maskedDataFifo_V_s_write = 1'b1;
    end else begin
        tx_maskedDataFifo_V_s_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_fu_154_p2 = (8'd1 + ai_wordCount_V);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op29 == 1'b0)) | ((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op28 == 1'b0)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p5 == 1'd1) & (io_acc_block_signal_op5 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op29 == 1'b0)) | ((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op28 == 1'b0)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p5 == 1'd1) & (io_acc_block_signal_op5 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op29 == 1'b0)) | ((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op28 == 1'b0)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p5 == 1'd1) & (io_acc_block_signal_op5 == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_54_p5 == 1'd1) & (io_acc_block_signal_op5 == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op29 == 1'b0)) | ((tmp_reg_174 == 1'd1) & (io_acc_block_signal_op28 == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln879_fu_118_p2 = ((ai_wordCount_V == 8'd0) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op28 = (tx_maskedDataFifo_V_s_full_n & tx_maskedDataFifo_V_2_full_n & tx_maskedDataFifo_V_1_full_n);

assign io_acc_block_signal_op29 = (tx_crcDataFifo_V_las_full_n & tx_crcDataFifo_V_kee_full_n & tx_crcDataFifo_V_dat_full_n);

assign io_acc_block_signal_op5 = (tx_ip2crcFifo_V_last_empty_n & tx_ip2crcFifo_V_keep_empty_n & tx_ip2crcFifo_V_data_empty_n);

assign or_ln1356_fu_128_p2 = (trunc_ln357_fu_124_p1 | 264'd29526982755542589368301612486708572978928570081074433955758550450565746136252160);

assign p_Result_s_fu_134_p5 = {{tx_ip2crcFifo_V_data_dout[511:264]}, {or_ln1356_fu_128_p2}};

assign select_ln313_fu_160_p3 = ((tx_ip2crcFifo_V_last_dout[0:0] === 1'b1) ? 8'd0 : add_ln700_fu_154_p2);

assign tmp_data_V_fu_146_p3 = ((icmp_ln879_fu_118_p2[0:0] === 1'b1) ? p_Result_s_fu_134_p5 : tx_ip2crcFifo_V_data_dout);

assign tmp_nbreadreq_fu_54_p5 = (tx_ip2crcFifo_V_last_empty_n & tx_ip2crcFifo_V_keep_empty_n & tx_ip2crcFifo_V_data_empty_n);

assign trunc_ln357_fu_124_p1 = tx_ip2crcFifo_V_data_dout[263:0];

assign tx_crcDataFifo_V_dat_din = tmp_data_V_31_reg_178;

assign tx_crcDataFifo_V_kee_din = tmp_keep_V_reg_183;

assign tx_crcDataFifo_V_las_din = tmp_last_V_reg_189;

assign tx_maskedDataFifo_V_1_din = tmp_data_V_reg_195;

assign tx_maskedDataFifo_V_2_din = tmp_keep_V_reg_183;

assign tx_maskedDataFifo_V_s_din = tmp_last_V_reg_189;

endmodule //mask_header_fields
