// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module insert_icrc_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tx_crcDataFifo_V_dat_dout,
        tx_crcDataFifo_V_dat_empty_n,
        tx_crcDataFifo_V_dat_read,
        tx_crcDataFifo_V_kee_dout,
        tx_crcDataFifo_V_kee_empty_n,
        tx_crcDataFifo_V_kee_read,
        tx_crcDataFifo_V_las_dout,
        tx_crcDataFifo_V_las_empty_n,
        tx_crcDataFifo_V_las_read,
        crcFifo1_V_V_dout,
        crcFifo1_V_V_empty_n,
        crcFifo1_V_V_read,
        m_axis_tx_data_TREADY,
        m_axis_tx_data_TDATA,
        m_axis_tx_data_TVALID,
        m_axis_tx_data_TKEEP,
        m_axis_tx_data_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] tx_crcDataFifo_V_dat_dout;
input   tx_crcDataFifo_V_dat_empty_n;
output   tx_crcDataFifo_V_dat_read;
input  [63:0] tx_crcDataFifo_V_kee_dout;
input   tx_crcDataFifo_V_kee_empty_n;
output   tx_crcDataFifo_V_kee_read;
input  [0:0] tx_crcDataFifo_V_las_dout;
input   tx_crcDataFifo_V_las_empty_n;
output   tx_crcDataFifo_V_las_read;
input  [31:0] crcFifo1_V_V_dout;
input   crcFifo1_V_V_empty_n;
output   crcFifo1_V_V_read;
input   m_axis_tx_data_TREADY;
output  [511:0] m_axis_tx_data_TDATA;
output   m_axis_tx_data_TVALID;
output  [63:0] m_axis_tx_data_TKEEP;
output  [0:0] m_axis_tx_data_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tx_crcDataFifo_V_dat_read;
reg tx_crcDataFifo_V_kee_read;
reg tx_crcDataFifo_V_las_read;
reg crcFifo1_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op10;
wire   [1:0] ii_state_load_load_fu_400_p1;
wire   [0:0] tmp_83_nbreadreq_fu_162_p5;
reg    ap_predicate_op10_read_state1;
wire   [0:0] tmp_nbreadreq_fu_184_p3;
reg    ap_predicate_op53_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    output_V_data_V_1_ack_in;
reg   [1:0] ii_state_load_reg_640;
reg   [0:0] tmp_83_reg_649;
reg    ap_predicate_op62_write_state2;
reg    ap_block_state2_io;
wire    output_V_data_V_1_ack_out;
reg   [1:0] output_V_data_V_1_state;
wire    output_V_keep_V_1_ack_out;
reg   [1:0] output_V_keep_V_1_state;
wire    output_V_last_V_1_ack_out;
reg   [1:0] output_V_last_V_1_state;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [1:0] ii_state_load_reg_640_pp0_iter1_reg;
reg   [0:0] tmp_83_reg_649_pp0_iter1_reg;
reg    ap_predicate_op71_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [511:0] output_V_data_V_1_data_in;
reg   [511:0] output_V_data_V_1_data_out;
reg    output_V_data_V_1_vld_in;
wire    output_V_data_V_1_vld_out;
reg   [511:0] output_V_data_V_1_payload_A;
reg   [511:0] output_V_data_V_1_payload_B;
reg    output_V_data_V_1_sel_rd;
reg    output_V_data_V_1_sel_wr;
wire    output_V_data_V_1_sel;
wire    output_V_data_V_1_load_A;
wire    output_V_data_V_1_load_B;
wire    output_V_data_V_1_state_cmp_full;
reg   [63:0] output_V_keep_V_1_data_in;
reg   [63:0] output_V_keep_V_1_data_out;
reg    output_V_keep_V_1_vld_in;
wire    output_V_keep_V_1_vld_out;
wire    output_V_keep_V_1_ack_in;
reg   [63:0] output_V_keep_V_1_payload_A;
reg   [63:0] output_V_keep_V_1_payload_B;
reg    output_V_keep_V_1_sel_rd;
reg    output_V_keep_V_1_sel_wr;
wire    output_V_keep_V_1_sel;
wire    output_V_keep_V_1_load_A;
wire    output_V_keep_V_1_load_B;
wire    output_V_keep_V_1_state_cmp_full;
reg   [0:0] output_V_last_V_1_data_in;
reg   [0:0] output_V_last_V_1_data_out;
reg    output_V_last_V_1_vld_in;
wire    output_V_last_V_1_vld_out;
wire    output_V_last_V_1_ack_in;
reg   [0:0] output_V_last_V_1_payload_A;
reg   [0:0] output_V_last_V_1_payload_B;
reg    output_V_last_V_1_sel_rd;
reg    output_V_last_V_1_sel_wr;
wire    output_V_last_V_1_sel;
wire    output_V_last_V_1_load_A;
wire    output_V_last_V_1_load_B;
wire    output_V_last_V_1_state_cmp_full;
reg   [1:0] ii_state;
reg   [31:0] crc_V;
reg    m_axis_tx_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    crcFifo1_V_V_blk_n;
reg    tx_crcDataFifo_V_dat_blk_n;
reg    tx_crcDataFifo_V_kee_blk_n;
reg    tx_crcDataFifo_V_las_blk_n;
reg   [31:0] crc_V_load_reg_644;
wire   [63:0] tmp_keep_V_51_fu_412_p1;
wire   [0:0] tmp_last_V_fu_416_p1;
wire   [511:0] p_Result_72_fu_428_p5;
wire   [0:0] tmp_84_fu_420_p3;
wire   [511:0] p_Result_71_fu_440_p5;
wire   [511:0] p_Result_70_fu_452_p5;
wire   [511:0] p_Result_69_fu_464_p5;
wire   [511:0] p_Result_68_fu_476_p5;
wire   [511:0] p_Result_67_fu_488_p5;
wire   [511:0] p_Result_66_fu_500_p5;
wire   [511:0] p_Result_65_fu_512_p5;
wire   [511:0] p_Result_64_fu_524_p5;
wire   [511:0] p_Result_63_fu_536_p5;
wire   [511:0] p_Result_62_fu_548_p5;
wire   [511:0] p_Result_61_fu_560_p5;
wire   [511:0] p_Result_60_fu_572_p5;
wire   [511:0] p_Result_59_fu_584_p5;
wire   [511:0] p_Result_s_fu_596_p5;
wire   [511:0] p_Result_73_fu_632_p3;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_keep_V_reg_213;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213;
wire   [511:0] ap_phi_reg_pp0_iter0_tmp_data_V_55_reg_287;
reg   [511:0] ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_V_39_reg_331;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_V_39_reg_331;
wire   [31:0] r_V_fu_614_p2;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_561;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 output_V_data_V_1_state = 2'd0;
#0 output_V_keep_V_1_state = 2'd0;
#0 output_V_last_V_1_state = 2'd0;
#0 output_V_data_V_1_sel_rd = 1'b0;
#0 output_V_data_V_1_sel_wr = 1'b0;
#0 output_V_keep_V_1_sel_rd = 1'b0;
#0 output_V_keep_V_1_sel_wr = 1'b0;
#0 output_V_last_V_1_sel_rd = 1'b0;
#0 output_V_last_V_1_sel_wr = 1'b0;
#0 ii_state = 2'd0;
#0 crc_V = 32'd3735928559;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((output_V_data_V_1_vld_out == 1'b1) & (output_V_data_V_1_ack_out == 1'b1))) begin
            output_V_data_V_1_sel_rd <= ~output_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((output_V_data_V_1_ack_in == 1'b1) & (output_V_data_V_1_vld_in == 1'b1))) begin
            output_V_data_V_1_sel_wr <= ~output_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((output_V_data_V_1_vld_in == 1'b0) & (output_V_data_V_1_ack_out == 1'b1) & (output_V_data_V_1_state == 2'd3)) | ((output_V_data_V_1_state == 2'd2) & (output_V_data_V_1_vld_in == 1'b0)))) begin
            output_V_data_V_1_state <= 2'd2;
        end else if ((((output_V_data_V_1_state == 2'd1) & (m_axis_tx_data_TREADY == 1'b0)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_data_V_1_vld_in == 1'b1) & (output_V_data_V_1_state == 2'd3)))) begin
            output_V_data_V_1_state <= 2'd1;
        end else if ((((output_V_data_V_1_state == 2'd1) & (output_V_data_V_1_ack_out == 1'b1)) | (~((output_V_data_V_1_vld_in == 1'b0) & (output_V_data_V_1_ack_out == 1'b1)) & ~((m_axis_tx_data_TREADY == 1'b0) & (output_V_data_V_1_vld_in == 1'b1)) & (output_V_data_V_1_state == 2'd3)) | ((output_V_data_V_1_state == 2'd2) & (output_V_data_V_1_vld_in == 1'b1)))) begin
            output_V_data_V_1_state <= 2'd3;
        end else begin
            output_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((output_V_keep_V_1_vld_out == 1'b1) & (output_V_keep_V_1_ack_out == 1'b1))) begin
            output_V_keep_V_1_sel_rd <= ~output_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((output_V_keep_V_1_ack_in == 1'b1) & (output_V_keep_V_1_vld_in == 1'b1))) begin
            output_V_keep_V_1_sel_wr <= ~output_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((output_V_keep_V_1_vld_in == 1'b0) & (output_V_keep_V_1_ack_out == 1'b1) & (output_V_keep_V_1_state == 2'd3)) | ((output_V_keep_V_1_state == 2'd2) & (output_V_keep_V_1_vld_in == 1'b0)))) begin
            output_V_keep_V_1_state <= 2'd2;
        end else if ((((output_V_keep_V_1_state == 2'd1) & (m_axis_tx_data_TREADY == 1'b0)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_keep_V_1_vld_in == 1'b1) & (output_V_keep_V_1_state == 2'd3)))) begin
            output_V_keep_V_1_state <= 2'd1;
        end else if ((((output_V_keep_V_1_state == 2'd1) & (output_V_keep_V_1_ack_out == 1'b1)) | (~((output_V_keep_V_1_vld_in == 1'b0) & (output_V_keep_V_1_ack_out == 1'b1)) & ~((m_axis_tx_data_TREADY == 1'b0) & (output_V_keep_V_1_vld_in == 1'b1)) & (output_V_keep_V_1_state == 2'd3)) | ((output_V_keep_V_1_state == 2'd2) & (output_V_keep_V_1_vld_in == 1'b1)))) begin
            output_V_keep_V_1_state <= 2'd3;
        end else begin
            output_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((output_V_last_V_1_vld_out == 1'b1) & (output_V_last_V_1_ack_out == 1'b1))) begin
            output_V_last_V_1_sel_rd <= ~output_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((output_V_last_V_1_ack_in == 1'b1) & (output_V_last_V_1_vld_in == 1'b1))) begin
            output_V_last_V_1_sel_wr <= ~output_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((output_V_last_V_1_vld_in == 1'b0) & (output_V_last_V_1_ack_out == 1'b1) & (output_V_last_V_1_state == 2'd3)) | ((output_V_last_V_1_state == 2'd2) & (output_V_last_V_1_vld_in == 1'b0)))) begin
            output_V_last_V_1_state <= 2'd2;
        end else if ((((output_V_last_V_1_state == 2'd1) & (m_axis_tx_data_TREADY == 1'b0)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_last_V_1_vld_in == 1'b1) & (output_V_last_V_1_state == 2'd3)))) begin
            output_V_last_V_1_state <= 2'd1;
        end else if ((((output_V_last_V_1_state == 2'd1) & (output_V_last_V_1_ack_out == 1'b1)) | (~((output_V_last_V_1_vld_in == 1'b0) & (output_V_last_V_1_ack_out == 1'b1)) & ~((m_axis_tx_data_TREADY == 1'b0) & (output_V_last_V_1_vld_in == 1'b1)) & (output_V_last_V_1_state == 2'd3)) | ((output_V_last_V_1_state == 2'd2) & (output_V_last_V_1_vld_in == 1'b1)))) begin
            output_V_last_V_1_state <= 2'd3;
        end else begin
            output_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd15) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_s_fu_596_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd255) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_59_fu_584_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4095) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_60_fu_572_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd65535) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_61_fu_560_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1048575) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_62_fu_548_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd16777215) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_63_fu_536_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd268435455) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_64_fu_524_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4294967295) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_65_fu_512_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd68719476735) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_66_fu_500_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1099511627775) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_67_fu_488_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd17592186044415) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_68_fu_476_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd281474976710655) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_69_fu_464_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4503599627370495) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_70_fu_452_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd72057594037927935) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_71_fu_440_p5;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1152921504606846975) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= p_Result_72_fu_428_p5;
    end else if ((((tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_last_V_fu_416_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_84_fu_420_p3 == 1'd1) & (tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~(tmp_keep_V_51_fu_412_p1 == 64'd15) & ~(tmp_keep_V_51_fu_412_p1 == 64'd255) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4095) & ~(tmp_keep_V_51_fu_412_p1 == 64'd65535) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1048575) & ~(tmp_keep_V_51_fu_412_p1 == 64'd16777215) & ~(tmp_keep_V_51_fu_412_p1 == 64'd268435455) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4294967295) & ~(tmp_keep_V_51_fu_412_p1 == 64'd68719476735) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1099511627775) & ~(tmp_keep_V_51_fu_412_p1 == 64'd17592186044415) & ~(tmp_keep_V_51_fu_412_p1 == 64'd281474976710655) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4503599627370495) & ~(tmp_keep_V_51_fu_412_p1 == 64'd72057594037927935) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1152921504606846975) & (tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= tx_crcDataFifo_V_dat_dout;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287 <= ap_phi_reg_pp0_iter0_tmp_data_V_55_reg_287;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd15) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd255;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd255) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd4095;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4095) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd65535;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd65535) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd1048575;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1048575) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd16777215;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd16777215) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd268435455;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd268435455) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd4294967295;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4294967295) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd68719476735;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd68719476735) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd1099511627775;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1099511627775) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd17592186044415;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd17592186044415) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd281474976710655;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd281474976710655) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd4503599627370495;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4503599627370495) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd72057594037927935;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd72057594037927935) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd1152921504606846975;
    end else if (((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1152921504606846975) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= 64'd18446744073709551615;
    end else if ((((tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_last_V_fu_416_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_84_fu_420_p3 == 1'd1) & (tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~(tmp_keep_V_51_fu_412_p1 == 64'd15) & ~(tmp_keep_V_51_fu_412_p1 == 64'd255) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4095) & ~(tmp_keep_V_51_fu_412_p1 == 64'd65535) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1048575) & ~(tmp_keep_V_51_fu_412_p1 == 64'd16777215) & ~(tmp_keep_V_51_fu_412_p1 == 64'd268435455) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4294967295) & ~(tmp_keep_V_51_fu_412_p1 == 64'd68719476735) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1099511627775) & ~(tmp_keep_V_51_fu_412_p1 == 64'd17592186044415) & ~(tmp_keep_V_51_fu_412_p1 == 64'd281474976710655) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4503599627370495) & ~(tmp_keep_V_51_fu_412_p1 == 64'd72057594037927935) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1152921504606846975) & (tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= tx_crcDataFifo_V_kee_dout;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213 <= ap_phi_reg_pp0_iter0_tmp_keep_V_reg_213;
    end
end

always @ (posedge ap_clk) begin
    if (((~(tmp_keep_V_51_fu_412_p1 == 64'd15) & ~(tmp_keep_V_51_fu_412_p1 == 64'd255) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4095) & ~(tmp_keep_V_51_fu_412_p1 == 64'd65535) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1048575) & ~(tmp_keep_V_51_fu_412_p1 == 64'd16777215) & ~(tmp_keep_V_51_fu_412_p1 == 64'd268435455) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4294967295) & ~(tmp_keep_V_51_fu_412_p1 == 64'd68719476735) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1099511627775) & ~(tmp_keep_V_51_fu_412_p1 == 64'd17592186044415) & ~(tmp_keep_V_51_fu_412_p1 == 64'd281474976710655) & ~(tmp_keep_V_51_fu_412_p1 == 64'd4503599627370495) & ~(tmp_keep_V_51_fu_412_p1 == 64'd72057594037927935) & ~(tmp_keep_V_51_fu_412_p1 == 64'd1152921504606846975) & (tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd15) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd255) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4095) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd65535) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1048575) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd16777215) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd268435455) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4294967295) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd68719476735) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1099511627775) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd17592186044415) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd281474976710655) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd4503599627370495) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd72057594037927935) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (tmp_keep_V_51_fu_412_p1 == 64'd1152921504606846975) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_tmp_last_V_39_reg_331 <= 1'd1;
    end else if (((tmp_84_fu_420_p3 == 1'd1) & (tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_last_V_39_reg_331 <= 1'd0;
    end else if (((tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_last_V_fu_416_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_last_V_39_reg_331 <= tx_crcDataFifo_V_las_dout;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_last_V_39_reg_331 <= ap_phi_reg_pp0_iter0_tmp_last_V_39_reg_331;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_184_p3 == 1'd1) & (ii_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_state <= 2'd1;
    end else if (((tmp_84_fu_420_p3 == 1'd1) & (tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ii_state <= 2'd2;
    end else if ((((tmp_last_V_fu_416_p1 == 1'd1) & (tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_84_fu_420_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ii_state_load_load_fu_400_p1 == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ii_state <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_184_p3 == 1'd1) & (ii_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        crc_V <= r_V_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        crc_V_load_reg_644 <= crc_V;
        ii_state_load_reg_640 <= ii_state;
        ii_state_load_reg_640_pp0_iter1_reg <= ii_state_load_reg_640;
        tmp_83_reg_649_pp0_iter1_reg <= tmp_83_reg_649;
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_data_V_1_load_A == 1'b1)) begin
        output_V_data_V_1_payload_A <= output_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_data_V_1_load_B == 1'b1)) begin
        output_V_data_V_1_payload_B <= output_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_keep_V_1_load_A == 1'b1)) begin
        output_V_keep_V_1_payload_A <= output_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_keep_V_1_load_B == 1'b1)) begin
        output_V_keep_V_1_payload_B <= output_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_last_V_1_load_A == 1'b1)) begin
        output_V_last_V_1_payload_A <= output_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_last_V_1_load_B == 1'b1)) begin
        output_V_last_V_1_payload_B <= output_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((ii_state == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_83_reg_649 <= tmp_83_nbreadreq_fu_162_p5;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_read_state1 == 1'b1))) begin
        crcFifo1_V_V_blk_n = crcFifo1_V_V_empty_n;
    end else begin
        crcFifo1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        crcFifo1_V_V_read = 1'b1;
    end else begin
        crcFifo1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op62_write_state2 == 1'b1)) | ((ii_state_load_reg_640 == 2'd2) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op71_write_state3 == 1'b1)) | ((ii_state_load_reg_640_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        m_axis_tx_data_TDATA_blk_n = output_V_data_V_1_state[1'd1];
    end else begin
        m_axis_tx_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_561)) begin
        if ((ap_predicate_op62_write_state2 == 1'b1)) begin
            output_V_data_V_1_data_in = ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287;
        end else if ((ii_state_load_reg_640 == 2'd2)) begin
            output_V_data_V_1_data_in = p_Result_73_fu_632_p3;
        end else begin
            output_V_data_V_1_data_in = 'bx;
        end
    end else begin
        output_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((output_V_data_V_1_sel == 1'b1)) begin
        output_V_data_V_1_data_out = output_V_data_V_1_payload_B;
    end else begin
        output_V_data_V_1_data_out = output_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op62_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ii_state_load_reg_640 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_V_data_V_1_vld_in = 1'b1;
    end else begin
        output_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_561)) begin
        if ((ap_predicate_op62_write_state2 == 1'b1)) begin
            output_V_keep_V_1_data_in = ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213;
        end else if ((ii_state_load_reg_640 == 2'd2)) begin
            output_V_keep_V_1_data_in = 64'd15;
        end else begin
            output_V_keep_V_1_data_in = 'bx;
        end
    end else begin
        output_V_keep_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((output_V_keep_V_1_sel == 1'b1)) begin
        output_V_keep_V_1_data_out = output_V_keep_V_1_payload_B;
    end else begin
        output_V_keep_V_1_data_out = output_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op62_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ii_state_load_reg_640 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_V_keep_V_1_vld_in = 1'b1;
    end else begin
        output_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_561)) begin
        if ((ap_predicate_op62_write_state2 == 1'b1)) begin
            output_V_last_V_1_data_in = ap_phi_reg_pp0_iter1_tmp_last_V_39_reg_331;
        end else if ((ii_state_load_reg_640 == 2'd2)) begin
            output_V_last_V_1_data_in = 1'd1;
        end else begin
            output_V_last_V_1_data_in = 'bx;
        end
    end else begin
        output_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((output_V_last_V_1_sel == 1'b1)) begin
        output_V_last_V_1_data_out = output_V_last_V_1_payload_B;
    end else begin
        output_V_last_V_1_data_out = output_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op62_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ii_state_load_reg_640 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_V_last_V_1_vld_in = 1'b1;
    end else begin
        output_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1))) begin
        tx_crcDataFifo_V_dat_blk_n = tx_crcDataFifo_V_dat_empty_n;
    end else begin
        tx_crcDataFifo_V_dat_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tx_crcDataFifo_V_dat_read = 1'b1;
    end else begin
        tx_crcDataFifo_V_dat_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1))) begin
        tx_crcDataFifo_V_kee_blk_n = tx_crcDataFifo_V_kee_empty_n;
    end else begin
        tx_crcDataFifo_V_kee_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tx_crcDataFifo_V_kee_read = 1'b1;
    end else begin
        tx_crcDataFifo_V_kee_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1))) begin
        tx_crcDataFifo_V_las_blk_n = tx_crcDataFifo_V_las_empty_n;
    end else begin
        tx_crcDataFifo_V_las_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tx_crcDataFifo_V_las_read = 1'b1;
    end else begin
        tx_crcDataFifo_V_las_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((crcFifo1_V_V_empty_n == 1'b0) & (ap_predicate_op53_read_state1 == 1'b1)) | ((io_acc_block_signal_op10 == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((output_V_last_V_1_state == 2'd1) | (output_V_keep_V_1_state == 2'd1) | (output_V_data_V_1_state == 2'd1) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_last_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_keep_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_data_V_1_state == 2'd3)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((crcFifo1_V_V_empty_n == 1'b0) & (ap_predicate_op53_read_state1 == 1'b1)) | ((io_acc_block_signal_op10 == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((output_V_last_V_1_state == 2'd1) | (output_V_keep_V_1_state == 2'd1) | (output_V_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_last_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_keep_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_data_V_1_state == 2'd3)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((crcFifo1_V_V_empty_n == 1'b0) & (ap_predicate_op53_read_state1 == 1'b1)) | ((io_acc_block_signal_op10 == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((output_V_last_V_1_state == 2'd1) | (output_V_keep_V_1_state == 2'd1) | (output_V_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_last_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_keep_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_data_V_1_state == 2'd3)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((crcFifo1_V_V_empty_n == 1'b0) & (ap_predicate_op53_read_state1 == 1'b1)) | ((io_acc_block_signal_op10 == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((output_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op62_write_state2 == 1'b1)) | ((ii_state_load_reg_640 == 2'd2) & (output_V_data_V_1_ack_in == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((output_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op71_write_state3 == 1'b1)) | ((ii_state_load_reg_640_pp0_iter1_reg == 2'd2) & (output_V_data_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((output_V_last_V_1_state == 2'd1) | (output_V_keep_V_1_state == 2'd1) | (output_V_data_V_1_state == 2'd1) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_last_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_keep_V_1_state == 2'd3)) | ((m_axis_tx_data_TREADY == 1'b0) & (output_V_data_V_1_state == 2'd3)));
end

always @ (*) begin
    ap_condition_561 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_tmp_data_V_55_reg_287 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_keep_V_reg_213 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_V_39_reg_331 = 'bx;

always @ (*) begin
    ap_predicate_op10_read_state1 = ((tmp_83_nbreadreq_fu_162_p5 == 1'd1) & (ii_state == 2'd1));
end

always @ (*) begin
    ap_predicate_op53_read_state1 = ((tmp_nbreadreq_fu_184_p3 == 1'd1) & (ii_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op62_write_state2 = ((tmp_83_reg_649 == 1'd1) & (ii_state_load_reg_640 == 2'd1));
end

always @ (*) begin
    ap_predicate_op71_write_state3 = ((tmp_83_reg_649_pp0_iter1_reg == 1'd1) & (ii_state_load_reg_640_pp0_iter1_reg == 2'd1));
end

assign ii_state_load_load_fu_400_p1 = ii_state;

assign io_acc_block_signal_op10 = (tx_crcDataFifo_V_las_empty_n & tx_crcDataFifo_V_kee_empty_n & tx_crcDataFifo_V_dat_empty_n);

assign m_axis_tx_data_TDATA = output_V_data_V_1_data_out;

assign m_axis_tx_data_TKEEP = output_V_keep_V_1_data_out;

assign m_axis_tx_data_TLAST = output_V_last_V_1_data_out;

assign m_axis_tx_data_TVALID = output_V_last_V_1_state[1'd0];

assign output_V_data_V_1_ack_in = output_V_data_V_1_state[1'd1];

assign output_V_data_V_1_ack_out = m_axis_tx_data_TREADY;

assign output_V_data_V_1_load_A = (output_V_data_V_1_state_cmp_full & ~output_V_data_V_1_sel_wr);

assign output_V_data_V_1_load_B = (output_V_data_V_1_state_cmp_full & output_V_data_V_1_sel_wr);

assign output_V_data_V_1_sel = output_V_data_V_1_sel_rd;

assign output_V_data_V_1_state_cmp_full = ((output_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign output_V_data_V_1_vld_out = output_V_data_V_1_state[1'd0];

assign output_V_keep_V_1_ack_in = output_V_keep_V_1_state[1'd1];

assign output_V_keep_V_1_ack_out = m_axis_tx_data_TREADY;

assign output_V_keep_V_1_load_A = (output_V_keep_V_1_state_cmp_full & ~output_V_keep_V_1_sel_wr);

assign output_V_keep_V_1_load_B = (output_V_keep_V_1_state_cmp_full & output_V_keep_V_1_sel_wr);

assign output_V_keep_V_1_sel = output_V_keep_V_1_sel_rd;

assign output_V_keep_V_1_state_cmp_full = ((output_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign output_V_keep_V_1_vld_out = output_V_keep_V_1_state[1'd0];

assign output_V_last_V_1_ack_in = output_V_last_V_1_state[1'd1];

assign output_V_last_V_1_ack_out = m_axis_tx_data_TREADY;

assign output_V_last_V_1_load_A = (output_V_last_V_1_state_cmp_full & ~output_V_last_V_1_sel_wr);

assign output_V_last_V_1_load_B = (output_V_last_V_1_state_cmp_full & output_V_last_V_1_sel_wr);

assign output_V_last_V_1_sel = output_V_last_V_1_sel_rd;

assign output_V_last_V_1_state_cmp_full = ((output_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign output_V_last_V_1_vld_out = output_V_last_V_1_state[1'd0];

assign p_Result_59_fu_584_p5 = {{tx_crcDataFifo_V_dat_dout[511:96]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[63:0]}};

assign p_Result_60_fu_572_p5 = {{tx_crcDataFifo_V_dat_dout[511:128]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[95:0]}};

assign p_Result_61_fu_560_p5 = {{tx_crcDataFifo_V_dat_dout[511:160]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[127:0]}};

assign p_Result_62_fu_548_p5 = {{tx_crcDataFifo_V_dat_dout[511:192]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[159:0]}};

assign p_Result_63_fu_536_p5 = {{tx_crcDataFifo_V_dat_dout[511:224]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[191:0]}};

assign p_Result_64_fu_524_p5 = {{tx_crcDataFifo_V_dat_dout[511:256]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[223:0]}};

assign p_Result_65_fu_512_p5 = {{tx_crcDataFifo_V_dat_dout[511:288]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[255:0]}};

assign p_Result_66_fu_500_p5 = {{tx_crcDataFifo_V_dat_dout[511:320]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[287:0]}};

assign p_Result_67_fu_488_p5 = {{tx_crcDataFifo_V_dat_dout[511:352]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[319:0]}};

assign p_Result_68_fu_476_p5 = {{tx_crcDataFifo_V_dat_dout[511:384]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[351:0]}};

assign p_Result_69_fu_464_p5 = {{tx_crcDataFifo_V_dat_dout[511:416]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[383:0]}};

assign p_Result_70_fu_452_p5 = {{tx_crcDataFifo_V_dat_dout[511:448]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[415:0]}};

assign p_Result_71_fu_440_p5 = {{tx_crcDataFifo_V_dat_dout[511:480]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[447:0]}};

assign p_Result_72_fu_428_p5 = {{crc_V}, {tx_crcDataFifo_V_dat_dout[479:0]}};

assign p_Result_73_fu_632_p3 = {{480'd0}, {crc_V_load_reg_644}};

assign p_Result_s_fu_596_p5 = {{tx_crcDataFifo_V_dat_dout[511:64]}, {crc_V}, {tx_crcDataFifo_V_dat_dout[31:0]}};

assign r_V_fu_614_p2 = (crcFifo1_V_V_dout ^ 32'd4294967295);

assign tmp_83_nbreadreq_fu_162_p5 = (tx_crcDataFifo_V_las_empty_n & tx_crcDataFifo_V_kee_empty_n & tx_crcDataFifo_V_dat_empty_n);

assign tmp_84_fu_420_p3 = tx_crcDataFifo_V_kee_dout[32'd63];

assign tmp_keep_V_51_fu_412_p1 = tx_crcDataFifo_V_kee_dout;

assign tmp_last_V_fu_416_p1 = tx_crcDataFifo_V_las_dout;

assign tmp_nbreadreq_fu_184_p3 = crcFifo1_V_V_empty_n;

endmodule //insert_icrc_512_s
