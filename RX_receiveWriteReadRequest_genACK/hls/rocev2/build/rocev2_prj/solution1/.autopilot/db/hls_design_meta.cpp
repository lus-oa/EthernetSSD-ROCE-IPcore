#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axis_rx_data_TDATA", 512, hls_in, 0, "axis", "in_data", 1),
	Port_Property("s_axis_rx_data_TKEEP", 64, hls_in, 1, "axis", "in_data", 1),
	Port_Property("s_axis_rx_data_TLAST", 1, hls_in, 2, "axis", "in_data", 1),
	Port_Property("s_axis_tx_meta_V_TDATA", 160, hls_in, 3, "axis", "in_data", 1),
	Port_Property("s_axis_tx_data_TDATA", 512, hls_in, 4, "axis", "in_data", 1),
	Port_Property("s_axis_tx_data_TKEEP", 64, hls_in, 5, "axis", "in_data", 1),
	Port_Property("s_axis_tx_data_TLAST", 1, hls_in, 6, "axis", "in_data", 1),
	Port_Property("m_axis_tx_data_TDATA", 512, hls_out, 7, "axis", "out_data", 1),
	Port_Property("m_axis_tx_data_TKEEP", 64, hls_out, 8, "axis", "out_data", 1),
	Port_Property("m_axis_tx_data_TLAST", 1, hls_out, 9, "axis", "out_data", 1),
	Port_Property("m_axis_mem_write_cmd_TDATA", 96, hls_out, 10, "axis", "out_data", 1),
	Port_Property("m_axis_mem_write_cmd_TDEST", 1, hls_out, 11, "axis", "out_data", 1),
	Port_Property("m_axis_mem_read_cmd_TDATA", 96, hls_out, 12, "axis", "out_data", 1),
	Port_Property("m_axis_mem_read_cmd_TDEST", 1, hls_out, 13, "axis", "out_data", 1),
	Port_Property("m_axis_mem_write_data_TDATA", 512, hls_out, 14, "axis", "out_data", 1),
	Port_Property("m_axis_mem_write_data_TKEEP", 64, hls_out, 15, "axis", "out_data", 1),
	Port_Property("m_axis_mem_write_data_TLAST", 1, hls_out, 16, "axis", "out_data", 1),
	Port_Property("m_axis_mem_write_data_TDEST", 1, hls_out, 17, "axis", "out_data", 1),
	Port_Property("s_axis_mem_read_data_TDATA", 512, hls_in, 18, "axis", "in_data", 1),
	Port_Property("s_axis_mem_read_data_TKEEP", 64, hls_in, 19, "axis", "in_data", 1),
	Port_Property("s_axis_mem_read_data_TLAST", 1, hls_in, 20, "axis", "in_data", 1),
	Port_Property("s_axis_qp_interface_V_TDATA", 144, hls_in, 21, "axis", "in_data", 1),
	Port_Property("s_axis_qp_conn_interface_V_TDATA", 184, hls_in, 22, "axis", "in_data", 1),
	Port_Property("local_ip_address_V", 128, hls_in, 23, "ap_none", "in_data", 1),
	Port_Property("regCrcDropPkgCount_V", 32, hls_out, 24, "ap_vld", "out_data", 1),
	Port_Property("regInvalidPsnDropCount_V", 32, hls_out, 25, "ap_vld", "out_data", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axis_qp_interface_V_TVALID", 1, hls_in, 21, "axis", "in_vld", 1),
	Port_Property("s_axis_qp_interface_V_TREADY", 1, hls_out, 21, "axis", "in_acc", 1),
	Port_Property("regInvalidPsnDropCount_V_ap_vld", 1, hls_out, 25, "ap_vld", "out_vld", 1),
	Port_Property("m_axis_mem_write_cmd_TVALID", 1, hls_out, 11, "axis", "out_vld", 1),
	Port_Property("m_axis_mem_write_cmd_TREADY", 1, hls_in, 11, "axis", "out_acc", 1),
	Port_Property("m_axis_mem_write_data_TVALID", 1, hls_out, 17, "axis", "out_vld", 1),
	Port_Property("m_axis_mem_write_data_TREADY", 1, hls_in, 17, "axis", "out_acc", 1),
	Port_Property("s_axis_tx_meta_V_TVALID", 1, hls_in, 3, "axis", "in_vld", 1),
	Port_Property("s_axis_tx_meta_V_TREADY", 1, hls_out, 3, "axis", "in_acc", 1),
	Port_Property("s_axis_tx_data_TVALID", 1, hls_in, 6, "axis", "in_vld", 1),
	Port_Property("s_axis_tx_data_TREADY", 1, hls_out, 6, "axis", "in_acc", 1),
	Port_Property("s_axis_mem_read_data_TVALID", 1, hls_in, 20, "axis", "in_vld", 1),
	Port_Property("s_axis_mem_read_data_TREADY", 1, hls_out, 20, "axis", "in_acc", 1),
	Port_Property("m_axis_mem_read_cmd_TVALID", 1, hls_out, 13, "axis", "out_vld", 1),
	Port_Property("m_axis_mem_read_cmd_TREADY", 1, hls_in, 13, "axis", "out_acc", 1),
	Port_Property("s_axis_qp_conn_interface_V_TVALID", 1, hls_in, 22, "axis", "in_vld", 1),
	Port_Property("s_axis_qp_conn_interface_V_TREADY", 1, hls_out, 22, "axis", "in_acc", 1),
	Port_Property("regCrcDropPkgCount_V_ap_vld", 1, hls_out, 24, "ap_vld", "out_vld", 1),
	Port_Property("s_axis_rx_data_TVALID", 1, hls_in, 2, "axis", "in_vld", 1),
	Port_Property("s_axis_rx_data_TREADY", 1, hls_out, 2, "axis", "in_acc", 1),
	Port_Property("m_axis_tx_data_TVALID", 1, hls_out, 9, "axis", "out_vld", 1),
	Port_Property("m_axis_tx_data_TREADY", 1, hls_in, 9, "axis", "out_acc", 1),
};
const char* HLS_Design_Meta::dut_name = "rocev2_top";
