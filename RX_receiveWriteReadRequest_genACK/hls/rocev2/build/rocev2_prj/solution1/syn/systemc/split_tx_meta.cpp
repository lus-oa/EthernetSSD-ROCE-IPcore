// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "split_tx_meta.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic split_tx_meta::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic split_tx_meta::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> split_tx_meta::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> split_tx_meta::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool split_tx_meta::ap_const_boolean_1 = true;
const sc_lv<1> split_tx_meta::ap_const_lv1_1 = "1";
const bool split_tx_meta::ap_const_boolean_0 = false;
const sc_lv<16> split_tx_meta::ap_const_lv16_8 = "1000";
const sc_lv<32> split_tx_meta::ap_const_lv32_60 = "1100000";
const sc_lv<32> split_tx_meta::ap_const_lv32_7F = "1111111";

split_tx_meta::split_tx_meta(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( io_acc_block_signal_op5 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( io_acc_block_signal_op23 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( io_acc_block_signal_op24 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( io_acc_block_signal_op5 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( io_acc_block_signal_op23 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( io_acc_block_signal_op24 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( io_acc_block_signal_op5 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( io_acc_block_signal_op23 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( io_acc_block_signal_op24 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op5 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( io_acc_block_signal_op23 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( io_acc_block_signal_op24 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_io_acc_block_signal_op23);
    sensitive << ( tx_udp2ipMetaFifo_V_s_full_n );
    sensitive << ( tx_udp2ipMetaFifo_V_1_full_n );

    SC_METHOD(thread_io_acc_block_signal_op24);
    sensitive << ( tx_udpMetaFifo_V_the_full_n );
    sensitive << ( tx_udpMetaFifo_V_my_s_full_n );
    sensitive << ( tx_udpMetaFifo_V_len_full_n );
    sensitive << ( tx_udpMetaFifo_V_val_full_n );

    SC_METHOD(thread_io_acc_block_signal_op5);
    sensitive << ( tx_ipUdpMetaFifo_V_t_1_empty_n );
    sensitive << ( tx_ipUdpMetaFifo_V_t_empty_n );
    sensitive << ( tx_ipUdpMetaFifo_V_m_empty_n );
    sensitive << ( tx_ipUdpMetaFifo_V_l_empty_n );

    SC_METHOD(thread_tempLen_V_fu_125_p2);
    sensitive << ( tx_ipUdpMetaFifo_V_l_dout );

    SC_METHOD(thread_tmp_nbreadreq_fu_56_p6);
    sensitive << ( tx_ipUdpMetaFifo_V_t_1_empty_n );
    sensitive << ( tx_ipUdpMetaFifo_V_t_empty_n );
    sensitive << ( tx_ipUdpMetaFifo_V_m_empty_n );
    sensitive << ( tx_ipUdpMetaFifo_V_l_empty_n );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_l_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tx_ipUdpMetaFifo_V_l_empty_n );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_l_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_m_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tx_ipUdpMetaFifo_V_m_empty_n );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_m_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_t_1_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tx_ipUdpMetaFifo_V_t_1_empty_n );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_t_1_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_t_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tx_ipUdpMetaFifo_V_t_empty_n );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_ipUdpMetaFifo_V_t_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_56_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_udp2ipMetaFifo_V_1_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tx_udp2ipMetaFifo_V_1_full_n );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_udp2ipMetaFifo_V_1_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tempLen_V_reg_155 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_udp2ipMetaFifo_V_1_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_udp2ipMetaFifo_V_s_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tx_udp2ipMetaFifo_V_s_full_n );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_udp2ipMetaFifo_V_s_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tmp_their_address_V_reg_161 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_udp2ipMetaFifo_V_s_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_len_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tx_udpMetaFifo_V_len_full_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_udpMetaFifo_V_len_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tempLen_V_reg_155 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_len_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_my_s_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tx_udpMetaFifo_V_my_s_full_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_udpMetaFifo_V_my_s_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tmp_my_port_V_reg_150 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_my_s_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_the_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tx_udpMetaFifo_V_the_full_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_udpMetaFifo_V_the_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tmp_their_port_V_reg_145 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_the_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_val_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( tx_udpMetaFifo_V_val_full_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_udpMetaFifo_V_val_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_udpMetaFifo_V_val_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_141 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "split_tx_meta_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_1_dout, "(port)tx_ipUdpMetaFifo_V_t_1_dout");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_1_empty_n, "(port)tx_ipUdpMetaFifo_V_t_1_empty_n");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_1_read, "(port)tx_ipUdpMetaFifo_V_t_1_read");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_dout, "(port)tx_ipUdpMetaFifo_V_t_dout");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_empty_n, "(port)tx_ipUdpMetaFifo_V_t_empty_n");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_read, "(port)tx_ipUdpMetaFifo_V_t_read");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_m_dout, "(port)tx_ipUdpMetaFifo_V_m_dout");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_m_empty_n, "(port)tx_ipUdpMetaFifo_V_m_empty_n");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_m_read, "(port)tx_ipUdpMetaFifo_V_m_read");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_l_dout, "(port)tx_ipUdpMetaFifo_V_l_dout");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_l_empty_n, "(port)tx_ipUdpMetaFifo_V_l_empty_n");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_l_read, "(port)tx_ipUdpMetaFifo_V_l_read");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_s_din, "(port)tx_udp2ipMetaFifo_V_s_din");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_s_full_n, "(port)tx_udp2ipMetaFifo_V_s_full_n");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_s_write, "(port)tx_udp2ipMetaFifo_V_s_write");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_1_din, "(port)tx_udp2ipMetaFifo_V_1_din");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_1_full_n, "(port)tx_udp2ipMetaFifo_V_1_full_n");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_1_write, "(port)tx_udp2ipMetaFifo_V_1_write");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_the_din, "(port)tx_udpMetaFifo_V_the_din");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_the_full_n, "(port)tx_udpMetaFifo_V_the_full_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_the_write, "(port)tx_udpMetaFifo_V_the_write");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_my_s_din, "(port)tx_udpMetaFifo_V_my_s_din");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_my_s_full_n, "(port)tx_udpMetaFifo_V_my_s_full_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_my_s_write, "(port)tx_udpMetaFifo_V_my_s_write");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_len_din, "(port)tx_udpMetaFifo_V_len_din");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_len_full_n, "(port)tx_udpMetaFifo_V_len_full_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_len_write, "(port)tx_udpMetaFifo_V_len_write");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_val_din, "(port)tx_udpMetaFifo_V_val_din");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_val_full_n, "(port)tx_udpMetaFifo_V_val_full_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_val_write, "(port)tx_udpMetaFifo_V_val_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, io_acc_block_signal_op5, "io_acc_block_signal_op5");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_56_p6, "tmp_nbreadreq_fu_56_p6");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, io_acc_block_signal_op23, "io_acc_block_signal_op23");
    sc_trace(mVcdFile, tmp_reg_141, "tmp_reg_141");
    sc_trace(mVcdFile, io_acc_block_signal_op24, "io_acc_block_signal_op24");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_1_blk_n, "tx_ipUdpMetaFifo_V_t_1_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_t_blk_n, "tx_ipUdpMetaFifo_V_t_blk_n");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_m_blk_n, "tx_ipUdpMetaFifo_V_m_blk_n");
    sc_trace(mVcdFile, tx_ipUdpMetaFifo_V_l_blk_n, "tx_ipUdpMetaFifo_V_l_blk_n");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_s_blk_n, "tx_udp2ipMetaFifo_V_s_blk_n");
    sc_trace(mVcdFile, tx_udp2ipMetaFifo_V_1_blk_n, "tx_udp2ipMetaFifo_V_1_blk_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_the_blk_n, "tx_udpMetaFifo_V_the_blk_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_my_s_blk_n, "tx_udpMetaFifo_V_my_s_blk_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_len_blk_n, "tx_udpMetaFifo_V_len_blk_n");
    sc_trace(mVcdFile, tx_udpMetaFifo_V_val_blk_n, "tx_udpMetaFifo_V_val_blk_n");
    sc_trace(mVcdFile, tmp_their_port_V_reg_145, "tmp_their_port_V_reg_145");
    sc_trace(mVcdFile, tmp_my_port_V_reg_150, "tmp_my_port_V_reg_150");
    sc_trace(mVcdFile, tempLen_V_fu_125_p2, "tempLen_V_fu_125_p2");
    sc_trace(mVcdFile, tempLen_V_reg_155, "tempLen_V_reg_155");
    sc_trace(mVcdFile, tmp_their_address_V_reg_161, "tmp_their_address_V_reg_161");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

split_tx_meta::~split_tx_meta() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void split_tx_meta::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tempLen_V_reg_155 = tempLen_V_fu_125_p2.read();
        tmp_my_port_V_reg_150 = tx_ipUdpMetaFifo_V_m_dout.read();
        tmp_their_address_V_reg_161 = tx_ipUdpMetaFifo_V_t_1_dout.read().range(127, 96);
        tmp_their_port_V_reg_145 = tx_ipUdpMetaFifo_V_t_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_141 = tmp_nbreadreq_fu_56_p6.read();
    }
}

void split_tx_meta::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void split_tx_meta::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_tx_meta::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op5.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op23.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void split_tx_meta::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op5.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op23.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void split_tx_meta::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op5.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op23.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void split_tx_meta::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op5.read()) && 
  esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1)) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void split_tx_meta::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op23.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read())));
}

void split_tx_meta::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void split_tx_meta::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void split_tx_meta::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void split_tx_meta::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void split_tx_meta::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void split_tx_meta::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void split_tx_meta::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void split_tx_meta::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void split_tx_meta::thread_io_acc_block_signal_op23() {
    io_acc_block_signal_op23 = (tx_udp2ipMetaFifo_V_s_full_n.read() & tx_udp2ipMetaFifo_V_1_full_n.read());
}

void split_tx_meta::thread_io_acc_block_signal_op24() {
    io_acc_block_signal_op24 = (tx_udpMetaFifo_V_the_full_n.read() & tx_udpMetaFifo_V_my_s_full_n.read() & tx_udpMetaFifo_V_len_full_n.read() & tx_udpMetaFifo_V_val_full_n.read());
}

void split_tx_meta::thread_io_acc_block_signal_op5() {
    io_acc_block_signal_op5 = (tx_ipUdpMetaFifo_V_t_1_empty_n.read() & tx_ipUdpMetaFifo_V_t_empty_n.read() & tx_ipUdpMetaFifo_V_m_empty_n.read() & tx_ipUdpMetaFifo_V_l_empty_n.read());
}

void split_tx_meta::thread_tempLen_V_fu_125_p2() {
    tempLen_V_fu_125_p2 = (!tx_ipUdpMetaFifo_V_l_dout.read().is_01() || !ap_const_lv16_8.is_01())? sc_lv<16>(): (sc_biguint<16>(tx_ipUdpMetaFifo_V_l_dout.read()) + sc_biguint<16>(ap_const_lv16_8));
}

void split_tx_meta::thread_tmp_nbreadreq_fu_56_p6() {
    tmp_nbreadreq_fu_56_p6 =  (sc_lv<1>) ((tx_ipUdpMetaFifo_V_t_1_empty_n.read() & tx_ipUdpMetaFifo_V_t_empty_n.read() & tx_ipUdpMetaFifo_V_m_empty_n.read() & tx_ipUdpMetaFifo_V_l_empty_n.read()));
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_l_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_l_blk_n = tx_ipUdpMetaFifo_V_l_empty_n.read();
    } else {
        tx_ipUdpMetaFifo_V_l_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_l_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_l_read = ap_const_logic_1;
    } else {
        tx_ipUdpMetaFifo_V_l_read = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_m_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_m_blk_n = tx_ipUdpMetaFifo_V_m_empty_n.read();
    } else {
        tx_ipUdpMetaFifo_V_m_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_m_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_m_read = ap_const_logic_1;
    } else {
        tx_ipUdpMetaFifo_V_m_read = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_t_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_t_1_blk_n = tx_ipUdpMetaFifo_V_t_1_empty_n.read();
    } else {
        tx_ipUdpMetaFifo_V_t_1_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_t_1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_t_1_read = ap_const_logic_1;
    } else {
        tx_ipUdpMetaFifo_V_t_1_read = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_t_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_t_blk_n = tx_ipUdpMetaFifo_V_t_empty_n.read();
    } else {
        tx_ipUdpMetaFifo_V_t_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_ipUdpMetaFifo_V_t_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_56_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_ipUdpMetaFifo_V_t_read = ap_const_logic_1;
    } else {
        tx_ipUdpMetaFifo_V_t_read = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_udp2ipMetaFifo_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_udp2ipMetaFifo_V_1_blk_n = tx_udp2ipMetaFifo_V_1_full_n.read();
    } else {
        tx_udp2ipMetaFifo_V_1_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_udp2ipMetaFifo_V_1_din() {
    tx_udp2ipMetaFifo_V_1_din = tempLen_V_reg_155.read();
}

void split_tx_meta::thread_tx_udp2ipMetaFifo_V_1_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_udp2ipMetaFifo_V_1_write = ap_const_logic_1;
    } else {
        tx_udp2ipMetaFifo_V_1_write = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_udp2ipMetaFifo_V_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_udp2ipMetaFifo_V_s_blk_n = tx_udp2ipMetaFifo_V_s_full_n.read();
    } else {
        tx_udp2ipMetaFifo_V_s_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_udp2ipMetaFifo_V_s_din() {
    tx_udp2ipMetaFifo_V_s_din = tmp_their_address_V_reg_161.read();
}

void split_tx_meta::thread_tx_udp2ipMetaFifo_V_s_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_udp2ipMetaFifo_V_s_write = ap_const_logic_1;
    } else {
        tx_udp2ipMetaFifo_V_s_write = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_len_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_len_blk_n = tx_udpMetaFifo_V_len_full_n.read();
    } else {
        tx_udpMetaFifo_V_len_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_len_din() {
    tx_udpMetaFifo_V_len_din = tempLen_V_reg_155.read();
}

void split_tx_meta::thread_tx_udpMetaFifo_V_len_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_len_write = ap_const_logic_1;
    } else {
        tx_udpMetaFifo_V_len_write = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_my_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_my_s_blk_n = tx_udpMetaFifo_V_my_s_full_n.read();
    } else {
        tx_udpMetaFifo_V_my_s_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_my_s_din() {
    tx_udpMetaFifo_V_my_s_din = tmp_my_port_V_reg_150.read();
}

void split_tx_meta::thread_tx_udpMetaFifo_V_my_s_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_my_s_write = ap_const_logic_1;
    } else {
        tx_udpMetaFifo_V_my_s_write = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_the_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_the_blk_n = tx_udpMetaFifo_V_the_full_n.read();
    } else {
        tx_udpMetaFifo_V_the_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_the_din() {
    tx_udpMetaFifo_V_the_din = tmp_their_port_V_reg_145.read();
}

void split_tx_meta::thread_tx_udpMetaFifo_V_the_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_the_write = ap_const_logic_1;
    } else {
        tx_udpMetaFifo_V_the_write = ap_const_logic_0;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_val_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_val_blk_n = tx_udpMetaFifo_V_val_full_n.read();
    } else {
        tx_udpMetaFifo_V_val_blk_n = ap_const_logic_1;
    }
}

void split_tx_meta::thread_tx_udpMetaFifo_V_val_din() {
    tx_udpMetaFifo_V_val_din = ap_const_lv1_1;
}

void split_tx_meta::thread_tx_udpMetaFifo_V_val_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_141.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_udpMetaFifo_V_val_write = ap_const_logic_1;
    } else {
        tx_udpMetaFifo_V_val_write = ap_const_logic_0;
    }
}

void split_tx_meta::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

