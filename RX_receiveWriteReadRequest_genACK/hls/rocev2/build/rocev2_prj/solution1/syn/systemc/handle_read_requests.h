// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _handle_read_requests_HH_
#define _handle_read_requests_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct handle_read_requests : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<129> > rx_readRequestFifo_V_dout;
    sc_in< sc_logic > rx_readRequestFifo_V_empty_n;
    sc_out< sc_logic > rx_readRequestFifo_V_read;
    sc_out< sc_lv<113> > rx_remoteMemCmd_V_din;
    sc_in< sc_logic > rx_remoteMemCmd_V_full_n;
    sc_out< sc_logic > rx_remoteMemCmd_V_write;
    sc_out< sc_lv<135> > rx_readEvenFifo_V_din;
    sc_in< sc_logic > rx_readEvenFifo_V_full_n;
    sc_out< sc_logic > rx_readEvenFifo_V_write;


    // Module declarations
    handle_read_requests(sc_module_name name);
    SC_HAS_PROCESS(handle_read_requests);

    ~handle_read_requests();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<1> > hrr_fsmState_load_load_fu_266_p1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_98_p3;
    sc_signal< bool > ap_predicate_op9_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<1> > hrr_fsmState_load_reg_477;
    sc_signal< sc_lv<1> > tmp_reg_486;
    sc_signal< bool > ap_predicate_op52_write_state2;
    sc_signal< bool > ap_predicate_op54_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > hrr_fsmState;
    sc_signal< sc_lv<48> > request_vaddr_V;
    sc_signal< sc_lv<32> > request_dma_length_V;
    sc_signal< sc_lv<24> > request_qpn_V;
    sc_signal< sc_lv<24> > request_psn_V;
    sc_signal< sc_logic > rx_readRequestFifo_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > rx_remoteMemCmd_V_blk_n;
    sc_signal< sc_logic > rx_readEvenFifo_V_blk_n;
    sc_signal< sc_lv<24> > tmp_qpn_V_19_fu_278_p1;
    sc_signal< sc_lv<24> > tmp_qpn_V_19_reg_490;
    sc_signal< sc_lv<48> > readAddr_V_fu_288_p4;
    sc_signal< sc_lv<48> > readAddr_V_reg_495;
    sc_signal< sc_lv<32> > readLength_V_2_fu_299_p4;
    sc_signal< sc_lv<32> > readLength_V_2_reg_500;
    sc_signal< sc_lv<24> > tmp_psn_V_6_reg_506;
    sc_signal< sc_lv<16> > tmp_qpn_V_18_fu_346_p1;
    sc_signal< sc_lv<16> > tmp_qpn_V_18_reg_515;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<48> > ap_phi_mux_request_vaddr_V_new_s_phi_fu_129_p4;
    sc_signal< sc_lv<48> > add_ln700_11_fu_326_p2;
    sc_signal< sc_lv<48> > ap_phi_reg_pp0_iter0_request_vaddr_V_new_s_reg_126;
    sc_signal< sc_lv<1> > icmp_ln895_3_fu_320_p2;
    sc_signal< sc_lv<32> > ap_phi_mux_request_dma_length_V_1_phi_fu_138_p4;
    sc_signal< sc_lv<32> > add_ln701_6_fu_333_p2;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_request_dma_length_V_1_reg_135;
    sc_signal< sc_lv<1> > ap_phi_mux_request_vaddr_V_flag_phi_fu_147_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_request_vaddr_V_flag_reg_144;
    sc_signal< sc_lv<1> > icmp_ln895_fu_350_p2;
    sc_signal< sc_lv<48> > ap_phi_mux_request_vaddr_V_new_1_phi_fu_158_p4;
    sc_signal< sc_lv<48> > add_ln700_fu_362_p2;
    sc_signal< sc_lv<48> > ap_phi_reg_pp0_iter0_request_vaddr_V_new_1_reg_155;
    sc_signal< sc_lv<32> > ap_phi_mux_request_dma_length_V_2_phi_fu_168_p4;
    sc_signal< sc_lv<32> > add_ln701_fu_369_p2;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_request_dma_length_V_2_reg_165;
    sc_signal< sc_lv<1> > ap_phi_mux_request_vaddr_V_flag_1_phi_fu_178_p6;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_request_vaddr_V_flag_1_reg_175;
    sc_signal< sc_lv<48> > ap_phi_mux_request_vaddr_V_new_2_phi_fu_193_p6;
    sc_signal< sc_lv<48> > ap_phi_reg_pp0_iter0_request_vaddr_V_new_2_reg_190;
    sc_signal< sc_lv<32> > ap_phi_mux_request_dma_length_V_3_phi_fu_207_p6;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_request_dma_length_V_3_reg_204;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_tmp_length_V_5_reg_218;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_tmp_length_V_5_reg_218;
    sc_signal< sc_lv<5> > ap_phi_reg_pp0_iter0_tmp_op_code_4_reg_229;
    sc_signal< sc_lv<5> > ap_phi_reg_pp0_iter1_tmp_op_code_4_reg_229;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_tmp_length_V_reg_242;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_tmp_length_V_reg_242;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter0_tmp_op_code_reg_253;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter1_tmp_op_code_reg_253;
    sc_signal< sc_lv<24> > tmp_psn_V_fu_444_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<135> > tmp_2_fu_417_p7;
    sc_signal< sc_lv<135> > tmp_3_fu_460_p7;
    sc_signal< sc_lv<64> > tmp_addr_V_fu_393_p1;
    sc_signal< sc_lv<112> > tmp_62_i_fu_396_p4;
    sc_signal< sc_lv<4> > sext_ln738_fu_432_p1;
    sc_signal< sc_lv<5> > zext_ln738_fu_436_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_192;
    sc_signal< bool > ap_condition_100;
    sc_signal< bool > ap_condition_190;
    sc_signal< bool > ap_condition_159;
    sc_signal< bool > ap_condition_163;
    sc_signal< bool > ap_condition_87;
    sc_signal< bool > ap_condition_205;
    sc_signal< bool > ap_condition_239;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<48> ap_const_lv48_0;
    static const sc_lv<32> ap_const_lv32_400;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_67;
    static const sc_lv<32> ap_const_lv32_68;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<48> ap_const_lv48_400;
    static const sc_lv<32> ap_const_lv32_FFFFFC00;
    static const sc_lv<113> ap_const_lv113_0;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<24> ap_const_lv24_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln700_11_fu_326_p2();
    void thread_add_ln700_fu_362_p2();
    void thread_add_ln701_6_fu_333_p2();
    void thread_add_ln701_fu_369_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_100();
    void thread_ap_condition_159();
    void thread_ap_condition_163();
    void thread_ap_condition_190();
    void thread_ap_condition_192();
    void thread_ap_condition_205();
    void thread_ap_condition_239();
    void thread_ap_condition_87();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_phi_mux_request_dma_length_V_1_phi_fu_138_p4();
    void thread_ap_phi_mux_request_dma_length_V_2_phi_fu_168_p4();
    void thread_ap_phi_mux_request_dma_length_V_3_phi_fu_207_p6();
    void thread_ap_phi_mux_request_vaddr_V_flag_1_phi_fu_178_p6();
    void thread_ap_phi_mux_request_vaddr_V_flag_phi_fu_147_p4();
    void thread_ap_phi_mux_request_vaddr_V_new_1_phi_fu_158_p4();
    void thread_ap_phi_mux_request_vaddr_V_new_2_phi_fu_193_p6();
    void thread_ap_phi_mux_request_vaddr_V_new_s_phi_fu_129_p4();
    void thread_ap_phi_reg_pp0_iter0_request_dma_length_V_1_reg_135();
    void thread_ap_phi_reg_pp0_iter0_request_dma_length_V_2_reg_165();
    void thread_ap_phi_reg_pp0_iter0_request_dma_length_V_3_reg_204();
    void thread_ap_phi_reg_pp0_iter0_request_vaddr_V_flag_1_reg_175();
    void thread_ap_phi_reg_pp0_iter0_request_vaddr_V_flag_reg_144();
    void thread_ap_phi_reg_pp0_iter0_request_vaddr_V_new_1_reg_155();
    void thread_ap_phi_reg_pp0_iter0_request_vaddr_V_new_2_reg_190();
    void thread_ap_phi_reg_pp0_iter0_request_vaddr_V_new_s_reg_126();
    void thread_ap_phi_reg_pp0_iter0_tmp_length_V_5_reg_218();
    void thread_ap_phi_reg_pp0_iter0_tmp_length_V_reg_242();
    void thread_ap_phi_reg_pp0_iter0_tmp_op_code_4_reg_229();
    void thread_ap_phi_reg_pp0_iter0_tmp_op_code_reg_253();
    void thread_ap_predicate_op52_write_state2();
    void thread_ap_predicate_op54_write_state2();
    void thread_ap_predicate_op9_read_state1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_hrr_fsmState_load_load_fu_266_p1();
    void thread_icmp_ln895_3_fu_320_p2();
    void thread_icmp_ln895_fu_350_p2();
    void thread_readAddr_V_fu_288_p4();
    void thread_readLength_V_2_fu_299_p4();
    void thread_rx_readEvenFifo_V_blk_n();
    void thread_rx_readEvenFifo_V_din();
    void thread_rx_readEvenFifo_V_write();
    void thread_rx_readRequestFifo_V_blk_n();
    void thread_rx_readRequestFifo_V_read();
    void thread_rx_remoteMemCmd_V_blk_n();
    void thread_rx_remoteMemCmd_V_din();
    void thread_rx_remoteMemCmd_V_write();
    void thread_sext_ln738_fu_432_p1();
    void thread_tmp_2_fu_417_p7();
    void thread_tmp_3_fu_460_p7();
    void thread_tmp_62_i_fu_396_p4();
    void thread_tmp_addr_V_fu_393_p1();
    void thread_tmp_nbreadreq_fu_98_p3();
    void thread_tmp_psn_V_fu_444_p2();
    void thread_tmp_qpn_V_18_fu_346_p1();
    void thread_tmp_qpn_V_19_fu_278_p1();
    void thread_zext_ln738_fu_436_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
