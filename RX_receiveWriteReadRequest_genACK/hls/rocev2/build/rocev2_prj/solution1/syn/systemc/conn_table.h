// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conn_table_HH_
#define _conn_table_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conn_table_conn_table_remote_qp.h"
#include "conn_table_conn_table_remote_ip.h"
#include "conn_table_conn_table_remote_ud.h"

namespace ap_rtl {

struct conn_table : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > qpi2connTable_req_V_TVALID;
    sc_in< sc_lv<16> > tx_ibhconnTable_req_s_3_dout;
    sc_in< sc_logic > tx_ibhconnTable_req_s_3_empty_n;
    sc_out< sc_logic > tx_ibhconnTable_req_s_3_read;
    sc_out< sc_lv<168> > tx_connTable2ibh_rsp_1_din;
    sc_in< sc_logic > tx_connTable2ibh_rsp_1_full_n;
    sc_out< sc_logic > tx_connTable2ibh_rsp_1_write;
    sc_in< sc_lv<184> > qpi2connTable_req_V_TDATA;
    sc_out< sc_logic > qpi2connTable_req_V_TREADY;


    // Module declarations
    conn_table(sc_module_name name);
    SC_HAS_PROCESS(conn_table);

    ~conn_table();

    sc_trace_file* mVcdFile;

    conn_table_conn_table_remote_qp* conn_table_remote_qp_U;
    conn_table_conn_table_remote_ip* conn_table_remote_ip_U;
    conn_table_conn_table_remote_ud* conn_table_remote_ud_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_66_p3;
    sc_signal< sc_lv<1> > tmp_111_nbreadreq_fu_74_p3;
    sc_signal< bool > ap_predicate_op7_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<1> > tmp_reg_226;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > conn_table_remote_qp_address0;
    sc_signal< sc_logic > conn_table_remote_qp_ce0;
    sc_signal< sc_logic > conn_table_remote_qp_we0;
    sc_signal< sc_lv<24> > conn_table_remote_qp_d0;
    sc_signal< sc_lv<24> > conn_table_remote_qp_q0;
    sc_signal< sc_lv<9> > conn_table_remote_ip_address0;
    sc_signal< sc_logic > conn_table_remote_ip_ce0;
    sc_signal< sc_logic > conn_table_remote_ip_we0;
    sc_signal< sc_lv<128> > conn_table_remote_ip_d0;
    sc_signal< sc_lv<128> > conn_table_remote_ip_q0;
    sc_signal< sc_lv<9> > conn_table_remote_ud_address0;
    sc_signal< sc_logic > conn_table_remote_ud_ce0;
    sc_signal< sc_logic > conn_table_remote_ud_we0;
    sc_signal< sc_lv<16> > conn_table_remote_ud_d0;
    sc_signal< sc_lv<16> > conn_table_remote_ud_q0;
    sc_signal< sc_logic > qpi2connTable_req_V_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > tx_ibhconnTable_req_s_3_blk_n;
    sc_signal< sc_logic > tx_connTable2ibh_rsp_1_blk_n;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln544_8_fu_201_p1;
    sc_signal< sc_lv<64> > zext_ln544_fu_208_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<16> > trunc_ln321_fu_164_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_113;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_A7;
    static const sc_lv<32> ap_const_lv32_A8;
    static const sc_lv<32> ap_const_lv32_B7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_113();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_predicate_op7_read_state1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_conn_table_remote_ip_address0();
    void thread_conn_table_remote_ip_ce0();
    void thread_conn_table_remote_ip_d0();
    void thread_conn_table_remote_ip_we0();
    void thread_conn_table_remote_qp_address0();
    void thread_conn_table_remote_qp_ce0();
    void thread_conn_table_remote_qp_d0();
    void thread_conn_table_remote_qp_we0();
    void thread_conn_table_remote_ud_address0();
    void thread_conn_table_remote_ud_ce0();
    void thread_conn_table_remote_ud_d0();
    void thread_conn_table_remote_ud_we0();
    void thread_qpi2connTable_req_V_TDATA_blk_n();
    void thread_qpi2connTable_req_V_TREADY();
    void thread_tmp_111_nbreadreq_fu_74_p3();
    void thread_tmp_nbreadreq_fu_66_p3();
    void thread_trunc_ln321_fu_164_p1();
    void thread_tx_connTable2ibh_rsp_1_blk_n();
    void thread_tx_connTable2ibh_rsp_1_din();
    void thread_tx_connTable2ibh_rsp_1_write();
    void thread_tx_ibhconnTable_req_s_3_blk_n();
    void thread_tx_ibhconnTable_req_s_3_read();
    void thread_zext_ln544_8_fu_201_p1();
    void thread_zext_ln544_fu_208_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
