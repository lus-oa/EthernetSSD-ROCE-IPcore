// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "merge_rx_pkgs_512_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic merge_rx_pkgs_512_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic merge_rx_pkgs_512_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> merge_rx_pkgs_512_s::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> merge_rx_pkgs_512_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool merge_rx_pkgs_512_s::ap_const_boolean_1 = true;
const sc_lv<2> merge_rx_pkgs_512_s::ap_const_lv2_3 = "11";
const sc_lv<1> merge_rx_pkgs_512_s::ap_const_lv1_1 = "1";
const sc_lv<2> merge_rx_pkgs_512_s::ap_const_lv2_2 = "10";
const sc_lv<2> merge_rx_pkgs_512_s::ap_const_lv2_1 = "1";
const sc_lv<2> merge_rx_pkgs_512_s::ap_const_lv2_0 = "00";
const bool merge_rx_pkgs_512_s::ap_const_boolean_0 = false;
const sc_lv<1> merge_rx_pkgs_512_s::ap_const_lv1_0 = "0";

merge_rx_pkgs_512_s::merge_rx_pkgs_512_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( io_acc_block_signal_op8 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( io_acc_block_signal_op16 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( io_acc_block_signal_op24 );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( rx_pkgShiftTypeFifo_s_8_empty_n );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( m_axis_mem_write_data_TREADY );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( io_acc_block_signal_op8 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( io_acc_block_signal_op16 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( io_acc_block_signal_op24 );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( rx_pkgShiftTypeFifo_s_8_empty_n );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( m_axis_mem_write_data_TREADY );
    sensitive << ( ap_block_state2_io );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( io_acc_block_signal_op8 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( io_acc_block_signal_op16 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( io_acc_block_signal_op24 );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( rx_pkgShiftTypeFifo_s_8_empty_n );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( m_axis_mem_write_data_TREADY );
    sensitive << ( ap_block_state2_io );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op8 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( io_acc_block_signal_op16 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( io_acc_block_signal_op24 );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( rx_pkgShiftTypeFifo_s_8_empty_n );
    sensitive << ( ap_predicate_op31_read_state1 );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op58_write_state3 );
    sensitive << ( ap_predicate_op62_write_state3 );
    sensitive << ( ap_predicate_op66_write_state3 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( m_axis_mem_write_data_TREADY );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );

    SC_METHOD(thread_ap_condition_591);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp0_0to1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_predicate_op16_read_state1);
    sensitive << ( tmp_60_nbreadreq_fu_108_p6 );
    sensitive << ( state_3 );

    SC_METHOD(thread_ap_predicate_op24_read_state1);
    sensitive << ( tmp_59_nbreadreq_fu_134_p5 );
    sensitive << ( state_3 );

    SC_METHOD(thread_ap_predicate_op31_read_state1);
    sensitive << ( tmp_nbreadreq_fu_156_p3 );
    sensitive << ( state_3 );

    SC_METHOD(thread_ap_predicate_op38_write_state2);
    sensitive << ( state_3_load_reg_281 );
    sensitive << ( tmp_61_reg_285 );

    SC_METHOD(thread_ap_predicate_op40_write_state2);
    sensitive << ( state_3_load_reg_281 );
    sensitive << ( tmp_60_reg_309 );

    SC_METHOD(thread_ap_predicate_op42_write_state2);
    sensitive << ( state_3_load_reg_281 );
    sensitive << ( tmp_59_reg_333 );

    SC_METHOD(thread_ap_predicate_op58_write_state3);
    sensitive << ( state_3_load_reg_281_pp0_iter1_reg );
    sensitive << ( tmp_61_reg_285_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op62_write_state3);
    sensitive << ( state_3_load_reg_281_pp0_iter1_reg );
    sensitive << ( tmp_60_reg_309_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op66_write_state3);
    sensitive << ( state_3_load_reg_281_pp0_iter1_reg );
    sensitive << ( tmp_59_reg_333_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op8_read_state1);
    sensitive << ( tmp_61_nbreadreq_fu_82_p6 );
    sensitive << ( state_3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to1 );

    SC_METHOD(thread_icmp_ln2346_fu_241_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_pkgShiftTypeFifo_s_8_dout );
    sensitive << ( tmp_nbreadreq_fu_156_p3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( state_3 );

    SC_METHOD(thread_icmp_ln2350_fu_247_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_pkgShiftTypeFifo_s_8_dout );
    sensitive << ( tmp_nbreadreq_fu_156_p3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( state_3 );

    SC_METHOD(thread_io_acc_block_signal_op16);
    sensitive << ( rx_rethSift2mergerFi_8_empty_n );
    sensitive << ( rx_rethSift2mergerFi_6_empty_n );
    sensitive << ( rx_rethSift2mergerFi_7_empty_n );
    sensitive << ( rx_rethSift2mergerFi_4_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op24);
    sensitive << ( rx_aethSift2mergerFi_3_empty_n );
    sensitive << ( rx_aethSift2mergerFi_5_empty_n );
    sensitive << ( rx_aethSift2mergerFi_6_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op8);
    sensitive << ( rx_exhNoShiftFifo_V_1_empty_n );
    sensitive << ( rx_exhNoShiftFifo_V_4_empty_n );
    sensitive << ( rx_exhNoShiftFifo_V_s_empty_n );
    sensitive << ( rx_exhNoShiftFifo_V_3_empty_n );

    SC_METHOD(thread_m_axis_mem_write_data_TDATA);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_data_out );

    SC_METHOD(thread_m_axis_mem_write_data_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );
    sensitive << ( ap_predicate_op58_write_state3 );
    sensitive << ( ap_predicate_op62_write_state3 );
    sensitive << ( ap_predicate_op66_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_m_axis_mem_write_data_TDEST);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_data_out );

    SC_METHOD(thread_m_axis_mem_write_data_TKEEP);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_data_out );

    SC_METHOD(thread_m_axis_mem_write_data_TLAST);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_data_out );

    SC_METHOD(thread_m_axis_mem_write_data_TVALID);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_ack_in);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_ack_out);
    sensitive << ( m_axis_mem_write_data_TREADY );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_data_in);
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( tmp_data_V_30_reg_289 );
    sensitive << ( tmp_data_V_29_reg_313 );
    sensitive << ( tmp_data_V_reg_337 );
    sensitive << ( ap_condition_591 );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_data_out);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_payload_A );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_payload_B );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_sel );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_load_A);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_load_B);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_sel);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_sel_rd );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_state_cmp_full);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axis_mem_write_data_V_data_V_1_vld_out);
    sensitive << ( m_axis_mem_write_data_V_data_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_ack_in);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_ack_out);
    sensitive << ( m_axis_mem_write_data_TREADY );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_data_in);
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( tmp_dest_V_2_reg_304 );
    sensitive << ( tmp_dest_V_reg_328 );
    sensitive << ( ap_condition_591 );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_data_out);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_payload_A );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_payload_B );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_sel );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_load_A);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_load_B);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_sel);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_sel_rd );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_state_cmp_full);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axis_mem_write_data_V_dest_V_1_vld_out);
    sensitive << ( m_axis_mem_write_data_V_dest_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_ack_in);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_ack_out);
    sensitive << ( m_axis_mem_write_data_TREADY );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_data_in);
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( tmp_keep_V_29_reg_294 );
    sensitive << ( tmp_keep_V_28_reg_318 );
    sensitive << ( tmp_keep_V_reg_342 );
    sensitive << ( ap_condition_591 );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_data_out);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_payload_A );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_payload_B );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_sel );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_load_A);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_load_B);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_sel);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_sel_rd );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_state_cmp_full);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axis_mem_write_data_V_keep_V_1_vld_out);
    sensitive << ( m_axis_mem_write_data_V_keep_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_ack_in);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_ack_out);
    sensitive << ( m_axis_mem_write_data_TREADY );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_data_in);
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( tmp_last_V_25_reg_299 );
    sensitive << ( tmp_last_V_24_reg_323 );
    sensitive << ( tmp_last_V_reg_347 );
    sensitive << ( ap_condition_591 );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_data_out);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_payload_A );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_payload_B );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_sel );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_load_A);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_load_B);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_sel_wr );
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_sel);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_sel_rd );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_state_cmp_full);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op38_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axis_mem_write_data_V_last_V_1_vld_out);
    sensitive << ( m_axis_mem_write_data_V_last_V_1_state );

    SC_METHOD(thread_or_ln2346_fu_261_p2);
    sensitive << ( icmp_ln2346_fu_241_p2 );
    sensitive << ( icmp_ln2350_fu_247_p2 );

    SC_METHOD(thread_rx_aethSift2mergerFi_3_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_aethSift2mergerFi_3_empty_n );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_aethSift2mergerFi_3_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_aethSift2mergerFi_5_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_aethSift2mergerFi_5_empty_n );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_aethSift2mergerFi_5_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_aethSift2mergerFi_6_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_aethSift2mergerFi_6_empty_n );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_aethSift2mergerFi_6_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op24_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_1_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_exhNoShiftFifo_V_1_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_1_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_3_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_exhNoShiftFifo_V_3_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_3_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_4_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_exhNoShiftFifo_V_4_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_4_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_s_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_exhNoShiftFifo_V_s_empty_n );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_exhNoShiftFifo_V_s_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op8_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_pkgShiftTypeFifo_s_8_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_pkgShiftTypeFifo_s_8_empty_n );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_pkgShiftTypeFifo_s_8_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op31_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_rethSift2mergerFi_4_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_rethSift2mergerFi_4_empty_n );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_rethSift2mergerFi_4_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_rethSift2mergerFi_6_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_rethSift2mergerFi_6_empty_n );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_rethSift2mergerFi_6_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_rethSift2mergerFi_7_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_rethSift2mergerFi_7_empty_n );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_rethSift2mergerFi_7_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_rethSift2mergerFi_8_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_rethSift2mergerFi_8_empty_n );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_rethSift2mergerFi_8_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op16_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln2346_1_fu_267_p3);
    sensitive << ( or_ln2346_fu_261_p2 );
    sensitive << ( select_ln2346_fu_253_p3 );

    SC_METHOD(thread_select_ln2346_fu_253_p3);
    sensitive << ( icmp_ln2346_fu_241_p2 );

    SC_METHOD(thread_tmp_59_nbreadreq_fu_134_p5);
    sensitive << ( rx_aethSift2mergerFi_3_empty_n );
    sensitive << ( rx_aethSift2mergerFi_5_empty_n );
    sensitive << ( rx_aethSift2mergerFi_6_empty_n );

    SC_METHOD(thread_tmp_60_nbreadreq_fu_108_p6);
    sensitive << ( rx_rethSift2mergerFi_8_empty_n );
    sensitive << ( rx_rethSift2mergerFi_6_empty_n );
    sensitive << ( rx_rethSift2mergerFi_7_empty_n );
    sensitive << ( rx_rethSift2mergerFi_4_empty_n );

    SC_METHOD(thread_tmp_61_nbreadreq_fu_82_p6);
    sensitive << ( rx_exhNoShiftFifo_V_1_empty_n );
    sensitive << ( rx_exhNoShiftFifo_V_4_empty_n );
    sensitive << ( rx_exhNoShiftFifo_V_s_empty_n );
    sensitive << ( rx_exhNoShiftFifo_V_3_empty_n );

    SC_METHOD(thread_tmp_last_V_24_fu_221_p1);
    sensitive << ( rx_rethSift2mergerFi_7_dout );

    SC_METHOD(thread_tmp_last_V_25_fu_205_p1);
    sensitive << ( rx_exhNoShiftFifo_V_s_dout );

    SC_METHOD(thread_tmp_last_V_fu_237_p1);
    sensitive << ( rx_aethSift2mergerFi_6_dout );

    SC_METHOD(thread_tmp_nbreadreq_fu_156_p3);
    sensitive << ( rx_pkgShiftTypeFifo_s_8_empty_n );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    m_axis_mem_write_data_V_data_V_1_state = "00";
    m_axis_mem_write_data_V_keep_V_1_state = "00";
    m_axis_mem_write_data_V_last_V_1_state = "00";
    m_axis_mem_write_data_V_dest_V_1_state = "00";
    m_axis_mem_write_data_V_data_V_1_sel_rd = SC_LOGIC_0;
    m_axis_mem_write_data_V_data_V_1_sel_wr = SC_LOGIC_0;
    m_axis_mem_write_data_V_keep_V_1_sel_rd = SC_LOGIC_0;
    m_axis_mem_write_data_V_keep_V_1_sel_wr = SC_LOGIC_0;
    m_axis_mem_write_data_V_last_V_1_sel_rd = SC_LOGIC_0;
    m_axis_mem_write_data_V_last_V_1_sel_wr = SC_LOGIC_0;
    m_axis_mem_write_data_V_dest_V_1_sel_rd = SC_LOGIC_0;
    m_axis_mem_write_data_V_dest_V_1_sel_wr = SC_LOGIC_0;
    state_3 = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "merge_rx_pkgs_512_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_1_dout, "(port)rx_exhNoShiftFifo_V_1_dout");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_1_empty_n, "(port)rx_exhNoShiftFifo_V_1_empty_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_1_read, "(port)rx_exhNoShiftFifo_V_1_read");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_4_dout, "(port)rx_exhNoShiftFifo_V_4_dout");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_4_empty_n, "(port)rx_exhNoShiftFifo_V_4_empty_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_4_read, "(port)rx_exhNoShiftFifo_V_4_read");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_s_dout, "(port)rx_exhNoShiftFifo_V_s_dout");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_s_empty_n, "(port)rx_exhNoShiftFifo_V_s_empty_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_s_read, "(port)rx_exhNoShiftFifo_V_s_read");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_3_dout, "(port)rx_exhNoShiftFifo_V_3_dout");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_3_empty_n, "(port)rx_exhNoShiftFifo_V_3_empty_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_3_read, "(port)rx_exhNoShiftFifo_V_3_read");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_8_dout, "(port)rx_rethSift2mergerFi_8_dout");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_8_empty_n, "(port)rx_rethSift2mergerFi_8_empty_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_8_read, "(port)rx_rethSift2mergerFi_8_read");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_6_dout, "(port)rx_rethSift2mergerFi_6_dout");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_6_empty_n, "(port)rx_rethSift2mergerFi_6_empty_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_6_read, "(port)rx_rethSift2mergerFi_6_read");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_7_dout, "(port)rx_rethSift2mergerFi_7_dout");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_7_empty_n, "(port)rx_rethSift2mergerFi_7_empty_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_7_read, "(port)rx_rethSift2mergerFi_7_read");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_4_dout, "(port)rx_rethSift2mergerFi_4_dout");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_4_empty_n, "(port)rx_rethSift2mergerFi_4_empty_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_4_read, "(port)rx_rethSift2mergerFi_4_read");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_3_dout, "(port)rx_aethSift2mergerFi_3_dout");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_3_empty_n, "(port)rx_aethSift2mergerFi_3_empty_n");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_3_read, "(port)rx_aethSift2mergerFi_3_read");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_5_dout, "(port)rx_aethSift2mergerFi_5_dout");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_5_empty_n, "(port)rx_aethSift2mergerFi_5_empty_n");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_5_read, "(port)rx_aethSift2mergerFi_5_read");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_6_dout, "(port)rx_aethSift2mergerFi_6_dout");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_6_empty_n, "(port)rx_aethSift2mergerFi_6_empty_n");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_6_read, "(port)rx_aethSift2mergerFi_6_read");
    sc_trace(mVcdFile, rx_pkgShiftTypeFifo_s_8_dout, "(port)rx_pkgShiftTypeFifo_s_8_dout");
    sc_trace(mVcdFile, rx_pkgShiftTypeFifo_s_8_empty_n, "(port)rx_pkgShiftTypeFifo_s_8_empty_n");
    sc_trace(mVcdFile, rx_pkgShiftTypeFifo_s_8_read, "(port)rx_pkgShiftTypeFifo_s_8_read");
    sc_trace(mVcdFile, m_axis_mem_write_data_TREADY, "(port)m_axis_mem_write_data_TREADY");
    sc_trace(mVcdFile, m_axis_mem_write_data_TDATA, "(port)m_axis_mem_write_data_TDATA");
    sc_trace(mVcdFile, m_axis_mem_write_data_TVALID, "(port)m_axis_mem_write_data_TVALID");
    sc_trace(mVcdFile, m_axis_mem_write_data_TKEEP, "(port)m_axis_mem_write_data_TKEEP");
    sc_trace(mVcdFile, m_axis_mem_write_data_TLAST, "(port)m_axis_mem_write_data_TLAST");
    sc_trace(mVcdFile, m_axis_mem_write_data_TDEST, "(port)m_axis_mem_write_data_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, io_acc_block_signal_op8, "io_acc_block_signal_op8");
    sc_trace(mVcdFile, tmp_61_nbreadreq_fu_82_p6, "tmp_61_nbreadreq_fu_82_p6");
    sc_trace(mVcdFile, ap_predicate_op8_read_state1, "ap_predicate_op8_read_state1");
    sc_trace(mVcdFile, io_acc_block_signal_op16, "io_acc_block_signal_op16");
    sc_trace(mVcdFile, tmp_60_nbreadreq_fu_108_p6, "tmp_60_nbreadreq_fu_108_p6");
    sc_trace(mVcdFile, ap_predicate_op16_read_state1, "ap_predicate_op16_read_state1");
    sc_trace(mVcdFile, io_acc_block_signal_op24, "io_acc_block_signal_op24");
    sc_trace(mVcdFile, tmp_59_nbreadreq_fu_134_p5, "tmp_59_nbreadreq_fu_134_p5");
    sc_trace(mVcdFile, ap_predicate_op24_read_state1, "ap_predicate_op24_read_state1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_156_p3, "tmp_nbreadreq_fu_156_p3");
    sc_trace(mVcdFile, ap_predicate_op31_read_state1, "ap_predicate_op31_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_ack_in, "m_axis_mem_write_data_V_data_V_1_ack_in");
    sc_trace(mVcdFile, state_3_load_reg_281, "state_3_load_reg_281");
    sc_trace(mVcdFile, tmp_61_reg_285, "tmp_61_reg_285");
    sc_trace(mVcdFile, ap_predicate_op38_write_state2, "ap_predicate_op38_write_state2");
    sc_trace(mVcdFile, tmp_60_reg_309, "tmp_60_reg_309");
    sc_trace(mVcdFile, ap_predicate_op40_write_state2, "ap_predicate_op40_write_state2");
    sc_trace(mVcdFile, tmp_59_reg_333, "tmp_59_reg_333");
    sc_trace(mVcdFile, ap_predicate_op42_write_state2, "ap_predicate_op42_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_ack_out, "m_axis_mem_write_data_V_data_V_1_ack_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_state, "m_axis_mem_write_data_V_data_V_1_state");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_ack_out, "m_axis_mem_write_data_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_state, "m_axis_mem_write_data_V_keep_V_1_state");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_ack_out, "m_axis_mem_write_data_V_last_V_1_ack_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_state, "m_axis_mem_write_data_V_last_V_1_state");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_ack_out, "m_axis_mem_write_data_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_state, "m_axis_mem_write_data_V_dest_V_1_state");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, state_3_load_reg_281_pp0_iter1_reg, "state_3_load_reg_281_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_61_reg_285_pp0_iter1_reg, "tmp_61_reg_285_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op58_write_state3, "ap_predicate_op58_write_state3");
    sc_trace(mVcdFile, tmp_60_reg_309_pp0_iter1_reg, "tmp_60_reg_309_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op62_write_state3, "ap_predicate_op62_write_state3");
    sc_trace(mVcdFile, tmp_59_reg_333_pp0_iter1_reg, "tmp_59_reg_333_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op66_write_state3, "ap_predicate_op66_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_data_in, "m_axis_mem_write_data_V_data_V_1_data_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_data_out, "m_axis_mem_write_data_V_data_V_1_data_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_vld_in, "m_axis_mem_write_data_V_data_V_1_vld_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_vld_out, "m_axis_mem_write_data_V_data_V_1_vld_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_payload_A, "m_axis_mem_write_data_V_data_V_1_payload_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_payload_B, "m_axis_mem_write_data_V_data_V_1_payload_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_sel_rd, "m_axis_mem_write_data_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_sel_wr, "m_axis_mem_write_data_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_sel, "m_axis_mem_write_data_V_data_V_1_sel");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_load_A, "m_axis_mem_write_data_V_data_V_1_load_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_load_B, "m_axis_mem_write_data_V_data_V_1_load_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_data_V_1_state_cmp_full, "m_axis_mem_write_data_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_data_in, "m_axis_mem_write_data_V_keep_V_1_data_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_data_out, "m_axis_mem_write_data_V_keep_V_1_data_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_vld_in, "m_axis_mem_write_data_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_vld_out, "m_axis_mem_write_data_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_ack_in, "m_axis_mem_write_data_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_payload_A, "m_axis_mem_write_data_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_payload_B, "m_axis_mem_write_data_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_sel_rd, "m_axis_mem_write_data_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_sel_wr, "m_axis_mem_write_data_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_sel, "m_axis_mem_write_data_V_keep_V_1_sel");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_load_A, "m_axis_mem_write_data_V_keep_V_1_load_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_load_B, "m_axis_mem_write_data_V_keep_V_1_load_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_keep_V_1_state_cmp_full, "m_axis_mem_write_data_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_data_in, "m_axis_mem_write_data_V_last_V_1_data_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_data_out, "m_axis_mem_write_data_V_last_V_1_data_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_vld_in, "m_axis_mem_write_data_V_last_V_1_vld_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_vld_out, "m_axis_mem_write_data_V_last_V_1_vld_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_ack_in, "m_axis_mem_write_data_V_last_V_1_ack_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_payload_A, "m_axis_mem_write_data_V_last_V_1_payload_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_payload_B, "m_axis_mem_write_data_V_last_V_1_payload_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_sel_rd, "m_axis_mem_write_data_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_sel_wr, "m_axis_mem_write_data_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_sel, "m_axis_mem_write_data_V_last_V_1_sel");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_load_A, "m_axis_mem_write_data_V_last_V_1_load_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_load_B, "m_axis_mem_write_data_V_last_V_1_load_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_last_V_1_state_cmp_full, "m_axis_mem_write_data_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_data_in, "m_axis_mem_write_data_V_dest_V_1_data_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_data_out, "m_axis_mem_write_data_V_dest_V_1_data_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_vld_in, "m_axis_mem_write_data_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_vld_out, "m_axis_mem_write_data_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_ack_in, "m_axis_mem_write_data_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_payload_A, "m_axis_mem_write_data_V_dest_V_1_payload_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_payload_B, "m_axis_mem_write_data_V_dest_V_1_payload_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_sel_rd, "m_axis_mem_write_data_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_sel_wr, "m_axis_mem_write_data_V_dest_V_1_sel_wr");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_sel, "m_axis_mem_write_data_V_dest_V_1_sel");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_load_A, "m_axis_mem_write_data_V_dest_V_1_load_A");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_load_B, "m_axis_mem_write_data_V_dest_V_1_load_B");
    sc_trace(mVcdFile, m_axis_mem_write_data_V_dest_V_1_state_cmp_full, "m_axis_mem_write_data_V_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, state_3, "state_3");
    sc_trace(mVcdFile, m_axis_mem_write_data_TDATA_blk_n, "m_axis_mem_write_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, rx_pkgShiftTypeFifo_s_8_blk_n, "rx_pkgShiftTypeFifo_s_8_blk_n");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_3_blk_n, "rx_aethSift2mergerFi_3_blk_n");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_5_blk_n, "rx_aethSift2mergerFi_5_blk_n");
    sc_trace(mVcdFile, rx_aethSift2mergerFi_6_blk_n, "rx_aethSift2mergerFi_6_blk_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_8_blk_n, "rx_rethSift2mergerFi_8_blk_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_6_blk_n, "rx_rethSift2mergerFi_6_blk_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_7_blk_n, "rx_rethSift2mergerFi_7_blk_n");
    sc_trace(mVcdFile, rx_rethSift2mergerFi_4_blk_n, "rx_rethSift2mergerFi_4_blk_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_1_blk_n, "rx_exhNoShiftFifo_V_1_blk_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_4_blk_n, "rx_exhNoShiftFifo_V_4_blk_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_s_blk_n, "rx_exhNoShiftFifo_V_s_blk_n");
    sc_trace(mVcdFile, rx_exhNoShiftFifo_V_3_blk_n, "rx_exhNoShiftFifo_V_3_blk_n");
    sc_trace(mVcdFile, tmp_data_V_30_reg_289, "tmp_data_V_30_reg_289");
    sc_trace(mVcdFile, tmp_keep_V_29_reg_294, "tmp_keep_V_29_reg_294");
    sc_trace(mVcdFile, tmp_last_V_25_fu_205_p1, "tmp_last_V_25_fu_205_p1");
    sc_trace(mVcdFile, tmp_last_V_25_reg_299, "tmp_last_V_25_reg_299");
    sc_trace(mVcdFile, tmp_dest_V_2_reg_304, "tmp_dest_V_2_reg_304");
    sc_trace(mVcdFile, tmp_data_V_29_reg_313, "tmp_data_V_29_reg_313");
    sc_trace(mVcdFile, tmp_keep_V_28_reg_318, "tmp_keep_V_28_reg_318");
    sc_trace(mVcdFile, tmp_last_V_24_fu_221_p1, "tmp_last_V_24_fu_221_p1");
    sc_trace(mVcdFile, tmp_last_V_24_reg_323, "tmp_last_V_24_reg_323");
    sc_trace(mVcdFile, tmp_dest_V_reg_328, "tmp_dest_V_reg_328");
    sc_trace(mVcdFile, tmp_data_V_reg_337, "tmp_data_V_reg_337");
    sc_trace(mVcdFile, tmp_keep_V_reg_342, "tmp_keep_V_reg_342");
    sc_trace(mVcdFile, tmp_last_V_fu_237_p1, "tmp_last_V_fu_237_p1");
    sc_trace(mVcdFile, tmp_last_V_reg_347, "tmp_last_V_reg_347");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, select_ln2346_1_fu_267_p3, "select_ln2346_1_fu_267_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, icmp_ln2346_fu_241_p2, "icmp_ln2346_fu_241_p2");
    sc_trace(mVcdFile, icmp_ln2350_fu_247_p2, "icmp_ln2350_fu_247_p2");
    sc_trace(mVcdFile, or_ln2346_fu_261_p2, "or_ln2346_fu_261_p2");
    sc_trace(mVcdFile, select_ln2346_fu_253_p3, "select_ln2346_fu_253_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to1, "ap_idle_pp0_0to1");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_591, "ap_condition_591");
#endif

    }
}

merge_rx_pkgs_512_s::~merge_rx_pkgs_512_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void merge_rx_pkgs_512_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_vld_out.read()))) {
            m_axis_mem_write_data_V_data_V_1_sel_rd =  (sc_logic) (~m_axis_mem_write_data_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_ack_in.read()))) {
            m_axis_mem_write_data_V_data_V_1_sel_wr =  (sc_logic) (~m_axis_mem_write_data_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_data_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_vld_in.read())))) {
            m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_data_V_1_state.read())))) {
            m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_data_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_ack_out.read()))))) {
            m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3;
        } else {
            m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_vld_out.read()))) {
            m_axis_mem_write_data_V_dest_V_1_sel_rd =  (sc_logic) (~m_axis_mem_write_data_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_ack_in.read()))) {
            m_axis_mem_write_data_V_dest_V_1_sel_wr =  (sc_logic) (~m_axis_mem_write_data_V_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_dest_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_dest_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_dest_V_1_vld_in.read())))) {
            m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_dest_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_dest_V_1_state.read())))) {
            m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_dest_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_dest_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_ack_out.read()))))) {
            m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_vld_out.read()))) {
            m_axis_mem_write_data_V_keep_V_1_sel_rd =  (sc_logic) (~m_axis_mem_write_data_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_ack_in.read()))) {
            m_axis_mem_write_data_V_keep_V_1_sel_wr =  (sc_logic) (~m_axis_mem_write_data_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_keep_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_keep_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_keep_V_1_vld_in.read())))) {
            m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_keep_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_keep_V_1_state.read())))) {
            m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_keep_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_keep_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_ack_out.read()))))) {
            m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_vld_out.read()))) {
            m_axis_mem_write_data_V_last_V_1_sel_rd =  (sc_logic) (~m_axis_mem_write_data_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_ack_in.read()))) {
            m_axis_mem_write_data_V_last_V_1_sel_wr =  (sc_logic) (~m_axis_mem_write_data_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_last_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_last_V_1_vld_in.read())))) {
            m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_last_V_1_state.read())))) {
            m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, m_axis_mem_write_data_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_last_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_ack_out.read()))))) {
            m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3;
        } else {
            m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_156_p3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        state_3 = select_ln2346_1_fu_267_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_3) && 
                 esl_seteq<1,1,1>(tmp_61_nbreadreq_fu_82_p6.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_25_fu_205_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_60_nbreadreq_fu_108_p6.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_24_fu_221_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_59_nbreadreq_fu_134_p5.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_237_p1.read())))) {
        state_3 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_load_A.read())) {
        m_axis_mem_write_data_V_data_V_1_payload_A = m_axis_mem_write_data_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_load_B.read())) {
        m_axis_mem_write_data_V_data_V_1_payload_B = m_axis_mem_write_data_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_load_A.read())) {
        m_axis_mem_write_data_V_dest_V_1_payload_A = m_axis_mem_write_data_V_dest_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_load_B.read())) {
        m_axis_mem_write_data_V_dest_V_1_payload_B = m_axis_mem_write_data_V_dest_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_load_A.read())) {
        m_axis_mem_write_data_V_keep_V_1_payload_A = m_axis_mem_write_data_V_keep_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_load_B.read())) {
        m_axis_mem_write_data_V_keep_V_1_payload_B = m_axis_mem_write_data_V_keep_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_load_A.read())) {
        m_axis_mem_write_data_V_last_V_1_payload_A = m_axis_mem_write_data_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_load_B.read())) {
        m_axis_mem_write_data_V_last_V_1_payload_B = m_axis_mem_write_data_V_last_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        state_3_load_reg_281 = state_3.read();
        state_3_load_reg_281_pp0_iter1_reg = state_3_load_reg_281.read();
        tmp_59_reg_333_pp0_iter1_reg = tmp_59_reg_333.read();
        tmp_60_reg_309_pp0_iter1_reg = tmp_60_reg_309.read();
        tmp_61_reg_285_pp0_iter1_reg = tmp_61_reg_285.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_59_reg_333 = tmp_59_nbreadreq_fu_134_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_60_reg_309 = tmp_60_nbreadreq_fu_108_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_61_reg_285 = tmp_61_nbreadreq_fu_82_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_60_nbreadreq_fu_108_p6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_V_29_reg_313 = rx_rethSift2mergerFi_8_dout.read();
        tmp_dest_V_reg_328 = rx_rethSift2mergerFi_4_dout.read();
        tmp_keep_V_28_reg_318 = rx_rethSift2mergerFi_6_dout.read();
        tmp_last_V_24_reg_323 = rx_rethSift2mergerFi_7_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(tmp_61_nbreadreq_fu_82_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_V_30_reg_289 = rx_exhNoShiftFifo_V_1_dout.read();
        tmp_dest_V_2_reg_304 = rx_exhNoShiftFifo_V_3_dout.read();
        tmp_keep_V_29_reg_294 = rx_exhNoShiftFifo_V_4_dout.read();
        tmp_last_V_25_reg_299 = rx_exhNoShiftFifo_V_s_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_59_nbreadreq_fu_134_p5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_V_reg_337 = rx_aethSift2mergerFi_3_dout.read();
        tmp_keep_V_reg_342 = rx_aethSift2mergerFi_5_dout.read();
        tmp_last_V_reg_347 = rx_aethSift2mergerFi_6_dout.read();
    }
}

void merge_rx_pkgs_512_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void merge_rx_pkgs_512_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void merge_rx_pkgs_512_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op8.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op16.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_pkgShiftTypeFifo_s_8_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || ((esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_keep_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_keep_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_dest_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_dest_V_1_state.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void merge_rx_pkgs_512_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op8.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op16.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_pkgShiftTypeFifo_s_8_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_keep_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_keep_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_dest_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_dest_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void merge_rx_pkgs_512_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op8.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op16.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_pkgShiftTypeFifo_s_8_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || ((esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_data_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_data_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_keep_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_keep_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_last_V_1_state.read())) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_dest_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_dest_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void merge_rx_pkgs_512_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op16.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op24.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, rx_pkgShiftTypeFifo_s_8_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void merge_rx_pkgs_512_s::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read())));
}

void merge_rx_pkgs_512_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void merge_rx_pkgs_512_s::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_write_state3.read())));
}

void merge_rx_pkgs_512_s::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = (esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_data_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_data_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_keep_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_keep_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_last_V_1_state.read())) || esl_seteq<1,2,2>(ap_const_lv2_1, m_axis_mem_write_data_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_write_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, m_axis_mem_write_data_V_dest_V_1_state.read())));
}

void merge_rx_pkgs_512_s::thread_ap_condition_591() {
    ap_condition_591 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void merge_rx_pkgs_512_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void merge_rx_pkgs_512_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void merge_rx_pkgs_512_s::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void merge_rx_pkgs_512_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_ap_idle_pp0_0to1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0_0to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to1 = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op16_read_state1() {
    ap_predicate_op16_read_state1 = (esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_60_nbreadreq_fu_108_p6.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op24_read_state1() {
    ap_predicate_op24_read_state1 = (esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_59_nbreadreq_fu_134_p5.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op31_read_state1() {
    ap_predicate_op31_read_state1 = (esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_156_p3.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op38_write_state2() {
    ap_predicate_op38_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_3, state_3_load_reg_281.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_61_reg_285.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op40_write_state2() {
    ap_predicate_op40_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_3_load_reg_281.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_60_reg_309.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op42_write_state2() {
    ap_predicate_op42_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_1, state_3_load_reg_281.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_59_reg_333.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op58_write_state3() {
    ap_predicate_op58_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_3, state_3_load_reg_281_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_61_reg_285_pp0_iter1_reg.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op62_write_state3() {
    ap_predicate_op62_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_3_load_reg_281_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_60_reg_309_pp0_iter1_reg.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op66_write_state3() {
    ap_predicate_op66_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_1, state_3_load_reg_281_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_59_reg_333_pp0_iter1_reg.read()));
}

void merge_rx_pkgs_512_s::thread_ap_predicate_op8_read_state1() {
    ap_predicate_op8_read_state1 = (esl_seteq<1,2,2>(state_3.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(tmp_61_nbreadreq_fu_82_p6.read(), ap_const_lv1_1));
}

void merge_rx_pkgs_512_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to1.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_icmp_ln2346_fu_241_p2() {
    icmp_ln2346_fu_241_p2 = (!rx_pkgShiftTypeFifo_s_8_dout.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(rx_pkgShiftTypeFifo_s_8_dout.read() == ap_const_lv2_0);
}

void merge_rx_pkgs_512_s::thread_icmp_ln2350_fu_247_p2() {
    icmp_ln2350_fu_247_p2 = (!rx_pkgShiftTypeFifo_s_8_dout.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(rx_pkgShiftTypeFifo_s_8_dout.read() == ap_const_lv2_1);
}

void merge_rx_pkgs_512_s::thread_io_acc_block_signal_op16() {
    io_acc_block_signal_op16 = (rx_rethSift2mergerFi_8_empty_n.read() & rx_rethSift2mergerFi_6_empty_n.read() & rx_rethSift2mergerFi_7_empty_n.read() & rx_rethSift2mergerFi_4_empty_n.read());
}

void merge_rx_pkgs_512_s::thread_io_acc_block_signal_op24() {
    io_acc_block_signal_op24 = (rx_aethSift2mergerFi_3_empty_n.read() & rx_aethSift2mergerFi_5_empty_n.read() & rx_aethSift2mergerFi_6_empty_n.read());
}

void merge_rx_pkgs_512_s::thread_io_acc_block_signal_op8() {
    io_acc_block_signal_op8 = (rx_exhNoShiftFifo_V_1_empty_n.read() & rx_exhNoShiftFifo_V_4_empty_n.read() & rx_exhNoShiftFifo_V_s_empty_n.read() & rx_exhNoShiftFifo_V_3_empty_n.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_TDATA() {
    m_axis_mem_write_data_TDATA = m_axis_mem_write_data_V_data_V_1_data_out.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        m_axis_mem_write_data_TDATA_blk_n = m_axis_mem_write_data_V_data_V_1_state.read()[1];
    } else {
        m_axis_mem_write_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_TDEST() {
    m_axis_mem_write_data_TDEST = m_axis_mem_write_data_V_dest_V_1_data_out.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_TKEEP() {
    m_axis_mem_write_data_TKEEP = m_axis_mem_write_data_V_keep_V_1_data_out.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_TLAST() {
    m_axis_mem_write_data_TLAST = m_axis_mem_write_data_V_last_V_1_data_out.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_TVALID() {
    m_axis_mem_write_data_TVALID = m_axis_mem_write_data_V_dest_V_1_state.read()[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_ack_in() {
    m_axis_mem_write_data_V_data_V_1_ack_in = m_axis_mem_write_data_V_data_V_1_state.read()[1];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_ack_out() {
    m_axis_mem_write_data_V_data_V_1_ack_out = m_axis_mem_write_data_TREADY.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_591.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read())) {
            m_axis_mem_write_data_V_data_V_1_data_in = tmp_data_V_reg_337.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) {
            m_axis_mem_write_data_V_data_V_1_data_in = tmp_data_V_29_reg_313.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read())) {
            m_axis_mem_write_data_V_data_V_1_data_in = tmp_data_V_30_reg_289.read();
        } else {
            m_axis_mem_write_data_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        m_axis_mem_write_data_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_data_V_1_sel.read())) {
        m_axis_mem_write_data_V_data_V_1_data_out = m_axis_mem_write_data_V_data_V_1_payload_B.read();
    } else {
        m_axis_mem_write_data_V_data_V_1_data_out = m_axis_mem_write_data_V_data_V_1_payload_A.read();
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_load_A() {
    m_axis_mem_write_data_V_data_V_1_load_A = (m_axis_mem_write_data_V_data_V_1_state_cmp_full.read() & ~m_axis_mem_write_data_V_data_V_1_sel_wr.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_load_B() {
    m_axis_mem_write_data_V_data_V_1_load_B = (m_axis_mem_write_data_V_data_V_1_sel_wr.read() & m_axis_mem_write_data_V_data_V_1_state_cmp_full.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_sel() {
    m_axis_mem_write_data_V_data_V_1_sel = m_axis_mem_write_data_V_data_V_1_sel_rd.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_state_cmp_full() {
    m_axis_mem_write_data_V_data_V_1_state_cmp_full =  (sc_logic) ((!m_axis_mem_write_data_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(m_axis_mem_write_data_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_data_V_1_vld_out() {
    m_axis_mem_write_data_V_data_V_1_vld_out = m_axis_mem_write_data_V_data_V_1_state.read()[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_ack_in() {
    m_axis_mem_write_data_V_dest_V_1_ack_in = m_axis_mem_write_data_V_dest_V_1_state.read()[1];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_ack_out() {
    m_axis_mem_write_data_V_dest_V_1_ack_out = m_axis_mem_write_data_TREADY.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_591.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read())) {
            m_axis_mem_write_data_V_dest_V_1_data_in = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) {
            m_axis_mem_write_data_V_dest_V_1_data_in = tmp_dest_V_reg_328.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read())) {
            m_axis_mem_write_data_V_dest_V_1_data_in = tmp_dest_V_2_reg_304.read();
        } else {
            m_axis_mem_write_data_V_dest_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        m_axis_mem_write_data_V_dest_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_dest_V_1_sel.read())) {
        m_axis_mem_write_data_V_dest_V_1_data_out = m_axis_mem_write_data_V_dest_V_1_payload_B.read();
    } else {
        m_axis_mem_write_data_V_dest_V_1_data_out = m_axis_mem_write_data_V_dest_V_1_payload_A.read();
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_load_A() {
    m_axis_mem_write_data_V_dest_V_1_load_A = (m_axis_mem_write_data_V_dest_V_1_state_cmp_full.read() & ~m_axis_mem_write_data_V_dest_V_1_sel_wr.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_load_B() {
    m_axis_mem_write_data_V_dest_V_1_load_B = (m_axis_mem_write_data_V_dest_V_1_sel_wr.read() & m_axis_mem_write_data_V_dest_V_1_state_cmp_full.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_sel() {
    m_axis_mem_write_data_V_dest_V_1_sel = m_axis_mem_write_data_V_dest_V_1_sel_rd.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_state_cmp_full() {
    m_axis_mem_write_data_V_dest_V_1_state_cmp_full =  (sc_logic) ((!m_axis_mem_write_data_V_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(m_axis_mem_write_data_V_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_dest_V_1_vld_out() {
    m_axis_mem_write_data_V_dest_V_1_vld_out = m_axis_mem_write_data_V_dest_V_1_state.read()[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_ack_in() {
    m_axis_mem_write_data_V_keep_V_1_ack_in = m_axis_mem_write_data_V_keep_V_1_state.read()[1];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_ack_out() {
    m_axis_mem_write_data_V_keep_V_1_ack_out = m_axis_mem_write_data_TREADY.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_591.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read())) {
            m_axis_mem_write_data_V_keep_V_1_data_in = tmp_keep_V_reg_342.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) {
            m_axis_mem_write_data_V_keep_V_1_data_in = tmp_keep_V_28_reg_318.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read())) {
            m_axis_mem_write_data_V_keep_V_1_data_in = tmp_keep_V_29_reg_294.read();
        } else {
            m_axis_mem_write_data_V_keep_V_1_data_in =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        m_axis_mem_write_data_V_keep_V_1_data_in =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_keep_V_1_sel.read())) {
        m_axis_mem_write_data_V_keep_V_1_data_out = m_axis_mem_write_data_V_keep_V_1_payload_B.read();
    } else {
        m_axis_mem_write_data_V_keep_V_1_data_out = m_axis_mem_write_data_V_keep_V_1_payload_A.read();
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_load_A() {
    m_axis_mem_write_data_V_keep_V_1_load_A = (m_axis_mem_write_data_V_keep_V_1_state_cmp_full.read() & ~m_axis_mem_write_data_V_keep_V_1_sel_wr.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_load_B() {
    m_axis_mem_write_data_V_keep_V_1_load_B = (m_axis_mem_write_data_V_keep_V_1_sel_wr.read() & m_axis_mem_write_data_V_keep_V_1_state_cmp_full.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_sel() {
    m_axis_mem_write_data_V_keep_V_1_sel = m_axis_mem_write_data_V_keep_V_1_sel_rd.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_state_cmp_full() {
    m_axis_mem_write_data_V_keep_V_1_state_cmp_full =  (sc_logic) ((!m_axis_mem_write_data_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(m_axis_mem_write_data_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_keep_V_1_vld_out() {
    m_axis_mem_write_data_V_keep_V_1_vld_out = m_axis_mem_write_data_V_keep_V_1_state.read()[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_ack_in() {
    m_axis_mem_write_data_V_last_V_1_ack_in = m_axis_mem_write_data_V_last_V_1_state.read()[1];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_ack_out() {
    m_axis_mem_write_data_V_last_V_1_ack_out = m_axis_mem_write_data_TREADY.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_591.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read())) {
            m_axis_mem_write_data_V_last_V_1_data_in = tmp_last_V_reg_347.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) {
            m_axis_mem_write_data_V_last_V_1_data_in = tmp_last_V_24_reg_323.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read())) {
            m_axis_mem_write_data_V_last_V_1_data_in = tmp_last_V_25_reg_299.read();
        } else {
            m_axis_mem_write_data_V_last_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        m_axis_mem_write_data_V_last_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, m_axis_mem_write_data_V_last_V_1_sel.read())) {
        m_axis_mem_write_data_V_last_V_1_data_out = m_axis_mem_write_data_V_last_V_1_payload_B.read();
    } else {
        m_axis_mem_write_data_V_last_V_1_data_out = m_axis_mem_write_data_V_last_V_1_payload_A.read();
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_load_A() {
    m_axis_mem_write_data_V_last_V_1_load_A = (m_axis_mem_write_data_V_last_V_1_state_cmp_full.read() & ~m_axis_mem_write_data_V_last_V_1_sel_wr.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_load_B() {
    m_axis_mem_write_data_V_last_V_1_load_B = (m_axis_mem_write_data_V_last_V_1_sel_wr.read() & m_axis_mem_write_data_V_last_V_1_state_cmp_full.read());
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_sel() {
    m_axis_mem_write_data_V_last_V_1_sel = m_axis_mem_write_data_V_last_V_1_sel_rd.read();
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_state_cmp_full() {
    m_axis_mem_write_data_V_last_V_1_state_cmp_full =  (sc_logic) ((!m_axis_mem_write_data_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(m_axis_mem_write_data_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_m_axis_mem_write_data_V_last_V_1_vld_out() {
    m_axis_mem_write_data_V_last_V_1_vld_out = m_axis_mem_write_data_V_last_V_1_state.read()[0];
}

void merge_rx_pkgs_512_s::thread_or_ln2346_fu_261_p2() {
    or_ln2346_fu_261_p2 = (icmp_ln2346_fu_241_p2.read() | icmp_ln2350_fu_247_p2.read());
}

void merge_rx_pkgs_512_s::thread_rx_aethSift2mergerFi_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_aethSift2mergerFi_3_blk_n = rx_aethSift2mergerFi_3_empty_n.read();
    } else {
        rx_aethSift2mergerFi_3_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_aethSift2mergerFi_3_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_aethSift2mergerFi_3_read = ap_const_logic_1;
    } else {
        rx_aethSift2mergerFi_3_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_aethSift2mergerFi_5_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_aethSift2mergerFi_5_blk_n = rx_aethSift2mergerFi_5_empty_n.read();
    } else {
        rx_aethSift2mergerFi_5_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_aethSift2mergerFi_5_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_aethSift2mergerFi_5_read = ap_const_logic_1;
    } else {
        rx_aethSift2mergerFi_5_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_aethSift2mergerFi_6_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_aethSift2mergerFi_6_blk_n = rx_aethSift2mergerFi_6_empty_n.read();
    } else {
        rx_aethSift2mergerFi_6_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_aethSift2mergerFi_6_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op24_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_aethSift2mergerFi_6_read = ap_const_logic_1;
    } else {
        rx_aethSift2mergerFi_6_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_exhNoShiftFifo_V_1_blk_n = rx_exhNoShiftFifo_V_1_empty_n.read();
    } else {
        rx_exhNoShiftFifo_V_1_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_exhNoShiftFifo_V_1_read = ap_const_logic_1;
    } else {
        rx_exhNoShiftFifo_V_1_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_exhNoShiftFifo_V_3_blk_n = rx_exhNoShiftFifo_V_3_empty_n.read();
    } else {
        rx_exhNoShiftFifo_V_3_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_3_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_exhNoShiftFifo_V_3_read = ap_const_logic_1;
    } else {
        rx_exhNoShiftFifo_V_3_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_4_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_exhNoShiftFifo_V_4_blk_n = rx_exhNoShiftFifo_V_4_empty_n.read();
    } else {
        rx_exhNoShiftFifo_V_4_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_4_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_exhNoShiftFifo_V_4_read = ap_const_logic_1;
    } else {
        rx_exhNoShiftFifo_V_4_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_exhNoShiftFifo_V_s_blk_n = rx_exhNoShiftFifo_V_s_empty_n.read();
    } else {
        rx_exhNoShiftFifo_V_s_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_exhNoShiftFifo_V_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op8_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_exhNoShiftFifo_V_s_read = ap_const_logic_1;
    } else {
        rx_exhNoShiftFifo_V_s_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_pkgShiftTypeFifo_s_8_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_pkgShiftTypeFifo_s_8_blk_n = rx_pkgShiftTypeFifo_s_8_empty_n.read();
    } else {
        rx_pkgShiftTypeFifo_s_8_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_pkgShiftTypeFifo_s_8_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_pkgShiftTypeFifo_s_8_read = ap_const_logic_1;
    } else {
        rx_pkgShiftTypeFifo_s_8_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_4_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_rethSift2mergerFi_4_blk_n = rx_rethSift2mergerFi_4_empty_n.read();
    } else {
        rx_rethSift2mergerFi_4_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_4_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_rethSift2mergerFi_4_read = ap_const_logic_1;
    } else {
        rx_rethSift2mergerFi_4_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_6_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_rethSift2mergerFi_6_blk_n = rx_rethSift2mergerFi_6_empty_n.read();
    } else {
        rx_rethSift2mergerFi_6_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_6_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_rethSift2mergerFi_6_read = ap_const_logic_1;
    } else {
        rx_rethSift2mergerFi_6_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_7_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_rethSift2mergerFi_7_blk_n = rx_rethSift2mergerFi_7_empty_n.read();
    } else {
        rx_rethSift2mergerFi_7_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_7_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_rethSift2mergerFi_7_read = ap_const_logic_1;
    } else {
        rx_rethSift2mergerFi_7_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_8_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_rethSift2mergerFi_8_blk_n = rx_rethSift2mergerFi_8_empty_n.read();
    } else {
        rx_rethSift2mergerFi_8_blk_n = ap_const_logic_1;
    }
}

void merge_rx_pkgs_512_s::thread_rx_rethSift2mergerFi_8_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_rethSift2mergerFi_8_read = ap_const_logic_1;
    } else {
        rx_rethSift2mergerFi_8_read = ap_const_logic_0;
    }
}

void merge_rx_pkgs_512_s::thread_select_ln2346_1_fu_267_p3() {
    select_ln2346_1_fu_267_p3 = (!or_ln2346_fu_261_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln2346_fu_261_p2.read()[0].to_bool())? select_ln2346_fu_253_p3.read(): ap_const_lv2_3);
}

void merge_rx_pkgs_512_s::thread_select_ln2346_fu_253_p3() {
    select_ln2346_fu_253_p3 = (!icmp_ln2346_fu_241_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln2346_fu_241_p2.read()[0].to_bool())? ap_const_lv2_1: ap_const_lv2_2);
}

void merge_rx_pkgs_512_s::thread_tmp_59_nbreadreq_fu_134_p5() {
    tmp_59_nbreadreq_fu_134_p5 =  (sc_lv<1>) ((rx_aethSift2mergerFi_3_empty_n.read() & rx_aethSift2mergerFi_5_empty_n.read() & rx_aethSift2mergerFi_6_empty_n.read()));
}

void merge_rx_pkgs_512_s::thread_tmp_60_nbreadreq_fu_108_p6() {
    tmp_60_nbreadreq_fu_108_p6 =  (sc_lv<1>) ((rx_rethSift2mergerFi_8_empty_n.read() & rx_rethSift2mergerFi_6_empty_n.read() & rx_rethSift2mergerFi_7_empty_n.read() & rx_rethSift2mergerFi_4_empty_n.read()));
}

void merge_rx_pkgs_512_s::thread_tmp_61_nbreadreq_fu_82_p6() {
    tmp_61_nbreadreq_fu_82_p6 =  (sc_lv<1>) ((rx_exhNoShiftFifo_V_1_empty_n.read() & rx_exhNoShiftFifo_V_4_empty_n.read() & rx_exhNoShiftFifo_V_s_empty_n.read() & rx_exhNoShiftFifo_V_3_empty_n.read()));
}

void merge_rx_pkgs_512_s::thread_tmp_last_V_24_fu_221_p1() {
    tmp_last_V_24_fu_221_p1 = rx_rethSift2mergerFi_7_dout.read();
}

void merge_rx_pkgs_512_s::thread_tmp_last_V_25_fu_205_p1() {
    tmp_last_V_25_fu_205_p1 = rx_exhNoShiftFifo_V_s_dout.read();
}

void merge_rx_pkgs_512_s::thread_tmp_last_V_fu_237_p1() {
    tmp_last_V_fu_237_p1 = rx_aethSift2mergerFi_6_dout.read();
}

void merge_rx_pkgs_512_s::thread_tmp_nbreadreq_fu_156_p3() {
    tmp_nbreadreq_fu_156_p3 =  (sc_lv<1>) ((rx_pkgShiftTypeFifo_s_8_empty_n.read()));
}

void merge_rx_pkgs_512_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

