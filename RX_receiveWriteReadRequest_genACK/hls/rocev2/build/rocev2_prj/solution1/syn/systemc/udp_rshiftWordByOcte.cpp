// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "udp_rshiftWordByOcte.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic udp_rshiftWordByOcte::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic udp_rshiftWordByOcte::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> udp_rshiftWordByOcte::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> udp_rshiftWordByOcte::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool udp_rshiftWordByOcte::ap_const_boolean_1 = true;
const sc_lv<1> udp_rshiftWordByOcte::ap_const_lv1_0 = "0";
const sc_lv<1> udp_rshiftWordByOcte::ap_const_lv1_1 = "1";
const bool udp_rshiftWordByOcte::ap_const_boolean_0 = false;
const sc_lv<64> udp_rshiftWordByOcte::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> udp_rshiftWordByOcte::ap_const_lv32_40 = "1000000";
const sc_lv<32> udp_rshiftWordByOcte::ap_const_lv32_1FF = "111111111";
const sc_lv<32> udp_rshiftWordByOcte::ap_const_lv32_8 = "1000";
const sc_lv<32> udp_rshiftWordByOcte::ap_const_lv32_3F = "111111";
const sc_lv<56> udp_rshiftWordByOcte::ap_const_lv56_0 = "00000000000000000000000000000000000000000000000000000000";
const sc_lv<8> udp_rshiftWordByOcte::ap_const_lv8_0 = "00000000";

udp_rshiftWordByOcte::udp_rshiftWordByOcte(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( io_acc_block_signal_op7 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( io_acc_block_signal_op39 );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( io_acc_block_signal_op49 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( io_acc_block_signal_op7 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( io_acc_block_signal_op39 );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( io_acc_block_signal_op49 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( io_acc_block_signal_op7 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( io_acc_block_signal_op39 );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( io_acc_block_signal_op49 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op7 );
    sensitive << ( ap_predicate_op7_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( io_acc_block_signal_op39 );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( io_acc_block_signal_op49 );

    SC_METHOD(thread_ap_condition_103);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_170);
    sensitive << ( tmp_nbreadreq_fu_70_p5 );
    sensitive << ( fsmState );
    sensitive << ( tmp_last_V_fu_158_p1 );
    sensitive << ( ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 );

    SC_METHOD(thread_ap_condition_183);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_70_p5 );
    sensitive << ( fsmState );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_193);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4);
    sensitive << ( rs_firstWord_load_load_fu_162_p1 );
    sensitive << ( tmp_last_V_1_fu_176_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106 );
    sensitive << ( ap_condition_183 );

    SC_METHOD(thread_ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4);
    sensitive << ( tmp_last_V_fu_158_p1 );
    sensitive << ( ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117 );
    sensitive << ( ap_condition_183 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117);

    SC_METHOD(thread_ap_predicate_op39_write_state2);
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( tmp_reg_267 );
    sensitive << ( rs_firstWord_load_reg_287 );

    SC_METHOD(thread_ap_predicate_op7_read_state1);
    sensitive << ( tmp_nbreadreq_fu_70_p5 );
    sensitive << ( fsmState );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_fsmState_load_load_fu_146_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( fsmState );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_128_p4);
    sensitive << ( prevWord_data_V_14 );

    SC_METHOD(thread_grp_fu_137_p4);
    sensitive << ( prevWord_keep_V_15 );

    SC_METHOD(thread_io_acc_block_signal_op39);
    sensitive << ( rx_udp2ibFifo_V_data_full_n );
    sensitive << ( rx_udp2ibFifo_V_keep_full_n );
    sensitive << ( rx_udp2ibFifo_V_last_full_n );

    SC_METHOD(thread_io_acc_block_signal_op49);
    sensitive << ( rx_udp2ibFifo_V_data_full_n );
    sensitive << ( rx_udp2ibFifo_V_keep_full_n );
    sensitive << ( rx_udp2ibFifo_V_last_full_n );

    SC_METHOD(thread_io_acc_block_signal_op7);
    sensitive << ( rx_udp2shiftFifo_V_d_empty_n );
    sensitive << ( rx_udp2shiftFifo_V_k_empty_n );
    sensitive << ( rx_udp2shiftFifo_V_l_empty_n );

    SC_METHOD(thread_p_Result_1_fu_226_p3);
    sensitive << ( trunc_ln647_1_fu_223_p1 );
    sensitive << ( grp_fu_137_p4 );

    SC_METHOD(thread_p_Result_2_fu_245_p3);
    sensitive << ( grp_fu_128_p4 );

    SC_METHOD(thread_p_Result_3_fu_254_p3);
    sensitive << ( grp_fu_137_p4 );

    SC_METHOD(thread_p_Result_9_i_fu_166_p4);
    sensitive << ( rx_udp2shiftFifo_V_k_dout );

    SC_METHOD(thread_p_Result_s_fu_214_p3);
    sensitive << ( trunc_ln647_fu_211_p1 );
    sensitive << ( grp_fu_128_p4 );

    SC_METHOD(thread_rs_firstWord_load_load_fu_162_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_70_p5 );
    sensitive << ( fsmState );
    sensitive << ( rs_firstWord );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_udp2ibFifo_V_data_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( rx_udp2ibFifo_V_data_full_n );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_udp2ibFifo_V_data_din);
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( p_Result_s_fu_214_p3 );
    sensitive << ( p_Result_2_fu_245_p3 );
    sensitive << ( ap_condition_193 );

    SC_METHOD(thread_rx_udp2ibFifo_V_data_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_udp2ibFifo_V_keep_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( rx_udp2ibFifo_V_keep_full_n );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_udp2ibFifo_V_keep_din);
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( p_Result_1_fu_226_p3 );
    sensitive << ( p_Result_3_fu_254_p3 );
    sensitive << ( ap_condition_193 );

    SC_METHOD(thread_rx_udp2ibFifo_V_keep_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_udp2ibFifo_V_last_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( rx_udp2ibFifo_V_last_full_n );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_udp2ibFifo_V_last_din);
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( tmp_last_V_1_reg_291 );
    sensitive << ( ap_condition_193 );

    SC_METHOD(thread_rx_udp2ibFifo_V_last_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( fsmState_load_reg_263 );
    sensitive << ( ap_predicate_op39_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_udp2shiftFifo_V_d_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_udp2shiftFifo_V_d_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_udp2shiftFifo_V_d_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_udp2shiftFifo_V_k_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_udp2shiftFifo_V_k_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_udp2shiftFifo_V_k_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_rx_udp2shiftFifo_V_l_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_udp2shiftFifo_V_l_empty_n );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_udp2shiftFifo_V_l_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_last_V_1_fu_176_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_70_p5 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( fsmState );
    sensitive << ( rs_firstWord_load_load_fu_162_p1 );
    sensitive << ( p_Result_9_i_fu_166_p4 );

    SC_METHOD(thread_tmp_last_V_fu_158_p1);
    sensitive << ( rx_udp2shiftFifo_V_l_dout );

    SC_METHOD(thread_tmp_nbreadreq_fu_70_p5);
    sensitive << ( rx_udp2shiftFifo_V_d_empty_n );
    sensitive << ( rx_udp2shiftFifo_V_k_empty_n );
    sensitive << ( rx_udp2shiftFifo_V_l_empty_n );

    SC_METHOD(thread_trunc_ln647_1_fu_223_p1);
    sensitive << ( tmp_keep_V_3_reg_277 );

    SC_METHOD(thread_trunc_ln647_fu_211_p1);
    sensitive << ( tmp_data_V_3_reg_271 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    fsmState = "0";
    prevWord_data_V_14 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    prevWord_keep_V_15 = "0000000000000000000000000000000000000000000000000000000000000000";
    rs_firstWord = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "udp_rshiftWordByOcte_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_d_dout, "(port)rx_udp2shiftFifo_V_d_dout");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_d_empty_n, "(port)rx_udp2shiftFifo_V_d_empty_n");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_d_read, "(port)rx_udp2shiftFifo_V_d_read");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_k_dout, "(port)rx_udp2shiftFifo_V_k_dout");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_k_empty_n, "(port)rx_udp2shiftFifo_V_k_empty_n");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_k_read, "(port)rx_udp2shiftFifo_V_k_read");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_l_dout, "(port)rx_udp2shiftFifo_V_l_dout");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_l_empty_n, "(port)rx_udp2shiftFifo_V_l_empty_n");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_l_read, "(port)rx_udp2shiftFifo_V_l_read");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_data_din, "(port)rx_udp2ibFifo_V_data_din");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_data_full_n, "(port)rx_udp2ibFifo_V_data_full_n");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_data_write, "(port)rx_udp2ibFifo_V_data_write");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_keep_din, "(port)rx_udp2ibFifo_V_keep_din");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_keep_full_n, "(port)rx_udp2ibFifo_V_keep_full_n");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_keep_write, "(port)rx_udp2ibFifo_V_keep_write");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_last_din, "(port)rx_udp2ibFifo_V_last_din");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_last_full_n, "(port)rx_udp2ibFifo_V_last_full_n");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_last_write, "(port)rx_udp2ibFifo_V_last_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, io_acc_block_signal_op7, "io_acc_block_signal_op7");
    sc_trace(mVcdFile, fsmState_load_load_fu_146_p1, "fsmState_load_load_fu_146_p1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_70_p5, "tmp_nbreadreq_fu_70_p5");
    sc_trace(mVcdFile, ap_predicate_op7_read_state1, "ap_predicate_op7_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, io_acc_block_signal_op39, "io_acc_block_signal_op39");
    sc_trace(mVcdFile, fsmState_load_reg_263, "fsmState_load_reg_263");
    sc_trace(mVcdFile, tmp_reg_267, "tmp_reg_267");
    sc_trace(mVcdFile, rs_firstWord_load_reg_287, "rs_firstWord_load_reg_287");
    sc_trace(mVcdFile, ap_predicate_op39_write_state2, "ap_predicate_op39_write_state2");
    sc_trace(mVcdFile, io_acc_block_signal_op49, "io_acc_block_signal_op49");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, fsmState, "fsmState");
    sc_trace(mVcdFile, prevWord_data_V_14, "prevWord_data_V_14");
    sc_trace(mVcdFile, prevWord_keep_V_15, "prevWord_keep_V_15");
    sc_trace(mVcdFile, rs_firstWord, "rs_firstWord");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_d_blk_n, "rx_udp2shiftFifo_V_d_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_k_blk_n, "rx_udp2shiftFifo_V_k_blk_n");
    sc_trace(mVcdFile, rx_udp2shiftFifo_V_l_blk_n, "rx_udp2shiftFifo_V_l_blk_n");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_data_blk_n, "rx_udp2ibFifo_V_data_blk_n");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_keep_blk_n, "rx_udp2ibFifo_V_keep_blk_n");
    sc_trace(mVcdFile, rx_udp2ibFifo_V_last_blk_n, "rx_udp2ibFifo_V_last_blk_n");
    sc_trace(mVcdFile, tmp_data_V_3_reg_271, "tmp_data_V_3_reg_271");
    sc_trace(mVcdFile, tmp_keep_V_3_reg_277, "tmp_keep_V_3_reg_277");
    sc_trace(mVcdFile, tmp_last_V_fu_158_p1, "tmp_last_V_fu_158_p1");
    sc_trace(mVcdFile, rs_firstWord_load_load_fu_162_p1, "rs_firstWord_load_load_fu_162_p1");
    sc_trace(mVcdFile, tmp_last_V_1_fu_176_p2, "tmp_last_V_1_fu_176_p2");
    sc_trace(mVcdFile, tmp_last_V_1_reg_291, "tmp_last_V_1_reg_291");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4, "ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106, "ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106");
    sc_trace(mVcdFile, ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4, "ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117, "ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117");
    sc_trace(mVcdFile, p_Result_s_fu_214_p3, "p_Result_s_fu_214_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, p_Result_2_fu_245_p3, "p_Result_2_fu_245_p3");
    sc_trace(mVcdFile, p_Result_1_fu_226_p3, "p_Result_1_fu_226_p3");
    sc_trace(mVcdFile, p_Result_3_fu_254_p3, "p_Result_3_fu_254_p3");
    sc_trace(mVcdFile, p_Result_9_i_fu_166_p4, "p_Result_9_i_fu_166_p4");
    sc_trace(mVcdFile, trunc_ln647_fu_211_p1, "trunc_ln647_fu_211_p1");
    sc_trace(mVcdFile, grp_fu_128_p4, "grp_fu_128_p4");
    sc_trace(mVcdFile, trunc_ln647_1_fu_223_p1, "trunc_ln647_1_fu_223_p1");
    sc_trace(mVcdFile, grp_fu_137_p4, "grp_fu_137_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_183, "ap_condition_183");
    sc_trace(mVcdFile, ap_condition_170, "ap_condition_170");
    sc_trace(mVcdFile, ap_condition_103, "ap_condition_103");
    sc_trace(mVcdFile, ap_condition_193, "ap_condition_193");
#endif

    }
}

udp_rshiftWordByOcte::~udp_rshiftWordByOcte() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void udp_rshiftWordByOcte::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_103.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(fsmState_load_load_fu_146_p1.read(), ap_const_lv1_1)) {
            fsmState = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_condition_170.read(), ap_const_boolean_1)) {
            fsmState = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fsmState_load_reg_263 = fsmState.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, fsmState_load_reg_263.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_267.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        prevWord_data_V_14 = tmp_data_V_3_reg_271.read();
        prevWord_keep_V_15 = tmp_keep_V_3_reg_277.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_70_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rs_firstWord = ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_70_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rs_firstWord_load_reg_287 = rs_firstWord.read();
        tmp_data_V_3_reg_271 = rx_udp2shiftFifo_V_d_dout.read();
        tmp_keep_V_3_reg_277 = rx_udp2shiftFifo_V_k_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_70_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, rs_firstWord_load_load_fu_162_p1.read()))) {
        tmp_last_V_1_reg_291 = tmp_last_V_1_fu_176_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_267 = tmp_nbreadreq_fu_70_p5.read();
    }
}

void udp_rshiftWordByOcte::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void udp_rshiftWordByOcte::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void udp_rshiftWordByOcte::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op39.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op49.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void udp_rshiftWordByOcte::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op39.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op49.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void udp_rshiftWordByOcte::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op39.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op49.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void udp_rshiftWordByOcte::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void udp_rshiftWordByOcte::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op39.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op49.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read())));
}

void udp_rshiftWordByOcte::thread_ap_condition_103() {
    ap_condition_103 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void udp_rshiftWordByOcte::thread_ap_condition_170() {
    ap_condition_170 = (esl_seteq<1,1,1>(fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_70_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_158_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4.read()));
}

void udp_rshiftWordByOcte::thread_ap_condition_183() {
    ap_condition_183 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_70_p5.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void udp_rshiftWordByOcte::thread_ap_condition_193() {
    ap_condition_193 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void udp_rshiftWordByOcte::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void udp_rshiftWordByOcte::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void udp_rshiftWordByOcte::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void udp_rshiftWordByOcte::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4() {
    if (esl_seteq<1,1,1>(ap_condition_183.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, rs_firstWord_load_load_fu_162_p1.read())) {
            ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, rs_firstWord_load_load_fu_162_p1.read())) {
            ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = tmp_last_V_1_fu_176_p2.read();
        } else {
            ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106.read();
        }
    } else {
        ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106.read();
    }
}

void udp_rshiftWordByOcte::thread_ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4() {
    if (esl_seteq<1,1,1>(ap_condition_183.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_fu_158_p1.read())) {
            ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_fu_158_p1.read())) {
            ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4 = ap_const_lv1_1;
        } else {
            ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4 = ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117.read();
        }
    } else {
        ap_phi_mux_rs_firstWord_new_0_i_phi_fu_120_p4 = ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117.read();
    }
}

void udp_rshiftWordByOcte::thread_ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106() {
    ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106 =  (sc_lv<1>) ("X");
}

void udp_rshiftWordByOcte::thread_ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117() {
    ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117 =  (sc_lv<1>) ("X");
}

void udp_rshiftWordByOcte::thread_ap_predicate_op39_write_state2() {
    ap_predicate_op39_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, fsmState_load_reg_263.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_267.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, rs_firstWord_load_reg_287.read()));
}

void udp_rshiftWordByOcte::thread_ap_predicate_op7_read_state1() {
    ap_predicate_op7_read_state1 = (esl_seteq<1,1,1>(fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_70_p5.read(), ap_const_lv1_1));
}

void udp_rshiftWordByOcte::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_fsmState_load_load_fu_146_p1() {
    fsmState_load_load_fu_146_p1 = fsmState.read();
}

void udp_rshiftWordByOcte::thread_grp_fu_128_p4() {
    grp_fu_128_p4 = prevWord_data_V_14.read().range(511, 64);
}

void udp_rshiftWordByOcte::thread_grp_fu_137_p4() {
    grp_fu_137_p4 = prevWord_keep_V_15.read().range(63, 8);
}

void udp_rshiftWordByOcte::thread_io_acc_block_signal_op39() {
    io_acc_block_signal_op39 = (rx_udp2ibFifo_V_data_full_n.read() & rx_udp2ibFifo_V_keep_full_n.read() & rx_udp2ibFifo_V_last_full_n.read());
}

void udp_rshiftWordByOcte::thread_io_acc_block_signal_op49() {
    io_acc_block_signal_op49 = (rx_udp2ibFifo_V_data_full_n.read() & rx_udp2ibFifo_V_keep_full_n.read() & rx_udp2ibFifo_V_last_full_n.read());
}

void udp_rshiftWordByOcte::thread_io_acc_block_signal_op7() {
    io_acc_block_signal_op7 = (rx_udp2shiftFifo_V_d_empty_n.read() & rx_udp2shiftFifo_V_k_empty_n.read() & rx_udp2shiftFifo_V_l_empty_n.read());
}

void udp_rshiftWordByOcte::thread_p_Result_1_fu_226_p3() {
    p_Result_1_fu_226_p3 = esl_concat<8,56>(trunc_ln647_1_fu_223_p1.read(), grp_fu_137_p4.read());
}

void udp_rshiftWordByOcte::thread_p_Result_2_fu_245_p3() {
    p_Result_2_fu_245_p3 = esl_concat<64,448>(ap_const_lv64_0, grp_fu_128_p4.read());
}

void udp_rshiftWordByOcte::thread_p_Result_3_fu_254_p3() {
    p_Result_3_fu_254_p3 = esl_concat<8,56>(ap_const_lv8_0, grp_fu_137_p4.read());
}

void udp_rshiftWordByOcte::thread_p_Result_9_i_fu_166_p4() {
    p_Result_9_i_fu_166_p4 = rx_udp2shiftFifo_V_k_dout.read().range(63, 8);
}

void udp_rshiftWordByOcte::thread_p_Result_s_fu_214_p3() {
    p_Result_s_fu_214_p3 = esl_concat<64,448>(trunc_ln647_fu_211_p1.read(), grp_fu_128_p4.read());
}

void udp_rshiftWordByOcte::thread_rs_firstWord_load_load_fu_162_p1() {
    rs_firstWord_load_load_fu_162_p1 = rs_firstWord.read();
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_data_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        rx_udp2ibFifo_V_data_blk_n = rx_udp2ibFifo_V_data_full_n.read();
    } else {
        rx_udp2ibFifo_V_data_blk_n = ap_const_logic_1;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_data_din() {
    if (esl_seteq<1,1,1>(ap_condition_193.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read())) {
            rx_udp2ibFifo_V_data_din = p_Result_2_fu_245_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) {
            rx_udp2ibFifo_V_data_din = p_Result_s_fu_214_p3.read();
        } else {
            rx_udp2ibFifo_V_data_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        rx_udp2ibFifo_V_data_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_data_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        rx_udp2ibFifo_V_data_write = ap_const_logic_1;
    } else {
        rx_udp2ibFifo_V_data_write = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_keep_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        rx_udp2ibFifo_V_keep_blk_n = rx_udp2ibFifo_V_keep_full_n.read();
    } else {
        rx_udp2ibFifo_V_keep_blk_n = ap_const_logic_1;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_keep_din() {
    if (esl_seteq<1,1,1>(ap_condition_193.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read())) {
            rx_udp2ibFifo_V_keep_din = p_Result_3_fu_254_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) {
            rx_udp2ibFifo_V_keep_din = p_Result_1_fu_226_p3.read();
        } else {
            rx_udp2ibFifo_V_keep_din =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        rx_udp2ibFifo_V_keep_din =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_keep_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        rx_udp2ibFifo_V_keep_write = ap_const_logic_1;
    } else {
        rx_udp2ibFifo_V_keep_write = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_last_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        rx_udp2ibFifo_V_last_blk_n = rx_udp2ibFifo_V_last_full_n.read();
    } else {
        rx_udp2ibFifo_V_last_blk_n = ap_const_logic_1;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_last_din() {
    if (esl_seteq<1,1,1>(ap_condition_193.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read())) {
            rx_udp2ibFifo_V_last_din = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read())) {
            rx_udp2ibFifo_V_last_din = tmp_last_V_1_reg_291.read();
        } else {
            rx_udp2ibFifo_V_last_din =  (sc_lv<1>) ("X");
        }
    } else {
        rx_udp2ibFifo_V_last_din =  (sc_lv<1>) ("X");
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2ibFifo_V_last_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op39_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fsmState_load_reg_263.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        rx_udp2ibFifo_V_last_write = ap_const_logic_1;
    } else {
        rx_udp2ibFifo_V_last_write = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2shiftFifo_V_d_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        rx_udp2shiftFifo_V_d_blk_n = rx_udp2shiftFifo_V_d_empty_n.read();
    } else {
        rx_udp2shiftFifo_V_d_blk_n = ap_const_logic_1;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2shiftFifo_V_d_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_udp2shiftFifo_V_d_read = ap_const_logic_1;
    } else {
        rx_udp2shiftFifo_V_d_read = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2shiftFifo_V_k_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        rx_udp2shiftFifo_V_k_blk_n = rx_udp2shiftFifo_V_k_empty_n.read();
    } else {
        rx_udp2shiftFifo_V_k_blk_n = ap_const_logic_1;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2shiftFifo_V_k_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_udp2shiftFifo_V_k_read = ap_const_logic_1;
    } else {
        rx_udp2shiftFifo_V_k_read = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2shiftFifo_V_l_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        rx_udp2shiftFifo_V_l_blk_n = rx_udp2shiftFifo_V_l_empty_n.read();
    } else {
        rx_udp2shiftFifo_V_l_blk_n = ap_const_logic_1;
    }
}

void udp_rshiftWordByOcte::thread_rx_udp2shiftFifo_V_l_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_udp2shiftFifo_V_l_read = ap_const_logic_1;
    } else {
        rx_udp2shiftFifo_V_l_read = ap_const_logic_0;
    }
}

void udp_rshiftWordByOcte::thread_tmp_last_V_1_fu_176_p2() {
    tmp_last_V_1_fu_176_p2 = (!p_Result_9_i_fu_166_p4.read().is_01() || !ap_const_lv56_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_9_i_fu_166_p4.read() == ap_const_lv56_0);
}

void udp_rshiftWordByOcte::thread_tmp_last_V_fu_158_p1() {
    tmp_last_V_fu_158_p1 = rx_udp2shiftFifo_V_l_dout.read();
}

void udp_rshiftWordByOcte::thread_tmp_nbreadreq_fu_70_p5() {
    tmp_nbreadreq_fu_70_p5 =  (sc_lv<1>) ((rx_udp2shiftFifo_V_d_empty_n.read() & rx_udp2shiftFifo_V_k_empty_n.read() & rx_udp2shiftFifo_V_l_empty_n.read()));
}

void udp_rshiftWordByOcte::thread_trunc_ln647_1_fu_223_p1() {
    trunc_ln647_1_fu_223_p1 = tmp_keep_V_3_reg_277.read().range(8-1, 0);
}

void udp_rshiftWordByOcte::thread_trunc_ln647_fu_211_p1() {
    trunc_ln647_fu_211_p1 = tmp_data_V_3_reg_271.read().range(64-1, 0);
}

void udp_rshiftWordByOcte::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

