// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "qp_interface.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic qp_interface::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic qp_interface::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> qp_interface::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> qp_interface::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool qp_interface::ap_const_boolean_1 = true;
const sc_lv<1> qp_interface::ap_const_lv1_0 = "0";
const sc_lv<1> qp_interface::ap_const_lv1_1 = "1";
const bool qp_interface::ap_const_boolean_0 = false;
const sc_lv<32> qp_interface::ap_const_lv32_3 = "11";
const sc_lv<32> qp_interface::ap_const_lv32_1A = "11010";
const sc_lv<32> qp_interface::ap_const_lv32_1B = "11011";
const sc_lv<32> qp_interface::ap_const_lv32_32 = "110010";
const sc_lv<32> qp_interface::ap_const_lv32_33 = "110011";
const sc_lv<32> qp_interface::ap_const_lv32_4A = "1001010";
const sc_lv<32> qp_interface::ap_const_lv32_4B = "1001011";
const sc_lv<32> qp_interface::ap_const_lv32_5A = "1011010";
const sc_lv<32> qp_interface::ap_const_lv32_12 = "10010";
const sc_lv<68> qp_interface::ap_const_lv68_0 = "00000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> qp_interface::ap_const_lv32_F = "1111";
const sc_lv<32> qp_interface::ap_const_lv32_43 = "1000011";

qp_interface::qp_interface(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( contextIn_V_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( stateTable2qpi_rsp_V_empty_n );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( qpi2stateTable_upd_r_1_full_n );
    sensitive << ( ap_predicate_op31_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( if2msnTable_init_V_full_n );
    sensitive << ( ap_predicate_op44_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( contextIn_V_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( stateTable2qpi_rsp_V_empty_n );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( qpi2stateTable_upd_r_1_full_n );
    sensitive << ( ap_predicate_op31_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( if2msnTable_init_V_full_n );
    sensitive << ( ap_predicate_op44_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( contextIn_V_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( stateTable2qpi_rsp_V_empty_n );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( qpi2stateTable_upd_r_1_full_n );
    sensitive << ( ap_predicate_op31_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( if2msnTable_init_V_full_n );
    sensitive << ( ap_predicate_op44_write_state2 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( contextIn_V_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( stateTable2qpi_rsp_V_empty_n );
    sensitive << ( ap_predicate_op22_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( qpi2stateTable_upd_r_1_full_n );
    sensitive << ( ap_predicate_op31_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( if2msnTable_init_V_full_n );
    sensitive << ( ap_predicate_op44_write_state2 );

    SC_METHOD(thread_ap_condition_102);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_172);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_predicate_op22_read_state1);
    sensitive << ( tmp_nbreadreq_fu_110_p3 );
    sensitive << ( qp_fsmState );

    SC_METHOD(thread_ap_predicate_op31_write_state2);
    sensitive << ( qp_fsmState_load_reg_312 );
    sensitive << ( tmp_36_reg_316 );

    SC_METHOD(thread_ap_predicate_op40_write_state2);
    sensitive << ( qp_fsmState_load_reg_312 );
    sensitive << ( tmp_reg_325 );

    SC_METHOD(thread_ap_predicate_op44_write_state2);
    sensitive << ( qp_fsmState_load_reg_312 );
    sensitive << ( tmp_reg_325 );

    SC_METHOD(thread_ap_predicate_op7_read_state1);
    sensitive << ( tmp_36_nbreadreq_fu_96_p3 );
    sensitive << ( qp_fsmState );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_contextIn_V_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( contextIn_V_TVALID );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_contextIn_V_TREADY);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op7_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_if2msnTable_init_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( if2msnTable_init_V_full_n );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_if2msnTable_init_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_30_i_fu_299_p3 );

    SC_METHOD(thread_if2msnTable_init_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_qpi2stateTable_upd_r_1_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( qpi2stateTable_upd_r_1_full_n );
    sensitive << ( ap_predicate_op31_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_qpi2stateTable_upd_r_1_din);
    sensitive << ( ap_predicate_op31_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( tmp_1_2_fu_249_p4 );
    sensitive << ( tmp_3_fu_280_p6 );
    sensitive << ( ap_condition_172 );

    SC_METHOD(thread_qpi2stateTable_upd_r_1_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op31_write_state2 );
    sensitive << ( ap_predicate_op40_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stateTable2qpi_rsp_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( stateTable2qpi_rsp_V_empty_n );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_stateTable2qpi_rsp_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op22_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_1_2_fu_249_p4);
    sensitive << ( tmp_1_fu_238_p5 );

    SC_METHOD(thread_tmp_1_fu_238_p5);
    sensitive << ( tmp_qpn_V_12_reg_320 );

    SC_METHOD(thread_tmp_30_i_fu_299_p3);
    sensitive << ( context_r_key_V );
    sensitive << ( tmp_qpn_V_fu_264_p1 );

    SC_METHOD(thread_tmp_36_nbreadreq_fu_96_p3);
    sensitive << ( contextIn_V_TVALID );

    SC_METHOD(thread_tmp_3_fu_280_p6);
    sensitive << ( context_newState );
    sensitive << ( context_remote_psn_V );
    sensitive << ( context_local_psn_V );
    sensitive << ( tmp_qpn_V_fu_264_p1 );

    SC_METHOD(thread_tmp_nbreadreq_fu_110_p3);
    sensitive << ( stateTable2qpi_rsp_V_empty_n );

    SC_METHOD(thread_tmp_qpn_V_fu_264_p1);
    sensitive << ( context_qp_num_V );

    SC_METHOD(thread_trunc_ln109_fu_142_p1);
    sensitive << ( contextIn_V_TDATA );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    qp_fsmState = "0";
    context_newState = "000";
    context_qp_num_V = "000000000000000000000000";
    context_remote_psn_V = "000000000000000000000000";
    context_local_psn_V = "000000000000000000000000";
    context_r_key_V = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "qp_interface_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, contextIn_V_TVALID, "(port)contextIn_V_TVALID");
    sc_trace(mVcdFile, stateTable2qpi_rsp_V_dout, "(port)stateTable2qpi_rsp_V_dout");
    sc_trace(mVcdFile, stateTable2qpi_rsp_V_empty_n, "(port)stateTable2qpi_rsp_V_empty_n");
    sc_trace(mVcdFile, stateTable2qpi_rsp_V_read, "(port)stateTable2qpi_rsp_V_read");
    sc_trace(mVcdFile, qpi2stateTable_upd_r_1_din, "(port)qpi2stateTable_upd_r_1_din");
    sc_trace(mVcdFile, qpi2stateTable_upd_r_1_full_n, "(port)qpi2stateTable_upd_r_1_full_n");
    sc_trace(mVcdFile, qpi2stateTable_upd_r_1_write, "(port)qpi2stateTable_upd_r_1_write");
    sc_trace(mVcdFile, if2msnTable_init_V_din, "(port)if2msnTable_init_V_din");
    sc_trace(mVcdFile, if2msnTable_init_V_full_n, "(port)if2msnTable_init_V_full_n");
    sc_trace(mVcdFile, if2msnTable_init_V_write, "(port)if2msnTable_init_V_write");
    sc_trace(mVcdFile, contextIn_V_TDATA, "(port)contextIn_V_TDATA");
    sc_trace(mVcdFile, contextIn_V_TREADY, "(port)contextIn_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, tmp_36_nbreadreq_fu_96_p3, "tmp_36_nbreadreq_fu_96_p3");
    sc_trace(mVcdFile, ap_predicate_op7_read_state1, "ap_predicate_op7_read_state1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_110_p3, "tmp_nbreadreq_fu_110_p3");
    sc_trace(mVcdFile, ap_predicate_op22_read_state1, "ap_predicate_op22_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, qp_fsmState_load_reg_312, "qp_fsmState_load_reg_312");
    sc_trace(mVcdFile, tmp_36_reg_316, "tmp_36_reg_316");
    sc_trace(mVcdFile, ap_predicate_op31_write_state2, "ap_predicate_op31_write_state2");
    sc_trace(mVcdFile, tmp_reg_325, "tmp_reg_325");
    sc_trace(mVcdFile, ap_predicate_op40_write_state2, "ap_predicate_op40_write_state2");
    sc_trace(mVcdFile, ap_predicate_op44_write_state2, "ap_predicate_op44_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, qp_fsmState, "qp_fsmState");
    sc_trace(mVcdFile, context_newState, "context_newState");
    sc_trace(mVcdFile, context_qp_num_V, "context_qp_num_V");
    sc_trace(mVcdFile, context_remote_psn_V, "context_remote_psn_V");
    sc_trace(mVcdFile, context_local_psn_V, "context_local_psn_V");
    sc_trace(mVcdFile, context_r_key_V, "context_r_key_V");
    sc_trace(mVcdFile, contextIn_V_TDATA_blk_n, "contextIn_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, qpi2stateTable_upd_r_1_blk_n, "qpi2stateTable_upd_r_1_blk_n");
    sc_trace(mVcdFile, stateTable2qpi_rsp_V_blk_n, "stateTable2qpi_rsp_V_blk_n");
    sc_trace(mVcdFile, if2msnTable_init_V_blk_n, "if2msnTable_init_V_blk_n");
    sc_trace(mVcdFile, tmp_qpn_V_12_reg_320, "tmp_qpn_V_12_reg_320");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, trunc_ln109_fu_142_p1, "trunc_ln109_fu_142_p1");
    sc_trace(mVcdFile, tmp_1_2_fu_249_p4, "tmp_1_2_fu_249_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_3_fu_280_p6, "tmp_3_fu_280_p6");
    sc_trace(mVcdFile, tmp_1_fu_238_p5, "tmp_1_fu_238_p5");
    sc_trace(mVcdFile, tmp_qpn_V_fu_264_p1, "tmp_qpn_V_fu_264_p1");
    sc_trace(mVcdFile, tmp_30_i_fu_299_p3, "tmp_30_i_fu_299_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_102, "ap_condition_102");
    sc_trace(mVcdFile, ap_condition_172, "ap_condition_172");
#endif

    }
}

qp_interface::~qp_interface() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void qp_interface::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_102.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_110_p3.read()))) {
            qp_fsmState = ap_const_lv1_0;
        } else if ((esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(tmp_36_nbreadreq_fu_96_p3.read(), ap_const_lv1_1))) {
            qp_fsmState = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_36_nbreadreq_fu_96_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        context_local_psn_V = contextIn_V_TDATA.read().range(74, 51);
        context_newState = trunc_ln109_fu_142_p1.read();
        context_qp_num_V = contextIn_V_TDATA.read().range(26, 3);
        context_r_key_V = contextIn_V_TDATA.read().range(90, 75);
        context_remote_psn_V = contextIn_V_TDATA.read().range(50, 27);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        qp_fsmState_load_reg_312 = qp_fsmState.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_36_reg_316 = tmp_36_nbreadreq_fu_96_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_36_nbreadreq_fu_96_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_qpn_V_12_reg_320 = contextIn_V_TDATA.read().range(18, 3);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_325 = tmp_nbreadreq_fu_110_p3.read();
    }
}

void qp_interface::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void qp_interface::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void qp_interface::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, contextIn_V_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, stateTable2qpi_rsp_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, if2msnTable_init_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void qp_interface::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, contextIn_V_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, stateTable2qpi_rsp_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, if2msnTable_init_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void qp_interface::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, contextIn_V_TVALID.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, stateTable2qpi_rsp_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, if2msnTable_init_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void qp_interface::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, contextIn_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, stateTable2qpi_rsp_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void qp_interface::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, qpi2stateTable_upd_r_1_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, if2msnTable_init_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read())));
}

void qp_interface::thread_ap_condition_102() {
    ap_condition_102 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void qp_interface::thread_ap_condition_172() {
    ap_condition_172 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void qp_interface::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void qp_interface::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void qp_interface::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void qp_interface::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void qp_interface::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void qp_interface::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void qp_interface::thread_ap_predicate_op22_read_state1() {
    ap_predicate_op22_read_state1 = (esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_110_p3.read()));
}

void qp_interface::thread_ap_predicate_op31_write_state2() {
    ap_predicate_op31_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, qp_fsmState_load_reg_312.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_316.read()));
}

void qp_interface::thread_ap_predicate_op40_write_state2() {
    ap_predicate_op40_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_1, qp_fsmState_load_reg_312.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_325.read()));
}

void qp_interface::thread_ap_predicate_op44_write_state2() {
    ap_predicate_op44_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_1, qp_fsmState_load_reg_312.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_325.read()));
}

void qp_interface::thread_ap_predicate_op7_read_state1() {
    ap_predicate_op7_read_state1 = (esl_seteq<1,1,1>(qp_fsmState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_36_nbreadreq_fu_96_p3.read(), ap_const_lv1_1));
}

void qp_interface::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void qp_interface::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void qp_interface::thread_contextIn_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        contextIn_V_TDATA_blk_n = contextIn_V_TVALID.read();
    } else {
        contextIn_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void qp_interface::thread_contextIn_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op7_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        contextIn_V_TREADY = ap_const_logic_1;
    } else {
        contextIn_V_TREADY = ap_const_logic_0;
    }
}

void qp_interface::thread_if2msnTable_init_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        if2msnTable_init_V_blk_n = if2msnTable_init_V_full_n.read();
    } else {
        if2msnTable_init_V_blk_n = ap_const_logic_1;
    }
}

void qp_interface::thread_if2msnTable_init_V_din() {
    if2msnTable_init_V_din = esl_zext<48,32>(tmp_30_i_fu_299_p3.read());
}

void qp_interface::thread_if2msnTable_init_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        if2msnTable_init_V_write = ap_const_logic_1;
    } else {
        if2msnTable_init_V_write = ap_const_logic_0;
    }
}

void qp_interface::thread_qpi2stateTable_upd_r_1_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        qpi2stateTable_upd_r_1_blk_n = qpi2stateTable_upd_r_1_full_n.read();
    } else {
        qpi2stateTable_upd_r_1_blk_n = ap_const_logic_1;
    }
}

void qp_interface::thread_qpi2stateTable_upd_r_1_din() {
    if (esl_seteq<1,1,1>(ap_condition_172.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read())) {
            qpi2stateTable_upd_r_1_din = tmp_3_fu_280_p6.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_write_state2.read())) {
            qpi2stateTable_upd_r_1_din = tmp_1_2_fu_249_p4.read();
        } else {
            qpi2stateTable_upd_r_1_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        qpi2stateTable_upd_r_1_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void qp_interface::thread_qpi2stateTable_upd_r_1_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op40_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        qpi2stateTable_upd_r_1_write = ap_const_logic_1;
    } else {
        qpi2stateTable_upd_r_1_write = ap_const_logic_0;
    }
}

void qp_interface::thread_stateTable2qpi_rsp_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        stateTable2qpi_rsp_V_blk_n = stateTable2qpi_rsp_V_empty_n.read();
    } else {
        stateTable2qpi_rsp_V_blk_n = ap_const_logic_1;
    }
}

void qp_interface::thread_stateTable2qpi_rsp_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op22_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        stateTable2qpi_rsp_V_read = ap_const_logic_1;
    } else {
        stateTable2qpi_rsp_V_read = ap_const_logic_0;
    }
}

void qp_interface::thread_tmp_1_2_fu_249_p4() {
    tmp_1_2_fu_249_p4 = esl_bitset<68,68,32,1>(tmp_1_fu_238_p5.read(), ap_const_lv32_43, ap_const_lv1_0);
}

void qp_interface::thread_tmp_1_fu_238_p5() {
    tmp_1_fu_238_p5 = esl_partset<68,68,16,32,32>(ap_const_lv68_0, tmp_qpn_V_12_reg_320.read(), ap_const_lv32_0, ap_const_lv32_F);
}

void qp_interface::thread_tmp_30_i_fu_299_p3() {
    tmp_30_i_fu_299_p3 = esl_concat<16,16>(context_r_key_V.read(), tmp_qpn_V_fu_264_p1.read());
}

void qp_interface::thread_tmp_36_nbreadreq_fu_96_p3() {
    tmp_36_nbreadreq_fu_96_p3 =  (sc_lv<1>) ((contextIn_V_TVALID.read()));
}

void qp_interface::thread_tmp_3_fu_280_p6() {
    tmp_3_fu_280_p6 = esl_concat<52,16>(esl_concat<49,3>(esl_concat<25,24>(esl_concat<1,24>(ap_const_lv1_1, context_local_psn_V.read()), context_remote_psn_V.read()), context_newState.read()), tmp_qpn_V_fu_264_p1.read());
}

void qp_interface::thread_tmp_nbreadreq_fu_110_p3() {
    tmp_nbreadreq_fu_110_p3 =  (sc_lv<1>) ((stateTable2qpi_rsp_V_empty_n.read()));
}

void qp_interface::thread_tmp_qpn_V_fu_264_p1() {
    tmp_qpn_V_fu_264_p1 = context_qp_num_V.read().range(16-1, 0);
}

void qp_interface::thread_trunc_ln109_fu_142_p1() {
    trunc_ln109_fu_142_p1 = contextIn_V_TDATA.read().range(3-1, 0);
}

void qp_interface::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

