// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mem_cmd_merger_512_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mem_cmd_merger_512_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mem_cmd_merger_512_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> mem_cmd_merger_512_s::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool mem_cmd_merger_512_s::ap_const_boolean_1 = true;
const sc_lv<1> mem_cmd_merger_512_s::ap_const_lv1_1 = "1";
const sc_lv<1> mem_cmd_merger_512_s::ap_const_lv1_0 = "0";
const sc_lv<2> mem_cmd_merger_512_s::ap_const_lv2_0 = "00";
const sc_lv<2> mem_cmd_merger_512_s::ap_const_lv2_2 = "10";
const sc_lv<2> mem_cmd_merger_512_s::ap_const_lv2_3 = "11";
const sc_lv<2> mem_cmd_merger_512_s::ap_const_lv2_1 = "1";
const bool mem_cmd_merger_512_s::ap_const_boolean_0 = false;
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_50 = "1010000";
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_6F = "1101111";
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_70 = "1110000";
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_10 = "10000";
const sc_lv<33> mem_cmd_merger_512_s::ap_const_lv33_3F = "111111";
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_6 = "110";
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_20 = "100000";
const sc_lv<32> mem_cmd_merger_512_s::ap_const_lv32_4F = "1001111";
const sc_lv<64> mem_cmd_merger_512_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

mem_cmd_merger_512_s::mem_cmd_merger_512_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1371_1_fu_250_p2);
    sensitive << ( zext_ln215_1_fu_247_p1 );

    SC_METHOD(thread_add_ln1371_2_fu_226_p2);
    sensitive << ( zext_ln215_2_fu_223_p1 );

    SC_METHOD(thread_add_ln1371_fu_163_p2);
    sensitive << ( zext_ln215_fu_159_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( rx_remoteMemCmd_V_empty_n );
    sensitive << ( tmp_nbreadreq_fu_76_p3 );
    sensitive << ( tx_localMemCmdFifo_V_empty_n );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( io_acc_block_signal_op28 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( io_acc_block_signal_op33 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( io_acc_block_signal_op36 );
    sensitive << ( m_axis_mem_read_cmd_TREADY );
    sensitive << ( out_V_data_1_state );
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( rx_remoteMemCmd_V_empty_n );
    sensitive << ( tmp_nbreadreq_fu_76_p3 );
    sensitive << ( tx_localMemCmdFifo_V_empty_n );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( io_acc_block_signal_op28 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( io_acc_block_signal_op33 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( io_acc_block_signal_op36 );
    sensitive << ( m_axis_mem_read_cmd_TREADY );
    sensitive << ( ap_block_state3_io );
    sensitive << ( out_V_data_1_state );
    sensitive << ( out_V_dest_V_1_state );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( rx_remoteMemCmd_V_empty_n );
    sensitive << ( tmp_nbreadreq_fu_76_p3 );
    sensitive << ( tx_localMemCmdFifo_V_empty_n );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( io_acc_block_signal_op28 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( io_acc_block_signal_op33 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( io_acc_block_signal_op36 );
    sensitive << ( m_axis_mem_read_cmd_TREADY );
    sensitive << ( ap_block_state3_io );
    sensitive << ( out_V_data_1_state );
    sensitive << ( out_V_dest_V_1_state );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( rx_remoteMemCmd_V_empty_n );
    sensitive << ( tmp_nbreadreq_fu_76_p3 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( tx_localMemCmdFifo_V_empty_n );
    sensitive << ( ap_predicate_op16_read_state2 );

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( out_V_data_1_ack_in );
    sensitive << ( ap_predicate_op23_write_state3 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( io_acc_block_signal_op28 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( io_acc_block_signal_op33 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( io_acc_block_signal_op36 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( out_V_data_1_ack_in );
    sensitive << ( tmp_reg_275_pp0_iter2_reg );
    sensitive << ( ap_predicate_op44_write_state4 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);
    sensitive << ( m_axis_mem_read_cmd_TREADY );
    sensitive << ( out_V_data_1_state );
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle_pp0_0to2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_predicate_op16_read_state2);
    sensitive << ( tmp_reg_275 );
    sensitive << ( tmp_67_nbreadreq_fu_90_p3 );

    SC_METHOD(thread_ap_predicate_op23_write_state3);
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( tmp_67_reg_294 );
    sensitive << ( icmp_ln883_reg_309 );

    SC_METHOD(thread_ap_predicate_op28_write_state3);
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( tmp_67_reg_294 );
    sensitive << ( icmp_ln883_reg_309 );

    SC_METHOD(thread_ap_predicate_op33_write_state3);
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( tmp_67_reg_294 );
    sensitive << ( icmp_ln883_reg_309 );

    SC_METHOD(thread_ap_predicate_op44_write_state4);
    sensitive << ( tmp_reg_275_pp0_iter2_reg );
    sensitive << ( tmp_67_reg_294_pp0_iter2_reg );
    sensitive << ( icmp_ln883_reg_309_pp0_iter2_reg );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to2 );

    SC_METHOD(thread_icmp_ln883_fu_207_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_275 );
    sensitive << ( tmp_67_nbreadreq_fu_90_p3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_data_addr_V_fu_179_p4 );

    SC_METHOD(thread_io_acc_block_signal_op28);
    sensitive << ( tx_pkgInfoFifo_V_typ_full_n );
    sensitive << ( tx_pkgInfoFifo_V_sou_full_n );
    sensitive << ( tx_pkgInfoFifo_V_wor_full_n );

    SC_METHOD(thread_io_acc_block_signal_op33);
    sensitive << ( tx_pkgInfoFifo_V_typ_full_n );
    sensitive << ( tx_pkgInfoFifo_V_sou_full_n );
    sensitive << ( tx_pkgInfoFifo_V_wor_full_n );

    SC_METHOD(thread_io_acc_block_signal_op36);
    sensitive << ( tx_pkgInfoFifo_V_typ_full_n );
    sensitive << ( tx_pkgInfoFifo_V_sou_full_n );
    sensitive << ( tx_pkgInfoFifo_V_wor_full_n );

    SC_METHOD(thread_m_axis_mem_read_cmd_TDATA);
    sensitive << ( out_V_data_1_data_out );

    SC_METHOD(thread_m_axis_mem_read_cmd_TDATA_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op23_write_state3 );
    sensitive << ( out_V_data_1_state );
    sensitive << ( tmp_reg_275_pp0_iter2_reg );
    sensitive << ( ap_predicate_op44_write_state4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_m_axis_mem_read_cmd_TDEST);
    sensitive << ( out_V_dest_V_1_data_out );

    SC_METHOD(thread_m_axis_mem_read_cmd_TVALID);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_data_1_ack_in);
    sensitive << ( out_V_data_1_state );

    SC_METHOD(thread_out_V_data_1_ack_out);
    sensitive << ( m_axis_mem_read_cmd_TREADY );

    SC_METHOD(thread_out_V_data_1_data_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op23_write_state3 );
    sensitive << ( tmp_data_reg_284_pp0_iter1_reg );
    sensitive << ( tmp_data_1_reg_313 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_data_1_data_out);
    sensitive << ( out_V_data_1_payload_A );
    sensitive << ( out_V_data_1_payload_B );
    sensitive << ( out_V_data_1_sel );

    SC_METHOD(thread_out_V_data_1_load_A);
    sensitive << ( out_V_data_1_sel_wr );
    sensitive << ( out_V_data_1_state_cmp_full );

    SC_METHOD(thread_out_V_data_1_load_B);
    sensitive << ( out_V_data_1_sel_wr );
    sensitive << ( out_V_data_1_state_cmp_full );

    SC_METHOD(thread_out_V_data_1_sel);
    sensitive << ( out_V_data_1_sel_rd );

    SC_METHOD(thread_out_V_data_1_state_cmp_full);
    sensitive << ( out_V_data_1_state );

    SC_METHOD(thread_out_V_data_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op23_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_data_1_vld_out);
    sensitive << ( out_V_data_1_state );

    SC_METHOD(thread_out_V_dest_V_1_ack_in);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_dest_V_1_ack_out);
    sensitive << ( m_axis_mem_read_cmd_TREADY );

    SC_METHOD(thread_out_V_dest_V_1_data_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op23_write_state3 );
    sensitive << ( tmp_dest_V_reg_279_pp0_iter1_reg );
    sensitive << ( tmp_dest_V_3_reg_304 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_dest_V_1_data_out);
    sensitive << ( out_V_dest_V_1_payload_A );
    sensitive << ( out_V_dest_V_1_payload_B );
    sensitive << ( out_V_dest_V_1_sel );

    SC_METHOD(thread_out_V_dest_V_1_load_A);
    sensitive << ( out_V_dest_V_1_sel_wr );
    sensitive << ( out_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_dest_V_1_load_B);
    sensitive << ( out_V_dest_V_1_sel_wr );
    sensitive << ( out_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_dest_V_1_sel);
    sensitive << ( out_V_dest_V_1_sel_rd );

    SC_METHOD(thread_out_V_dest_V_1_state_cmp_full);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_dest_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op23_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_dest_V_1_vld_out);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_rx_remoteMemCmd_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rx_remoteMemCmd_V_empty_n );
    sensitive << ( tmp_nbreadreq_fu_76_p3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rx_remoteMemCmd_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_76_p3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_67_nbreadreq_fu_90_p3);
    sensitive << ( tx_localMemCmdFifo_V_empty_n );

    SC_METHOD(thread_tmp_data_addr_V_fu_179_p4);
    sensitive << ( tx_localMemCmdFifo_V_dout );

    SC_METHOD(thread_tmp_data_len_V_fu_131_p4);
    sensitive << ( rx_remoteMemCmd_V_dout );

    SC_METHOD(thread_tmp_nbreadreq_fu_76_p3);
    sensitive << ( rx_remoteMemCmd_V_empty_n );

    SC_METHOD(thread_tmp_words_V_1_fu_271_p1);
    sensitive << ( tmp_words_V_reg_289_pp0_iter1_reg );

    SC_METHOD(thread_tmp_words_V_2_fu_256_p4);
    sensitive << ( add_ln1371_1_fu_250_p2 );

    SC_METHOD(thread_tmp_words_V_3_fu_266_p1);
    sensitive << ( tmp_words_V_2_fu_256_p4 );

    SC_METHOD(thread_tmp_words_V_4_fu_232_p4);
    sensitive << ( add_ln1371_2_fu_226_p2 );

    SC_METHOD(thread_tmp_words_V_5_fu_242_p1);
    sensitive << ( tmp_words_V_4_fu_232_p4 );

    SC_METHOD(thread_tx_localMemCmdFifo_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tx_localMemCmdFifo_V_empty_n );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_localMemCmdFifo_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_sou_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tx_pkgInfoFifo_V_sou_full_n );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_sou_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_sou_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_typ_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tx_pkgInfoFifo_V_typ_full_n );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_typ_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_typ_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_wor_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tx_pkgInfoFifo_V_wor_full_n );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_wor_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_words_V_5_fu_242_p1 );
    sensitive << ( tmp_words_V_3_fu_266_p1 );
    sensitive << ( tmp_words_V_1_fu_271_p1 );

    SC_METHOD(thread_tx_pkgInfoFifo_V_wor_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_reg_275_pp0_iter1_reg );
    sensitive << ( ap_predicate_op28_write_state3 );
    sensitive << ( ap_predicate_op33_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_zext_ln215_1_fu_247_p1);
    sensitive << ( tmp_data_len_V_5_reg_298 );

    SC_METHOD(thread_zext_ln215_2_fu_223_p1);
    sensitive << ( tmp_data_len_V_5_reg_298 );

    SC_METHOD(thread_zext_ln215_fu_159_p1);
    sensitive << ( tmp_data_len_V_fu_131_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    out_V_data_1_state = "00";
    out_V_dest_V_1_state = "00";
    out_V_data_1_sel_rd = SC_LOGIC_0;
    out_V_data_1_sel_wr = SC_LOGIC_0;
    out_V_dest_V_1_sel_rd = SC_LOGIC_0;
    out_V_dest_V_1_sel_wr = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mem_cmd_merger_512_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, rx_remoteMemCmd_V_dout, "(port)rx_remoteMemCmd_V_dout");
    sc_trace(mVcdFile, rx_remoteMemCmd_V_empty_n, "(port)rx_remoteMemCmd_V_empty_n");
    sc_trace(mVcdFile, rx_remoteMemCmd_V_read, "(port)rx_remoteMemCmd_V_read");
    sc_trace(mVcdFile, tx_localMemCmdFifo_V_dout, "(port)tx_localMemCmdFifo_V_dout");
    sc_trace(mVcdFile, tx_localMemCmdFifo_V_empty_n, "(port)tx_localMemCmdFifo_V_empty_n");
    sc_trace(mVcdFile, tx_localMemCmdFifo_V_read, "(port)tx_localMemCmdFifo_V_read");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_typ_din, "(port)tx_pkgInfoFifo_V_typ_din");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_typ_full_n, "(port)tx_pkgInfoFifo_V_typ_full_n");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_typ_write, "(port)tx_pkgInfoFifo_V_typ_write");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_sou_din, "(port)tx_pkgInfoFifo_V_sou_din");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_sou_full_n, "(port)tx_pkgInfoFifo_V_sou_full_n");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_sou_write, "(port)tx_pkgInfoFifo_V_sou_write");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_wor_din, "(port)tx_pkgInfoFifo_V_wor_din");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_wor_full_n, "(port)tx_pkgInfoFifo_V_wor_full_n");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_wor_write, "(port)tx_pkgInfoFifo_V_wor_write");
    sc_trace(mVcdFile, m_axis_mem_read_cmd_TREADY, "(port)m_axis_mem_read_cmd_TREADY");
    sc_trace(mVcdFile, m_axis_mem_read_cmd_TDATA, "(port)m_axis_mem_read_cmd_TDATA");
    sc_trace(mVcdFile, m_axis_mem_read_cmd_TVALID, "(port)m_axis_mem_read_cmd_TVALID");
    sc_trace(mVcdFile, m_axis_mem_read_cmd_TDEST, "(port)m_axis_mem_read_cmd_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_76_p3, "tmp_nbreadreq_fu_76_p3");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, tmp_reg_275, "tmp_reg_275");
    sc_trace(mVcdFile, tmp_67_nbreadreq_fu_90_p3, "tmp_67_nbreadreq_fu_90_p3");
    sc_trace(mVcdFile, ap_predicate_op16_read_state2, "ap_predicate_op16_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, io_acc_block_signal_op28, "io_acc_block_signal_op28");
    sc_trace(mVcdFile, tmp_reg_275_pp0_iter1_reg, "tmp_reg_275_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_67_reg_294, "tmp_67_reg_294");
    sc_trace(mVcdFile, icmp_ln883_reg_309, "icmp_ln883_reg_309");
    sc_trace(mVcdFile, ap_predicate_op28_write_state3, "ap_predicate_op28_write_state3");
    sc_trace(mVcdFile, io_acc_block_signal_op33, "io_acc_block_signal_op33");
    sc_trace(mVcdFile, ap_predicate_op33_write_state3, "ap_predicate_op33_write_state3");
    sc_trace(mVcdFile, io_acc_block_signal_op36, "io_acc_block_signal_op36");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, out_V_data_1_ack_in, "out_V_data_1_ack_in");
    sc_trace(mVcdFile, ap_predicate_op23_write_state3, "ap_predicate_op23_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, out_V_data_1_ack_out, "out_V_data_1_ack_out");
    sc_trace(mVcdFile, out_V_data_1_state, "out_V_data_1_state");
    sc_trace(mVcdFile, out_V_dest_V_1_ack_out, "out_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_V_dest_V_1_state, "out_V_dest_V_1_state");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, tmp_reg_275_pp0_iter2_reg, "tmp_reg_275_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_67_reg_294_pp0_iter2_reg, "tmp_67_reg_294_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln883_reg_309_pp0_iter2_reg, "icmp_ln883_reg_309_pp0_iter2_reg");
    sc_trace(mVcdFile, ap_predicate_op44_write_state4, "ap_predicate_op44_write_state4");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, out_V_data_1_data_in, "out_V_data_1_data_in");
    sc_trace(mVcdFile, out_V_data_1_data_out, "out_V_data_1_data_out");
    sc_trace(mVcdFile, out_V_data_1_vld_in, "out_V_data_1_vld_in");
    sc_trace(mVcdFile, out_V_data_1_vld_out, "out_V_data_1_vld_out");
    sc_trace(mVcdFile, out_V_data_1_payload_A, "out_V_data_1_payload_A");
    sc_trace(mVcdFile, out_V_data_1_payload_B, "out_V_data_1_payload_B");
    sc_trace(mVcdFile, out_V_data_1_sel_rd, "out_V_data_1_sel_rd");
    sc_trace(mVcdFile, out_V_data_1_sel_wr, "out_V_data_1_sel_wr");
    sc_trace(mVcdFile, out_V_data_1_sel, "out_V_data_1_sel");
    sc_trace(mVcdFile, out_V_data_1_load_A, "out_V_data_1_load_A");
    sc_trace(mVcdFile, out_V_data_1_load_B, "out_V_data_1_load_B");
    sc_trace(mVcdFile, out_V_data_1_state_cmp_full, "out_V_data_1_state_cmp_full");
    sc_trace(mVcdFile, out_V_dest_V_1_data_in, "out_V_dest_V_1_data_in");
    sc_trace(mVcdFile, out_V_dest_V_1_data_out, "out_V_dest_V_1_data_out");
    sc_trace(mVcdFile, out_V_dest_V_1_vld_in, "out_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_V_dest_V_1_vld_out, "out_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_V_dest_V_1_ack_in, "out_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_V_dest_V_1_payload_A, "out_V_dest_V_1_payload_A");
    sc_trace(mVcdFile, out_V_dest_V_1_payload_B, "out_V_dest_V_1_payload_B");
    sc_trace(mVcdFile, out_V_dest_V_1_sel_rd, "out_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_dest_V_1_sel_wr, "out_V_dest_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_dest_V_1_sel, "out_V_dest_V_1_sel");
    sc_trace(mVcdFile, out_V_dest_V_1_load_A, "out_V_dest_V_1_load_A");
    sc_trace(mVcdFile, out_V_dest_V_1_load_B, "out_V_dest_V_1_load_B");
    sc_trace(mVcdFile, out_V_dest_V_1_state_cmp_full, "out_V_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, m_axis_mem_read_cmd_TDATA_blk_n, "m_axis_mem_read_cmd_TDATA_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, rx_remoteMemCmd_V_blk_n, "rx_remoteMemCmd_V_blk_n");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_typ_blk_n, "tx_pkgInfoFifo_V_typ_blk_n");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_sou_blk_n, "tx_pkgInfoFifo_V_sou_blk_n");
    sc_trace(mVcdFile, tx_pkgInfoFifo_V_wor_blk_n, "tx_pkgInfoFifo_V_wor_blk_n");
    sc_trace(mVcdFile, tx_localMemCmdFifo_V_blk_n, "tx_localMemCmdFifo_V_blk_n");
    sc_trace(mVcdFile, tmp_dest_V_reg_279, "tmp_dest_V_reg_279");
    sc_trace(mVcdFile, tmp_dest_V_reg_279_pp0_iter1_reg, "tmp_dest_V_reg_279_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_data_reg_284, "tmp_data_reg_284");
    sc_trace(mVcdFile, tmp_data_reg_284_pp0_iter1_reg, "tmp_data_reg_284_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_words_V_reg_289, "tmp_words_V_reg_289");
    sc_trace(mVcdFile, tmp_words_V_reg_289_pp0_iter1_reg, "tmp_words_V_reg_289_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_data_len_V_5_reg_298, "tmp_data_len_V_5_reg_298");
    sc_trace(mVcdFile, tmp_dest_V_3_reg_304, "tmp_dest_V_3_reg_304");
    sc_trace(mVcdFile, icmp_ln883_fu_207_p2, "icmp_ln883_fu_207_p2");
    sc_trace(mVcdFile, tmp_data_1_reg_313, "tmp_data_1_reg_313");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_words_V_5_fu_242_p1, "tmp_words_V_5_fu_242_p1");
    sc_trace(mVcdFile, tmp_words_V_3_fu_266_p1, "tmp_words_V_3_fu_266_p1");
    sc_trace(mVcdFile, tmp_words_V_1_fu_271_p1, "tmp_words_V_1_fu_271_p1");
    sc_trace(mVcdFile, tmp_data_len_V_fu_131_p4, "tmp_data_len_V_fu_131_p4");
    sc_trace(mVcdFile, zext_ln215_fu_159_p1, "zext_ln215_fu_159_p1");
    sc_trace(mVcdFile, add_ln1371_fu_163_p2, "add_ln1371_fu_163_p2");
    sc_trace(mVcdFile, tmp_data_addr_V_fu_179_p4, "tmp_data_addr_V_fu_179_p4");
    sc_trace(mVcdFile, zext_ln215_2_fu_223_p1, "zext_ln215_2_fu_223_p1");
    sc_trace(mVcdFile, add_ln1371_2_fu_226_p2, "add_ln1371_2_fu_226_p2");
    sc_trace(mVcdFile, tmp_words_V_4_fu_232_p4, "tmp_words_V_4_fu_232_p4");
    sc_trace(mVcdFile, zext_ln215_1_fu_247_p1, "zext_ln215_1_fu_247_p1");
    sc_trace(mVcdFile, add_ln1371_1_fu_250_p2, "add_ln1371_1_fu_250_p2");
    sc_trace(mVcdFile, tmp_words_V_2_fu_256_p4, "tmp_words_V_2_fu_256_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to2, "ap_idle_pp0_0to2");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

mem_cmd_merger_512_s::~mem_cmd_merger_512_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void mem_cmd_merger_512_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_data_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_vld_out.read()))) {
            out_V_data_1_sel_rd =  (sc_logic) (~out_V_data_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_data_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_ack_in.read()))) {
            out_V_data_1_sel_wr =  (sc_logic) (~out_V_data_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_data_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_3) && 
              esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_2) && 
              esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_1_vld_in.read())))) {
            out_V_data_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
                     esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_3) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
                     esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_1)))) {
            out_V_data_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_2) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_ack_out.read()))))) {
            out_V_data_1_state = ap_const_lv2_3;
        } else {
            out_V_data_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_out.read()))) {
            out_V_dest_V_1_sel_rd =  (sc_logic) (~out_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_in.read()))) {
            out_V_dest_V_1_sel_wr =  (sc_logic) (~out_V_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read())) || 
             (esl_seteq<1,2,2>(ap_const_lv2_2, out_V_dest_V_1_state.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read())))) {
            out_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read())))) {
            out_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,2,2>(ap_const_lv2_2, out_V_dest_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()))))) {
            out_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_275.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_nbreadreq_fu_90_p3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln883_reg_309 = icmp_ln883_fu_207_p2.read();
        tmp_data_len_V_5_reg_298 = tx_localMemCmdFifo_V_dout.read().range(111, 80);
        tmp_dest_V_3_reg_304 = tx_localMemCmdFifo_V_dout.read().range(112, 112);
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln883_reg_309_pp0_iter2_reg = icmp_ln883_reg_309.read();
        tmp_67_reg_294_pp0_iter2_reg = tmp_67_reg_294.read();
        tmp_reg_275_pp0_iter2_reg = tmp_reg_275_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_load_A.read())) {
        out_V_data_1_payload_A = out_V_data_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_load_B.read())) {
        out_V_data_1_payload_B = out_V_data_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_load_A.read())) {
        out_V_dest_V_1_payload_A = out_V_dest_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_load_B.read())) {
        out_V_dest_V_1_payload_B = out_V_dest_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_275.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_67_reg_294 = tmp_67_nbreadreq_fu_90_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_275.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_nbreadreq_fu_90_p3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_fu_207_p2.read()))) {
        tmp_data_1_reg_313 = tx_localMemCmdFifo_V_dout.read().range(111, 16);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_76_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_reg_284 = rx_remoteMemCmd_V_dout.read().range(111, 16);
        tmp_dest_V_reg_279 = rx_remoteMemCmd_V_dout.read().range(112, 112);
        tmp_words_V_reg_289 = add_ln1371_fu_163_p2.read().range(32, 6);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_reg_284_pp0_iter1_reg = tmp_data_reg_284.read();
        tmp_dest_V_reg_279_pp0_iter1_reg = tmp_dest_V_reg_279.read();
        tmp_reg_275 = tmp_nbreadreq_fu_76_p3.read();
        tmp_reg_275_pp0_iter1_reg = tmp_reg_275.read();
        tmp_words_V_reg_289_pp0_iter1_reg = tmp_words_V_reg_289.read();
    }
}

void mem_cmd_merger_512_s::thread_add_ln1371_1_fu_250_p2() {
    add_ln1371_1_fu_250_p2 = (!zext_ln215_1_fu_247_p1.read().is_01() || !ap_const_lv33_3F.is_01())? sc_lv<33>(): (sc_biguint<33>(zext_ln215_1_fu_247_p1.read()) + sc_biguint<33>(ap_const_lv33_3F));
}

void mem_cmd_merger_512_s::thread_add_ln1371_2_fu_226_p2() {
    add_ln1371_2_fu_226_p2 = (!zext_ln215_2_fu_223_p1.read().is_01() || !ap_const_lv33_3F.is_01())? sc_lv<33>(): (sc_biguint<33>(zext_ln215_2_fu_223_p1.read()) + sc_biguint<33>(ap_const_lv33_3F));
}

void mem_cmd_merger_512_s::thread_add_ln1371_fu_163_p2() {
    add_ln1371_fu_163_p2 = (!zext_ln215_fu_159_p1.read().is_01() || !ap_const_lv33_3F.is_01())? sc_lv<33>(): (sc_biguint<33>(zext_ln215_fu_159_p1.read()) + sc_biguint<33>(ap_const_lv33_3F));
}

void mem_cmd_merger_512_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void mem_cmd_merger_512_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mem_cmd_merger_512_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_remoteMemCmd_V_empty_n.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_76_p3.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_0, tx_localMemCmdFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op28.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op33.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op36.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || ((esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
    esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void mem_cmd_merger_512_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_remoteMemCmd_V_empty_n.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_76_p3.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_0, tx_localMemCmdFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op28.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op33.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op36.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || ((esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
    esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void mem_cmd_merger_512_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_remoteMemCmd_V_empty_n.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_76_p3.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_0, tx_localMemCmdFifo_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op28.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op33.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op36.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || ((esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
    esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())));
}

void mem_cmd_merger_512_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, rx_remoteMemCmd_V_empty_n.read()) && 
  esl_seteq<1,1,1>(tmp_nbreadreq_fu_76_p3.read(), ap_const_lv1_1)) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void mem_cmd_merger_512_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, tx_localMemCmdFifo_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()));
}

void mem_cmd_merger_512_s::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_1_ack_in.read())));
}

void mem_cmd_merger_512_s::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = ((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op28.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op33.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op36.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read())));
}

void mem_cmd_merger_512_s::thread_ap_block_state4_io() {
    ap_block_state4_io = ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter2_reg.read())));
}

void mem_cmd_merger_512_s::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = (esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
  esl_seteq<1,2,2>(out_V_data_1_state.read(), ap_const_lv2_3)) || esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_mem_read_cmd_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read())));
}

void mem_cmd_merger_512_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void mem_cmd_merger_512_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void mem_cmd_merger_512_s::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void mem_cmd_merger_512_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_ap_idle_pp0_0to2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0_0to2 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to2 = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_ap_predicate_op16_read_state2() {
    ap_predicate_op16_read_state2 = (esl_seteq<1,1,1>(tmp_reg_275.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_nbreadreq_fu_90_p3.read()));
}

void mem_cmd_merger_512_s::thread_ap_predicate_op23_write_state3() {
    ap_predicate_op23_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_275_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_reg_294.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_309.read()));
}

void mem_cmd_merger_512_s::thread_ap_predicate_op28_write_state3() {
    ap_predicate_op28_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_275_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_reg_294.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_309.read()));
}

void mem_cmd_merger_512_s::thread_ap_predicate_op33_write_state3() {
    ap_predicate_op33_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_275_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_reg_294.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln883_reg_309.read()));
}

void mem_cmd_merger_512_s::thread_ap_predicate_op44_write_state4() {
    ap_predicate_op44_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_275_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_reg_294_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_309_pp0_iter2_reg.read()));
}

void mem_cmd_merger_512_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to2.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_icmp_ln883_fu_207_p2() {
    icmp_ln883_fu_207_p2 = (!tmp_data_addr_V_fu_179_p4.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_data_addr_V_fu_179_p4.read() == ap_const_lv64_0);
}

void mem_cmd_merger_512_s::thread_io_acc_block_signal_op28() {
    io_acc_block_signal_op28 = (tx_pkgInfoFifo_V_typ_full_n.read() & tx_pkgInfoFifo_V_sou_full_n.read() & tx_pkgInfoFifo_V_wor_full_n.read());
}

void mem_cmd_merger_512_s::thread_io_acc_block_signal_op33() {
    io_acc_block_signal_op33 = (tx_pkgInfoFifo_V_typ_full_n.read() & tx_pkgInfoFifo_V_sou_full_n.read() & tx_pkgInfoFifo_V_wor_full_n.read());
}

void mem_cmd_merger_512_s::thread_io_acc_block_signal_op36() {
    io_acc_block_signal_op36 = (tx_pkgInfoFifo_V_typ_full_n.read() & tx_pkgInfoFifo_V_sou_full_n.read() & tx_pkgInfoFifo_V_wor_full_n.read());
}

void mem_cmd_merger_512_s::thread_m_axis_mem_read_cmd_TDATA() {
    m_axis_mem_read_cmd_TDATA = out_V_data_1_data_out.read();
}

void mem_cmd_merger_512_s::thread_m_axis_mem_read_cmd_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        m_axis_mem_read_cmd_TDATA_blk_n = out_V_data_1_state.read()[1];
    } else {
        m_axis_mem_read_cmd_TDATA_blk_n = ap_const_logic_1;
    }
}

void mem_cmd_merger_512_s::thread_m_axis_mem_read_cmd_TDEST() {
    m_axis_mem_read_cmd_TDEST = out_V_dest_V_1_data_out.read();
}

void mem_cmd_merger_512_s::thread_m_axis_mem_read_cmd_TVALID() {
    m_axis_mem_read_cmd_TVALID = out_V_dest_V_1_state.read()[0];
}

void mem_cmd_merger_512_s::thread_out_V_data_1_ack_in() {
    out_V_data_1_ack_in = out_V_data_1_state.read()[1];
}

void mem_cmd_merger_512_s::thread_out_V_data_1_ack_out() {
    out_V_data_1_ack_out = m_axis_mem_read_cmd_TREADY.read();
}

void mem_cmd_merger_512_s::thread_out_V_data_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read())) {
            out_V_data_1_data_in = tmp_data_reg_284_pp0_iter1_reg.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_write_state3.read())) {
            out_V_data_1_data_in = tmp_data_1_reg_313.read();
        } else {
            out_V_data_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        out_V_data_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mem_cmd_merger_512_s::thread_out_V_data_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_1_sel.read())) {
        out_V_data_1_data_out = out_V_data_1_payload_B.read();
    } else {
        out_V_data_1_data_out = out_V_data_1_payload_A.read();
    }
}

void mem_cmd_merger_512_s::thread_out_V_data_1_load_A() {
    out_V_data_1_load_A = (out_V_data_1_state_cmp_full.read() & ~out_V_data_1_sel_wr.read());
}

void mem_cmd_merger_512_s::thread_out_V_data_1_load_B() {
    out_V_data_1_load_B = (out_V_data_1_sel_wr.read() & out_V_data_1_state_cmp_full.read());
}

void mem_cmd_merger_512_s::thread_out_V_data_1_sel() {
    out_V_data_1_sel = out_V_data_1_sel_rd.read();
}

void mem_cmd_merger_512_s::thread_out_V_data_1_state_cmp_full() {
    out_V_data_1_state_cmp_full =  (sc_logic) ((!out_V_data_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_data_1_state.read() != ap_const_lv2_1))[0];
}

void mem_cmd_merger_512_s::thread_out_V_data_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_data_1_vld_in = ap_const_logic_1;
    } else {
        out_V_data_1_vld_in = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_out_V_data_1_vld_out() {
    out_V_data_1_vld_out = out_V_data_1_state.read()[0];
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_ack_in() {
    out_V_dest_V_1_ack_in = out_V_dest_V_1_state.read()[1];
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_ack_out() {
    out_V_dest_V_1_ack_out = m_axis_mem_read_cmd_TREADY.read();
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read())) {
            out_V_dest_V_1_data_in = tmp_dest_V_reg_279_pp0_iter1_reg.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_write_state3.read())) {
            out_V_dest_V_1_data_in = tmp_dest_V_3_reg_304.read();
        } else {
            out_V_dest_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        out_V_dest_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_sel.read())) {
        out_V_dest_V_1_data_out = out_V_dest_V_1_payload_B.read();
    } else {
        out_V_dest_V_1_data_out = out_V_dest_V_1_payload_A.read();
    }
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_load_A() {
    out_V_dest_V_1_load_A = (out_V_dest_V_1_state_cmp_full.read() & ~out_V_dest_V_1_sel_wr.read());
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_load_B() {
    out_V_dest_V_1_load_B = (out_V_dest_V_1_sel_wr.read() & out_V_dest_V_1_state_cmp_full.read());
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_sel() {
    out_V_dest_V_1_sel = out_V_dest_V_1_sel_rd.read();
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_state_cmp_full() {
    out_V_dest_V_1_state_cmp_full =  (sc_logic) ((!out_V_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_out_V_dest_V_1_vld_out() {
    out_V_dest_V_1_vld_out = out_V_dest_V_1_state.read()[0];
}

void mem_cmd_merger_512_s::thread_rx_remoteMemCmd_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_76_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rx_remoteMemCmd_V_blk_n = rx_remoteMemCmd_V_empty_n.read();
    } else {
        rx_remoteMemCmd_V_blk_n = ap_const_logic_1;
    }
}

void mem_cmd_merger_512_s::thread_rx_remoteMemCmd_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_76_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        rx_remoteMemCmd_V_read = ap_const_logic_1;
    } else {
        rx_remoteMemCmd_V_read = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_tmp_67_nbreadreq_fu_90_p3() {
    tmp_67_nbreadreq_fu_90_p3 =  (sc_lv<1>) ((tx_localMemCmdFifo_V_empty_n.read()));
}

void mem_cmd_merger_512_s::thread_tmp_data_addr_V_fu_179_p4() {
    tmp_data_addr_V_fu_179_p4 = tx_localMemCmdFifo_V_dout.read().range(79, 16);
}

void mem_cmd_merger_512_s::thread_tmp_data_len_V_fu_131_p4() {
    tmp_data_len_V_fu_131_p4 = rx_remoteMemCmd_V_dout.read().range(111, 80);
}

void mem_cmd_merger_512_s::thread_tmp_nbreadreq_fu_76_p3() {
    tmp_nbreadreq_fu_76_p3 =  (sc_lv<1>) ((rx_remoteMemCmd_V_empty_n.read()));
}

void mem_cmd_merger_512_s::thread_tmp_words_V_1_fu_271_p1() {
    tmp_words_V_1_fu_271_p1 = esl_zext<29,27>(tmp_words_V_reg_289_pp0_iter1_reg.read());
}

void mem_cmd_merger_512_s::thread_tmp_words_V_2_fu_256_p4() {
    tmp_words_V_2_fu_256_p4 = add_ln1371_1_fu_250_p2.read().range(32, 6);
}

void mem_cmd_merger_512_s::thread_tmp_words_V_3_fu_266_p1() {
    tmp_words_V_3_fu_266_p1 = esl_zext<29,27>(tmp_words_V_2_fu_256_p4.read());
}

void mem_cmd_merger_512_s::thread_tmp_words_V_4_fu_232_p4() {
    tmp_words_V_4_fu_232_p4 = add_ln1371_2_fu_226_p2.read().range(32, 6);
}

void mem_cmd_merger_512_s::thread_tmp_words_V_5_fu_242_p1() {
    tmp_words_V_5_fu_242_p1 = esl_zext<29,27>(tmp_words_V_4_fu_232_p4.read());
}

void mem_cmd_merger_512_s::thread_tx_localMemCmdFifo_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tx_localMemCmdFifo_V_blk_n = tx_localMemCmdFifo_V_empty_n.read();
    } else {
        tx_localMemCmdFifo_V_blk_n = ap_const_logic_1;
    }
}

void mem_cmd_merger_512_s::thread_tx_localMemCmdFifo_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tx_localMemCmdFifo_V_read = ap_const_logic_1;
    } else {
        tx_localMemCmdFifo_V_read = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_sou_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_sou_blk_n = tx_pkgInfoFifo_V_sou_full_n.read();
    } else {
        tx_pkgInfoFifo_V_sou_blk_n = ap_const_logic_1;
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_sou_din() {
    if ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        tx_pkgInfoFifo_V_sou_din = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_sou_din = ap_const_lv1_0;
    } else {
        tx_pkgInfoFifo_V_sou_din =  (sc_lv<1>) ("X");
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_sou_write() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_sou_write = ap_const_logic_1;
    } else {
        tx_pkgInfoFifo_V_sou_write = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_typ_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_typ_blk_n = tx_pkgInfoFifo_V_typ_full_n.read();
    } else {
        tx_pkgInfoFifo_V_typ_blk_n = ap_const_logic_1;
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_typ_din() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        tx_pkgInfoFifo_V_typ_din = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_typ_din = ap_const_lv1_1;
    } else {
        tx_pkgInfoFifo_V_typ_din =  (sc_lv<1>) ("X");
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_typ_write() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_typ_write = ap_const_logic_1;
    } else {
        tx_pkgInfoFifo_V_typ_write = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_wor_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_wor_blk_n = tx_pkgInfoFifo_V_wor_full_n.read();
    } else {
        tx_pkgInfoFifo_V_wor_blk_n = ap_const_logic_1;
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_wor_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read())) {
            tx_pkgInfoFifo_V_wor_din = tmp_words_V_1_fu_271_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read())) {
            tx_pkgInfoFifo_V_wor_din = tmp_words_V_3_fu_266_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read())) {
            tx_pkgInfoFifo_V_wor_din = tmp_words_V_5_fu_242_p1.read();
        } else {
            tx_pkgInfoFifo_V_wor_din =  (sc_lv<29>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        tx_pkgInfoFifo_V_wor_din =  (sc_lv<29>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void mem_cmd_merger_512_s::thread_tx_pkgInfoFifo_V_wor_write() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_275_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tx_pkgInfoFifo_V_wor_write = ap_const_logic_1;
    } else {
        tx_pkgInfoFifo_V_wor_write = ap_const_logic_0;
    }
}

void mem_cmd_merger_512_s::thread_zext_ln215_1_fu_247_p1() {
    zext_ln215_1_fu_247_p1 = esl_zext<33,32>(tmp_data_len_V_5_reg_298.read());
}

void mem_cmd_merger_512_s::thread_zext_ln215_2_fu_223_p1() {
    zext_ln215_2_fu_223_p1 = esl_zext<33,32>(tmp_data_len_V_5_reg_298.read());
}

void mem_cmd_merger_512_s::thread_zext_ln215_fu_159_p1() {
    zext_ln215_fu_159_p1 = esl_zext<33,32>(tmp_data_len_V_fu_131_p4.read());
}

void mem_cmd_merger_512_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

