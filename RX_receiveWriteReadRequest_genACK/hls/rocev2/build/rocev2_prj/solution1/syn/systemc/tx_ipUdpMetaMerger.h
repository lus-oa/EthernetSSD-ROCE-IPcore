// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _tx_ipUdpMetaMerger_HH_
#define _tx_ipUdpMetaMerger_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct tx_ipUdpMetaMerger : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<168> > tx_connTable2ibh_rsp_1_dout;
    sc_in< sc_logic > tx_connTable2ibh_rsp_1_empty_n;
    sc_out< sc_logic > tx_connTable2ibh_rsp_1_read;
    sc_in< sc_lv<16> > tx_lengthFifo_V_V_dout;
    sc_in< sc_logic > tx_lengthFifo_V_V_empty_n;
    sc_out< sc_logic > tx_lengthFifo_V_V_read;
    sc_out< sc_lv<128> > tx_ipUdpMetaFifo_V_t_1_din;
    sc_in< sc_logic > tx_ipUdpMetaFifo_V_t_1_full_n;
    sc_out< sc_logic > tx_ipUdpMetaFifo_V_t_1_write;
    sc_out< sc_lv<16> > tx_ipUdpMetaFifo_V_t_din;
    sc_in< sc_logic > tx_ipUdpMetaFifo_V_t_full_n;
    sc_out< sc_logic > tx_ipUdpMetaFifo_V_t_write;
    sc_out< sc_lv<16> > tx_ipUdpMetaFifo_V_m_din;
    sc_in< sc_logic > tx_ipUdpMetaFifo_V_m_full_n;
    sc_out< sc_logic > tx_ipUdpMetaFifo_V_m_write;
    sc_out< sc_lv<16> > tx_ipUdpMetaFifo_V_l_din;
    sc_in< sc_logic > tx_ipUdpMetaFifo_V_l_full_n;
    sc_out< sc_logic > tx_ipUdpMetaFifo_V_l_write;
    sc_out< sc_lv<24> > tx_dstQpFifo_V_V_din;
    sc_in< sc_logic > tx_dstQpFifo_V_V_full_n;
    sc_out< sc_logic > tx_dstQpFifo_V_V_write;


    // Module declarations
    tx_ipUdpMetaMerger(sc_module_name name);
    SC_HAS_PROCESS(tx_ipUdpMetaMerger);

    ~tx_ipUdpMetaMerger();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_58_p3;
    sc_signal< sc_lv<1> > tmp_7_nbreadreq_fu_66_p3;
    sc_signal< bool > ap_predicate_op7_read_state1;
    sc_signal< bool > ap_predicate_op11_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op20;
    sc_signal< sc_lv<1> > tmp_reg_134;
    sc_signal< sc_lv<1> > tmp_7_reg_138;
    sc_signal< bool > ap_predicate_op20_write_state2;
    sc_signal< bool > ap_predicate_op21_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_logic > tx_connTable2ibh_rsp_1_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > tx_lengthFifo_V_V_blk_n;
    sc_signal< sc_logic > tx_ipUdpMetaFifo_V_t_1_blk_n;
    sc_signal< sc_logic > tx_ipUdpMetaFifo_V_t_blk_n;
    sc_signal< sc_logic > tx_ipUdpMetaFifo_V_m_blk_n;
    sc_signal< sc_logic > tx_ipUdpMetaFifo_V_l_blk_n;
    sc_signal< sc_logic > tx_dstQpFifo_V_V_blk_n;
    sc_signal< sc_lv<24> > tmp_V_fu_110_p1;
    sc_signal< sc_lv<24> > tmp_V_reg_142;
    sc_signal< sc_lv<128> > tmp_their_address_V_reg_147;
    sc_signal< sc_lv<16> > tmp_their_port_V_reg_152;
    sc_signal< sc_lv<16> > tmp_V_1_reg_157;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<16> ap_const_lv16_12B7;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_97;
    static const sc_lv<32> ap_const_lv32_98;
    static const sc_lv<32> ap_const_lv32_A7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_predicate_op11_read_state1();
    void thread_ap_predicate_op20_write_state2();
    void thread_ap_predicate_op21_write_state2();
    void thread_ap_predicate_op7_read_state1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_io_acc_block_signal_op20();
    void thread_tmp_7_nbreadreq_fu_66_p3();
    void thread_tmp_V_fu_110_p1();
    void thread_tmp_nbreadreq_fu_58_p3();
    void thread_tx_connTable2ibh_rsp_1_blk_n();
    void thread_tx_connTable2ibh_rsp_1_read();
    void thread_tx_dstQpFifo_V_V_blk_n();
    void thread_tx_dstQpFifo_V_V_din();
    void thread_tx_dstQpFifo_V_V_write();
    void thread_tx_ipUdpMetaFifo_V_l_blk_n();
    void thread_tx_ipUdpMetaFifo_V_l_din();
    void thread_tx_ipUdpMetaFifo_V_l_write();
    void thread_tx_ipUdpMetaFifo_V_m_blk_n();
    void thread_tx_ipUdpMetaFifo_V_m_din();
    void thread_tx_ipUdpMetaFifo_V_m_write();
    void thread_tx_ipUdpMetaFifo_V_t_1_blk_n();
    void thread_tx_ipUdpMetaFifo_V_t_1_din();
    void thread_tx_ipUdpMetaFifo_V_t_1_write();
    void thread_tx_ipUdpMetaFifo_V_t_blk_n();
    void thread_tx_ipUdpMetaFifo_V_t_din();
    void thread_tx_ipUdpMetaFifo_V_t_write();
    void thread_tx_lengthFifo_V_V_blk_n();
    void thread_tx_lengthFifo_V_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
