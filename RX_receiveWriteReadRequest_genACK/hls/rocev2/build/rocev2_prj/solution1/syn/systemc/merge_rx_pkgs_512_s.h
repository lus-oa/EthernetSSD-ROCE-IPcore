// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _merge_rx_pkgs_512_s_HH_
#define _merge_rx_pkgs_512_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct merge_rx_pkgs_512_s : public sc_module {
    // Port declarations 49
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > rx_exhNoShiftFifo_V_1_dout;
    sc_in< sc_logic > rx_exhNoShiftFifo_V_1_empty_n;
    sc_out< sc_logic > rx_exhNoShiftFifo_V_1_read;
    sc_in< sc_lv<64> > rx_exhNoShiftFifo_V_4_dout;
    sc_in< sc_logic > rx_exhNoShiftFifo_V_4_empty_n;
    sc_out< sc_logic > rx_exhNoShiftFifo_V_4_read;
    sc_in< sc_lv<1> > rx_exhNoShiftFifo_V_s_dout;
    sc_in< sc_logic > rx_exhNoShiftFifo_V_s_empty_n;
    sc_out< sc_logic > rx_exhNoShiftFifo_V_s_read;
    sc_in< sc_lv<1> > rx_exhNoShiftFifo_V_3_dout;
    sc_in< sc_logic > rx_exhNoShiftFifo_V_3_empty_n;
    sc_out< sc_logic > rx_exhNoShiftFifo_V_3_read;
    sc_in< sc_lv<512> > rx_rethSift2mergerFi_8_dout;
    sc_in< sc_logic > rx_rethSift2mergerFi_8_empty_n;
    sc_out< sc_logic > rx_rethSift2mergerFi_8_read;
    sc_in< sc_lv<64> > rx_rethSift2mergerFi_6_dout;
    sc_in< sc_logic > rx_rethSift2mergerFi_6_empty_n;
    sc_out< sc_logic > rx_rethSift2mergerFi_6_read;
    sc_in< sc_lv<1> > rx_rethSift2mergerFi_7_dout;
    sc_in< sc_logic > rx_rethSift2mergerFi_7_empty_n;
    sc_out< sc_logic > rx_rethSift2mergerFi_7_read;
    sc_in< sc_lv<1> > rx_rethSift2mergerFi_4_dout;
    sc_in< sc_logic > rx_rethSift2mergerFi_4_empty_n;
    sc_out< sc_logic > rx_rethSift2mergerFi_4_read;
    sc_in< sc_lv<512> > rx_aethSift2mergerFi_3_dout;
    sc_in< sc_logic > rx_aethSift2mergerFi_3_empty_n;
    sc_out< sc_logic > rx_aethSift2mergerFi_3_read;
    sc_in< sc_lv<64> > rx_aethSift2mergerFi_5_dout;
    sc_in< sc_logic > rx_aethSift2mergerFi_5_empty_n;
    sc_out< sc_logic > rx_aethSift2mergerFi_5_read;
    sc_in< sc_lv<1> > rx_aethSift2mergerFi_6_dout;
    sc_in< sc_logic > rx_aethSift2mergerFi_6_empty_n;
    sc_out< sc_logic > rx_aethSift2mergerFi_6_read;
    sc_in< sc_lv<2> > rx_pkgShiftTypeFifo_s_8_dout;
    sc_in< sc_logic > rx_pkgShiftTypeFifo_s_8_empty_n;
    sc_out< sc_logic > rx_pkgShiftTypeFifo_s_8_read;
    sc_in< sc_logic > m_axis_mem_write_data_TREADY;
    sc_out< sc_lv<512> > m_axis_mem_write_data_TDATA;
    sc_out< sc_logic > m_axis_mem_write_data_TVALID;
    sc_out< sc_lv<64> > m_axis_mem_write_data_TKEEP;
    sc_out< sc_lv<1> > m_axis_mem_write_data_TLAST;
    sc_out< sc_lv<1> > m_axis_mem_write_data_TDEST;


    // Module declarations
    merge_rx_pkgs_512_s(sc_module_name name);
    SC_HAS_PROCESS(merge_rx_pkgs_512_s);

    ~merge_rx_pkgs_512_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > io_acc_block_signal_op8;
    sc_signal< sc_lv<1> > tmp_61_nbreadreq_fu_82_p6;
    sc_signal< bool > ap_predicate_op8_read_state1;
    sc_signal< sc_logic > io_acc_block_signal_op16;
    sc_signal< sc_lv<1> > tmp_60_nbreadreq_fu_108_p6;
    sc_signal< bool > ap_predicate_op16_read_state1;
    sc_signal< sc_logic > io_acc_block_signal_op24;
    sc_signal< sc_lv<1> > tmp_59_nbreadreq_fu_134_p5;
    sc_signal< bool > ap_predicate_op24_read_state1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_156_p3;
    sc_signal< bool > ap_predicate_op31_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_ack_in;
    sc_signal< sc_lv<2> > state_3_load_reg_281;
    sc_signal< sc_lv<1> > tmp_61_reg_285;
    sc_signal< bool > ap_predicate_op38_write_state2;
    sc_signal< sc_lv<1> > tmp_60_reg_309;
    sc_signal< bool > ap_predicate_op40_write_state2;
    sc_signal< sc_lv<1> > tmp_59_reg_333;
    sc_signal< bool > ap_predicate_op42_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_ack_out;
    sc_signal< sc_lv<2> > m_axis_mem_write_data_V_data_V_1_state;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_ack_out;
    sc_signal< sc_lv<2> > m_axis_mem_write_data_V_keep_V_1_state;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_ack_out;
    sc_signal< sc_lv<2> > m_axis_mem_write_data_V_last_V_1_state;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_ack_out;
    sc_signal< sc_lv<2> > m_axis_mem_write_data_V_dest_V_1_state;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<2> > state_3_load_reg_281_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_61_reg_285_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op58_write_state3;
    sc_signal< sc_lv<1> > tmp_60_reg_309_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op62_write_state3;
    sc_signal< sc_lv<1> > tmp_59_reg_333_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op66_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<512> > m_axis_mem_write_data_V_data_V_1_data_in;
    sc_signal< sc_lv<512> > m_axis_mem_write_data_V_data_V_1_data_out;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_vld_in;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_vld_out;
    sc_signal< sc_lv<512> > m_axis_mem_write_data_V_data_V_1_payload_A;
    sc_signal< sc_lv<512> > m_axis_mem_write_data_V_data_V_1_payload_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_sel;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_load_A;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_load_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<64> > m_axis_mem_write_data_V_keep_V_1_data_in;
    sc_signal< sc_lv<64> > m_axis_mem_write_data_V_keep_V_1_data_out;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_vld_in;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_vld_out;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_ack_in;
    sc_signal< sc_lv<64> > m_axis_mem_write_data_V_keep_V_1_payload_A;
    sc_signal< sc_lv<64> > m_axis_mem_write_data_V_keep_V_1_payload_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_sel;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_load_A;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_load_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_last_V_1_data_out;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_vld_in;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_vld_out;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_ack_in;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_last_V_1_payload_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_sel;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_load_A;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_load_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_dest_V_1_data_in;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_dest_V_1_data_out;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_vld_in;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_vld_out;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_ack_in;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_dest_V_1_payload_A;
    sc_signal< sc_lv<1> > m_axis_mem_write_data_V_dest_V_1_payload_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_sel;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_load_A;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_load_B;
    sc_signal< sc_logic > m_axis_mem_write_data_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > state_3;
    sc_signal< sc_logic > m_axis_mem_write_data_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > rx_pkgShiftTypeFifo_s_8_blk_n;
    sc_signal< sc_logic > rx_aethSift2mergerFi_3_blk_n;
    sc_signal< sc_logic > rx_aethSift2mergerFi_5_blk_n;
    sc_signal< sc_logic > rx_aethSift2mergerFi_6_blk_n;
    sc_signal< sc_logic > rx_rethSift2mergerFi_8_blk_n;
    sc_signal< sc_logic > rx_rethSift2mergerFi_6_blk_n;
    sc_signal< sc_logic > rx_rethSift2mergerFi_7_blk_n;
    sc_signal< sc_logic > rx_rethSift2mergerFi_4_blk_n;
    sc_signal< sc_logic > rx_exhNoShiftFifo_V_1_blk_n;
    sc_signal< sc_logic > rx_exhNoShiftFifo_V_4_blk_n;
    sc_signal< sc_logic > rx_exhNoShiftFifo_V_s_blk_n;
    sc_signal< sc_logic > rx_exhNoShiftFifo_V_3_blk_n;
    sc_signal< sc_lv<512> > tmp_data_V_30_reg_289;
    sc_signal< sc_lv<64> > tmp_keep_V_29_reg_294;
    sc_signal< sc_lv<1> > tmp_last_V_25_fu_205_p1;
    sc_signal< sc_lv<1> > tmp_last_V_25_reg_299;
    sc_signal< sc_lv<1> > tmp_dest_V_2_reg_304;
    sc_signal< sc_lv<512> > tmp_data_V_29_reg_313;
    sc_signal< sc_lv<64> > tmp_keep_V_28_reg_318;
    sc_signal< sc_lv<1> > tmp_last_V_24_fu_221_p1;
    sc_signal< sc_lv<1> > tmp_last_V_24_reg_323;
    sc_signal< sc_lv<1> > tmp_dest_V_reg_328;
    sc_signal< sc_lv<512> > tmp_data_V_reg_337;
    sc_signal< sc_lv<64> > tmp_keep_V_reg_342;
    sc_signal< sc_lv<1> > tmp_last_V_fu_237_p1;
    sc_signal< sc_lv<1> > tmp_last_V_reg_347;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<2> > select_ln2346_1_fu_267_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > icmp_ln2346_fu_241_p2;
    sc_signal< sc_lv<1> > icmp_ln2350_fu_247_p2;
    sc_signal< sc_lv<1> > or_ln2346_fu_261_p2;
    sc_signal< sc_lv<2> > select_ln2346_fu_253_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_591;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_591();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_predicate_op16_read_state1();
    void thread_ap_predicate_op24_read_state1();
    void thread_ap_predicate_op31_read_state1();
    void thread_ap_predicate_op38_write_state2();
    void thread_ap_predicate_op40_write_state2();
    void thread_ap_predicate_op42_write_state2();
    void thread_ap_predicate_op58_write_state3();
    void thread_ap_predicate_op62_write_state3();
    void thread_ap_predicate_op66_write_state3();
    void thread_ap_predicate_op8_read_state1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_icmp_ln2346_fu_241_p2();
    void thread_icmp_ln2350_fu_247_p2();
    void thread_io_acc_block_signal_op16();
    void thread_io_acc_block_signal_op24();
    void thread_io_acc_block_signal_op8();
    void thread_m_axis_mem_write_data_TDATA();
    void thread_m_axis_mem_write_data_TDATA_blk_n();
    void thread_m_axis_mem_write_data_TDEST();
    void thread_m_axis_mem_write_data_TKEEP();
    void thread_m_axis_mem_write_data_TLAST();
    void thread_m_axis_mem_write_data_TVALID();
    void thread_m_axis_mem_write_data_V_data_V_1_ack_in();
    void thread_m_axis_mem_write_data_V_data_V_1_ack_out();
    void thread_m_axis_mem_write_data_V_data_V_1_data_in();
    void thread_m_axis_mem_write_data_V_data_V_1_data_out();
    void thread_m_axis_mem_write_data_V_data_V_1_load_A();
    void thread_m_axis_mem_write_data_V_data_V_1_load_B();
    void thread_m_axis_mem_write_data_V_data_V_1_sel();
    void thread_m_axis_mem_write_data_V_data_V_1_state_cmp_full();
    void thread_m_axis_mem_write_data_V_data_V_1_vld_in();
    void thread_m_axis_mem_write_data_V_data_V_1_vld_out();
    void thread_m_axis_mem_write_data_V_dest_V_1_ack_in();
    void thread_m_axis_mem_write_data_V_dest_V_1_ack_out();
    void thread_m_axis_mem_write_data_V_dest_V_1_data_in();
    void thread_m_axis_mem_write_data_V_dest_V_1_data_out();
    void thread_m_axis_mem_write_data_V_dest_V_1_load_A();
    void thread_m_axis_mem_write_data_V_dest_V_1_load_B();
    void thread_m_axis_mem_write_data_V_dest_V_1_sel();
    void thread_m_axis_mem_write_data_V_dest_V_1_state_cmp_full();
    void thread_m_axis_mem_write_data_V_dest_V_1_vld_in();
    void thread_m_axis_mem_write_data_V_dest_V_1_vld_out();
    void thread_m_axis_mem_write_data_V_keep_V_1_ack_in();
    void thread_m_axis_mem_write_data_V_keep_V_1_ack_out();
    void thread_m_axis_mem_write_data_V_keep_V_1_data_in();
    void thread_m_axis_mem_write_data_V_keep_V_1_data_out();
    void thread_m_axis_mem_write_data_V_keep_V_1_load_A();
    void thread_m_axis_mem_write_data_V_keep_V_1_load_B();
    void thread_m_axis_mem_write_data_V_keep_V_1_sel();
    void thread_m_axis_mem_write_data_V_keep_V_1_state_cmp_full();
    void thread_m_axis_mem_write_data_V_keep_V_1_vld_in();
    void thread_m_axis_mem_write_data_V_keep_V_1_vld_out();
    void thread_m_axis_mem_write_data_V_last_V_1_ack_in();
    void thread_m_axis_mem_write_data_V_last_V_1_ack_out();
    void thread_m_axis_mem_write_data_V_last_V_1_data_in();
    void thread_m_axis_mem_write_data_V_last_V_1_data_out();
    void thread_m_axis_mem_write_data_V_last_V_1_load_A();
    void thread_m_axis_mem_write_data_V_last_V_1_load_B();
    void thread_m_axis_mem_write_data_V_last_V_1_sel();
    void thread_m_axis_mem_write_data_V_last_V_1_state_cmp_full();
    void thread_m_axis_mem_write_data_V_last_V_1_vld_in();
    void thread_m_axis_mem_write_data_V_last_V_1_vld_out();
    void thread_or_ln2346_fu_261_p2();
    void thread_rx_aethSift2mergerFi_3_blk_n();
    void thread_rx_aethSift2mergerFi_3_read();
    void thread_rx_aethSift2mergerFi_5_blk_n();
    void thread_rx_aethSift2mergerFi_5_read();
    void thread_rx_aethSift2mergerFi_6_blk_n();
    void thread_rx_aethSift2mergerFi_6_read();
    void thread_rx_exhNoShiftFifo_V_1_blk_n();
    void thread_rx_exhNoShiftFifo_V_1_read();
    void thread_rx_exhNoShiftFifo_V_3_blk_n();
    void thread_rx_exhNoShiftFifo_V_3_read();
    void thread_rx_exhNoShiftFifo_V_4_blk_n();
    void thread_rx_exhNoShiftFifo_V_4_read();
    void thread_rx_exhNoShiftFifo_V_s_blk_n();
    void thread_rx_exhNoShiftFifo_V_s_read();
    void thread_rx_pkgShiftTypeFifo_s_8_blk_n();
    void thread_rx_pkgShiftTypeFifo_s_8_read();
    void thread_rx_rethSift2mergerFi_4_blk_n();
    void thread_rx_rethSift2mergerFi_4_read();
    void thread_rx_rethSift2mergerFi_6_blk_n();
    void thread_rx_rethSift2mergerFi_6_read();
    void thread_rx_rethSift2mergerFi_7_blk_n();
    void thread_rx_rethSift2mergerFi_7_read();
    void thread_rx_rethSift2mergerFi_8_blk_n();
    void thread_rx_rethSift2mergerFi_8_read();
    void thread_select_ln2346_1_fu_267_p3();
    void thread_select_ln2346_fu_253_p3();
    void thread_tmp_59_nbreadreq_fu_134_p5();
    void thread_tmp_60_nbreadreq_fu_108_p6();
    void thread_tmp_61_nbreadreq_fu_82_p6();
    void thread_tmp_last_V_24_fu_221_p1();
    void thread_tmp_last_V_25_fu_205_p1();
    void thread_tmp_last_V_fu_237_p1();
    void thread_tmp_nbreadreq_fu_156_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
