// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mq_pointer_table.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mq_pointer_table::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mq_pointer_table::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> mq_pointer_table::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> mq_pointer_table::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool mq_pointer_table::ap_const_boolean_1 = true;
const sc_lv<1> mq_pointer_table::ap_const_lv1_1 = "1";
const sc_lv<1> mq_pointer_table::ap_const_lv1_0 = "0";
const bool mq_pointer_table::ap_const_boolean_0 = false;

mq_pointer_table::mq_pointer_table(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ptr_table_head_V_U = new conn_table_conn_table_remote_ud("ptr_table_head_V_U");
    ptr_table_head_V_U->clk(ap_clk);
    ptr_table_head_V_U->reset(ap_rst);
    ptr_table_head_V_U->address0(ptr_table_head_V_address0);
    ptr_table_head_V_U->ce0(ptr_table_head_V_ce0);
    ptr_table_head_V_U->we0(ptr_table_head_V_we0);
    ptr_table_head_V_U->d0(tmp_entry_head_V_reg_354);
    ptr_table_head_V_U->q0(ptr_table_head_V_q0);
    ptr_table_tail_V_U = new conn_table_conn_table_remote_ud("ptr_table_tail_V_U");
    ptr_table_tail_V_U->clk(ap_clk);
    ptr_table_tail_V_U->reset(ap_rst);
    ptr_table_tail_V_U->address0(ptr_table_tail_V_address0);
    ptr_table_tail_V_U->ce0(ptr_table_tail_V_ce0);
    ptr_table_tail_V_U->we0(ptr_table_tail_V_we0);
    ptr_table_tail_V_U->d0(tmp_entry_tail_V_reg_359);
    ptr_table_tail_V_U->q0(ptr_table_tail_V_q0);
    ptr_table_valid_U = new mq_pointer_table_ptr_table_valid("ptr_table_valid_U");
    ptr_table_valid_U->clk(ap_clk);
    ptr_table_valid_U->reset(ap_rst);
    ptr_table_valid_U->address0(ptr_table_valid_address0);
    ptr_table_valid_U->ce0(ptr_table_valid_ce0);
    ptr_table_valid_U->we0(ptr_table_valid_we0);
    ptr_table_valid_U->d0(tmp_entry_valid_reg_364);
    ptr_table_valid_U->q0(ptr_table_valid_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln149_fu_283_p2);
    sensitive << ( mq_pointerReqFifo_V_s_dout );
    sensitive << ( mq_isLocked );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( io_acc_block_signal_op6 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( io_acc_block_signal_op19 );
    sensitive << ( ap_predicate_op19_read_state2 );
    sensitive << ( io_acc_block_signal_op72 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( io_acc_block_signal_op80 );
    sensitive << ( ap_predicate_op80_write_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( io_acc_block_signal_op6 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( io_acc_block_signal_op19 );
    sensitive << ( ap_predicate_op19_read_state2 );
    sensitive << ( io_acc_block_signal_op72 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( io_acc_block_signal_op80 );
    sensitive << ( ap_predicate_op80_write_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( io_acc_block_signal_op6 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( io_acc_block_signal_op19 );
    sensitive << ( ap_predicate_op19_read_state2 );
    sensitive << ( io_acc_block_signal_op72 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( io_acc_block_signal_op80 );
    sensitive << ( ap_predicate_op80_write_state3 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op6 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( io_acc_block_signal_op19 );
    sensitive << ( ap_predicate_op19_read_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( io_acc_block_signal_op72 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( io_acc_block_signal_op80 );
    sensitive << ( ap_predicate_op80_write_state3 );

    SC_METHOD(thread_ap_condition_185);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_216);
    sensitive << ( tmp_reg_344 );
    sensitive << ( or_ln146_fu_263_p2 );
    sensitive << ( and_ln149_fu_283_p2 );

    SC_METHOD(thread_ap_condition_229);
    sensitive << ( tmp_reg_344 );
    sensitive << ( or_ln146_fu_263_p2 );
    sensitive << ( mq_isLocked_load_load_fu_245_p1 );
    sensitive << ( mq_wait_load_load_fu_249_p1 );

    SC_METHOD(thread_ap_condition_369);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_371);
    sensitive << ( or_ln146_fu_263_p2 );
    sensitive << ( tmp_lock_fu_273_p1 );
    sensitive << ( and_ln149_fu_283_p2 );

    SC_METHOD(thread_ap_condition_375);
    sensitive << ( or_ln146_fu_263_p2 );
    sensitive << ( mq_isLocked_load_load_fu_245_p1 );
    sensitive << ( mq_wait_load_load_fu_249_p1 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp0_0to1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_predicate_op19_read_state2);
    sensitive << ( tmp_reg_344 );
    sensitive << ( or_ln146_fu_263_p2 );

    SC_METHOD(thread_ap_predicate_op72_write_state3);
    sensitive << ( tmp_reg_344_pp0_iter1_reg );
    sensitive << ( or_ln146_reg_377 );
    sensitive << ( and_ln149_reg_385 );

    SC_METHOD(thread_ap_predicate_op80_write_state3);
    sensitive << ( tmp_reg_344_pp0_iter1_reg );
    sensitive << ( or_ln146_reg_377 );
    sensitive << ( mq_wait_load_reg_373 );
    sensitive << ( mq_isLocked_load_reg_369 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to1 );

    SC_METHOD(thread_icmp_ln879_fu_333_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( mq_lockedKey_V );
    sensitive << ( tmp_key_V_reg_348 );

    SC_METHOD(thread_io_acc_block_signal_op19);
    sensitive << ( mq_pointerReqFifo_V_1_empty_n );
    sensitive << ( mq_pointerReqFifo_V_s_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op6);
    sensitive << ( mq_pointerUpdFifo_V_s_empty_n );
    sensitive << ( mq_pointerUpdFifo_V_1_empty_n );
    sensitive << ( mq_pointerUpdFifo_V_3_empty_n );
    sensitive << ( mq_pointerUpdFifo_V_4_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op72);
    sensitive << ( mq_pointerRspFifo_V_1_full_n );
    sensitive << ( mq_pointerRspFifo_V_2_full_n );
    sensitive << ( mq_pointerRspFifo_V_s_full_n );

    SC_METHOD(thread_io_acc_block_signal_op80);
    sensitive << ( mq_pointerRspFifo_V_1_full_n );
    sensitive << ( mq_pointerRspFifo_V_2_full_n );
    sensitive << ( mq_pointerRspFifo_V_s_full_n );

    SC_METHOD(thread_mq_isLocked_load_load_fu_245_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( mq_isLocked );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerReqFifo_V_1_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( mq_pointerReqFifo_V_1_empty_n );
    sensitive << ( ap_predicate_op19_read_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerReqFifo_V_1_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op19_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerReqFifo_V_s_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( mq_pointerReqFifo_V_s_empty_n );
    sensitive << ( ap_predicate_op19_read_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerReqFifo_V_s_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op19_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerRspFifo_V_1_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mq_pointerRspFifo_V_1_full_n );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerRspFifo_V_1_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ptr_table_head_V_q0 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_mq_pointerRspFifo_V_1_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerRspFifo_V_2_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mq_pointerRspFifo_V_2_full_n );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerRspFifo_V_2_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ptr_table_tail_V_q0 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_mq_pointerRspFifo_V_2_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerRspFifo_V_s_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mq_pointerRspFifo_V_s_full_n );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerRspFifo_V_s_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ptr_table_valid_q0 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_mq_pointerRspFifo_V_s_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op72_write_state3 );
    sensitive << ( ap_predicate_op80_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_1_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( mq_pointerUpdFifo_V_1_empty_n );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_1_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_3_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( mq_pointerUpdFifo_V_3_empty_n );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_3_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_4_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( mq_pointerUpdFifo_V_4_empty_n );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_4_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_s_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( mq_pointerUpdFifo_V_s_empty_n );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mq_pointerUpdFifo_V_s_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_72_p6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mq_wait_load_load_fu_249_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( mq_wait );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_or_ln146_fu_263_p2);
    sensitive << ( mq_wait );
    sensitive << ( xor_ln146_fu_257_p2 );

    SC_METHOD(thread_ptr_table_head_V_address0);
    sensitive << ( tmp_reg_344 );
    sensitive << ( zext_ln544_6_fu_289_p1 );
    sensitive << ( zext_ln544_7_fu_308_p1 );
    sensitive << ( zext_ln544_fu_327_p1 );
    sensitive << ( ap_condition_216 );
    sensitive << ( ap_condition_229 );
    sensitive << ( ap_condition_185 );

    SC_METHOD(thread_ptr_table_head_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( or_ln146_fu_263_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( mq_isLocked_load_load_fu_245_p1 );
    sensitive << ( mq_wait_load_load_fu_249_p1 );
    sensitive << ( and_ln149_fu_283_p2 );

    SC_METHOD(thread_ptr_table_head_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ptr_table_tail_V_address0);
    sensitive << ( tmp_reg_344 );
    sensitive << ( zext_ln544_6_fu_289_p1 );
    sensitive << ( zext_ln544_7_fu_308_p1 );
    sensitive << ( zext_ln544_fu_327_p1 );
    sensitive << ( ap_condition_216 );
    sensitive << ( ap_condition_229 );
    sensitive << ( ap_condition_185 );

    SC_METHOD(thread_ptr_table_tail_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( or_ln146_fu_263_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( mq_isLocked_load_load_fu_245_p1 );
    sensitive << ( mq_wait_load_load_fu_249_p1 );
    sensitive << ( and_ln149_fu_283_p2 );

    SC_METHOD(thread_ptr_table_tail_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ptr_table_valid_address0);
    sensitive << ( tmp_reg_344 );
    sensitive << ( zext_ln544_6_fu_289_p1 );
    sensitive << ( zext_ln544_7_fu_308_p1 );
    sensitive << ( zext_ln544_fu_327_p1 );
    sensitive << ( ap_condition_216 );
    sensitive << ( ap_condition_229 );
    sensitive << ( ap_condition_185 );

    SC_METHOD(thread_ptr_table_valid_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( or_ln146_fu_263_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( mq_isLocked_load_load_fu_245_p1 );
    sensitive << ( mq_wait_load_load_fu_249_p1 );
    sensitive << ( and_ln149_fu_283_p2 );

    SC_METHOD(thread_ptr_table_valid_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_344 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_52_nbreadreq_fu_98_p4);
    sensitive << ( mq_pointerReqFifo_V_1_empty_n );
    sensitive << ( mq_pointerReqFifo_V_s_empty_n );

    SC_METHOD(thread_tmp_lock_fu_273_p1);
    sensitive << ( mq_pointerReqFifo_V_s_dout );

    SC_METHOD(thread_tmp_nbreadreq_fu_72_p6);
    sensitive << ( mq_pointerUpdFifo_V_s_empty_n );
    sensitive << ( mq_pointerUpdFifo_V_1_empty_n );
    sensitive << ( mq_pointerUpdFifo_V_3_empty_n );
    sensitive << ( mq_pointerUpdFifo_V_4_empty_n );

    SC_METHOD(thread_xor_ln146_fu_257_p2);
    sensitive << ( tmp_52_nbreadreq_fu_98_p4 );

    SC_METHOD(thread_zext_ln544_6_fu_289_p1);
    sensitive << ( mq_pointerReqFifo_V_1_dout );

    SC_METHOD(thread_zext_ln544_7_fu_308_p1);
    sensitive << ( mq_request_key_V );

    SC_METHOD(thread_zext_ln544_fu_327_p1);
    sensitive << ( tmp_key_V_reg_348 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    mq_lockedKey_V = "0000000000000000";
    mq_isLocked = "0";
    mq_wait = "0";
    mq_request_key_V = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mq_pointer_table_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_s_dout, "(port)mq_pointerUpdFifo_V_s_dout");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_s_empty_n, "(port)mq_pointerUpdFifo_V_s_empty_n");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_s_read, "(port)mq_pointerUpdFifo_V_s_read");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_1_dout, "(port)mq_pointerUpdFifo_V_1_dout");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_1_empty_n, "(port)mq_pointerUpdFifo_V_1_empty_n");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_1_read, "(port)mq_pointerUpdFifo_V_1_read");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_3_dout, "(port)mq_pointerUpdFifo_V_3_dout");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_3_empty_n, "(port)mq_pointerUpdFifo_V_3_empty_n");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_3_read, "(port)mq_pointerUpdFifo_V_3_read");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_4_dout, "(port)mq_pointerUpdFifo_V_4_dout");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_4_empty_n, "(port)mq_pointerUpdFifo_V_4_empty_n");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_4_read, "(port)mq_pointerUpdFifo_V_4_read");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_1_dout, "(port)mq_pointerReqFifo_V_1_dout");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_1_empty_n, "(port)mq_pointerReqFifo_V_1_empty_n");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_1_read, "(port)mq_pointerReqFifo_V_1_read");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_s_dout, "(port)mq_pointerReqFifo_V_s_dout");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_s_empty_n, "(port)mq_pointerReqFifo_V_s_empty_n");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_s_read, "(port)mq_pointerReqFifo_V_s_read");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_1_din, "(port)mq_pointerRspFifo_V_1_din");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_1_full_n, "(port)mq_pointerRspFifo_V_1_full_n");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_1_write, "(port)mq_pointerRspFifo_V_1_write");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_2_din, "(port)mq_pointerRspFifo_V_2_din");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_2_full_n, "(port)mq_pointerRspFifo_V_2_full_n");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_2_write, "(port)mq_pointerRspFifo_V_2_write");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_s_din, "(port)mq_pointerRspFifo_V_s_din");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_s_full_n, "(port)mq_pointerRspFifo_V_s_full_n");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_s_write, "(port)mq_pointerRspFifo_V_s_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, io_acc_block_signal_op6, "io_acc_block_signal_op6");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_72_p6, "tmp_nbreadreq_fu_72_p6");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, io_acc_block_signal_op19, "io_acc_block_signal_op19");
    sc_trace(mVcdFile, tmp_reg_344, "tmp_reg_344");
    sc_trace(mVcdFile, or_ln146_fu_263_p2, "or_ln146_fu_263_p2");
    sc_trace(mVcdFile, ap_predicate_op19_read_state2, "ap_predicate_op19_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, io_acc_block_signal_op72, "io_acc_block_signal_op72");
    sc_trace(mVcdFile, tmp_reg_344_pp0_iter1_reg, "tmp_reg_344_pp0_iter1_reg");
    sc_trace(mVcdFile, or_ln146_reg_377, "or_ln146_reg_377");
    sc_trace(mVcdFile, and_ln149_reg_385, "and_ln149_reg_385");
    sc_trace(mVcdFile, ap_predicate_op72_write_state3, "ap_predicate_op72_write_state3");
    sc_trace(mVcdFile, io_acc_block_signal_op80, "io_acc_block_signal_op80");
    sc_trace(mVcdFile, mq_wait_load_reg_373, "mq_wait_load_reg_373");
    sc_trace(mVcdFile, mq_isLocked_load_reg_369, "mq_isLocked_load_reg_369");
    sc_trace(mVcdFile, ap_predicate_op80_write_state3, "ap_predicate_op80_write_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, mq_lockedKey_V, "mq_lockedKey_V");
    sc_trace(mVcdFile, mq_isLocked, "mq_isLocked");
    sc_trace(mVcdFile, ptr_table_head_V_address0, "ptr_table_head_V_address0");
    sc_trace(mVcdFile, ptr_table_head_V_ce0, "ptr_table_head_V_ce0");
    sc_trace(mVcdFile, ptr_table_head_V_we0, "ptr_table_head_V_we0");
    sc_trace(mVcdFile, ptr_table_head_V_q0, "ptr_table_head_V_q0");
    sc_trace(mVcdFile, ptr_table_tail_V_address0, "ptr_table_tail_V_address0");
    sc_trace(mVcdFile, ptr_table_tail_V_ce0, "ptr_table_tail_V_ce0");
    sc_trace(mVcdFile, ptr_table_tail_V_we0, "ptr_table_tail_V_we0");
    sc_trace(mVcdFile, ptr_table_tail_V_q0, "ptr_table_tail_V_q0");
    sc_trace(mVcdFile, ptr_table_valid_address0, "ptr_table_valid_address0");
    sc_trace(mVcdFile, ptr_table_valid_ce0, "ptr_table_valid_ce0");
    sc_trace(mVcdFile, ptr_table_valid_we0, "ptr_table_valid_we0");
    sc_trace(mVcdFile, ptr_table_valid_q0, "ptr_table_valid_q0");
    sc_trace(mVcdFile, mq_wait, "mq_wait");
    sc_trace(mVcdFile, mq_request_key_V, "mq_request_key_V");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_s_blk_n, "mq_pointerUpdFifo_V_s_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_1_blk_n, "mq_pointerUpdFifo_V_1_blk_n");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_3_blk_n, "mq_pointerUpdFifo_V_3_blk_n");
    sc_trace(mVcdFile, mq_pointerUpdFifo_V_4_blk_n, "mq_pointerUpdFifo_V_4_blk_n");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_1_blk_n, "mq_pointerReqFifo_V_1_blk_n");
    sc_trace(mVcdFile, mq_pointerReqFifo_V_s_blk_n, "mq_pointerReqFifo_V_s_blk_n");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_1_blk_n, "mq_pointerRspFifo_V_1_blk_n");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_2_blk_n, "mq_pointerRspFifo_V_2_blk_n");
    sc_trace(mVcdFile, mq_pointerRspFifo_V_s_blk_n, "mq_pointerRspFifo_V_s_blk_n");
    sc_trace(mVcdFile, tmp_key_V_reg_348, "tmp_key_V_reg_348");
    sc_trace(mVcdFile, tmp_entry_head_V_reg_354, "tmp_entry_head_V_reg_354");
    sc_trace(mVcdFile, tmp_entry_tail_V_reg_359, "tmp_entry_tail_V_reg_359");
    sc_trace(mVcdFile, tmp_entry_valid_reg_364, "tmp_entry_valid_reg_364");
    sc_trace(mVcdFile, mq_isLocked_load_load_fu_245_p1, "mq_isLocked_load_load_fu_245_p1");
    sc_trace(mVcdFile, mq_wait_load_load_fu_249_p1, "mq_wait_load_load_fu_249_p1");
    sc_trace(mVcdFile, tmp_lock_fu_273_p1, "tmp_lock_fu_273_p1");
    sc_trace(mVcdFile, and_ln149_fu_283_p2, "and_ln149_fu_283_p2");
    sc_trace(mVcdFile, icmp_ln879_fu_333_p2, "icmp_ln879_fu_333_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, zext_ln544_6_fu_289_p1, "zext_ln544_6_fu_289_p1");
    sc_trace(mVcdFile, zext_ln544_7_fu_308_p1, "zext_ln544_7_fu_308_p1");
    sc_trace(mVcdFile, zext_ln544_fu_327_p1, "zext_ln544_fu_327_p1");
    sc_trace(mVcdFile, tmp_52_nbreadreq_fu_98_p4, "tmp_52_nbreadreq_fu_98_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, xor_ln146_fu_257_p2, "xor_ln146_fu_257_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to1, "ap_idle_pp0_0to1");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_371, "ap_condition_371");
    sc_trace(mVcdFile, ap_condition_375, "ap_condition_375");
    sc_trace(mVcdFile, ap_condition_369, "ap_condition_369");
    sc_trace(mVcdFile, ap_condition_216, "ap_condition_216");
    sc_trace(mVcdFile, ap_condition_229, "ap_condition_229");
    sc_trace(mVcdFile, ap_condition_185, "ap_condition_185");
#endif

    }
}

mq_pointer_table::~mq_pointer_table() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ptr_table_head_V_U;
    delete ptr_table_tail_V_U;
    delete ptr_table_valid_U;
}

void mq_pointer_table::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_333_p2.read()))) {
        mq_isLocked = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln149_fu_283_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_lock_fu_273_p1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, or_ln146_fu_263_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, mq_wait_load_load_fu_249_p1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, mq_isLocked_load_load_fu_245_p1.read())))) {
        mq_isLocked = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_condition_369.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_375.read(), ap_const_boolean_1)) {
            mq_lockedKey_V = mq_request_key_V.read();
        } else if (esl_seteq<1,1,1>(ap_condition_371.read(), ap_const_boolean_1)) {
            mq_lockedKey_V = mq_pointerReqFifo_V_1_dout.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_369.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_375.read(), ap_const_boolean_1)) {
            mq_wait = ap_const_lv1_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, and_ln149_fu_283_p2.read()))) {
            mq_wait = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        and_ln149_reg_385 = and_ln149_fu_283_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_isLocked_load_reg_369 = mq_isLocked.read();
        tmp_reg_344 = tmp_nbreadreq_fu_72_p6.read();
        tmp_reg_344_pp0_iter1_reg = tmp_reg_344.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_request_key_V = mq_pointerReqFifo_V_1_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_wait_load_reg_373 = mq_wait.read();
        or_ln146_reg_377 = or_ln146_fu_263_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_entry_head_V_reg_354 = mq_pointerUpdFifo_V_1_dout.read();
        tmp_entry_tail_V_reg_359 = mq_pointerUpdFifo_V_3_dout.read();
        tmp_entry_valid_reg_364 = mq_pointerUpdFifo_V_4_dout.read();
        tmp_key_V_reg_348 = mq_pointerUpdFifo_V_s_dout.read();
    }
}

void mq_pointer_table::thread_and_ln149_fu_283_p2() {
    and_ln149_fu_283_p2 = (mq_pointerReqFifo_V_s_dout.read() & mq_isLocked.read());
}

void mq_pointer_table::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void mq_pointer_table::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mq_pointer_table::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op6.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op72.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op80.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void mq_pointer_table::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op6.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op72.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op80.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void mq_pointer_table::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op6.read()) && 
    esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1)) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op72.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op80.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void mq_pointer_table::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op6.read()) && 
  esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1)) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void mq_pointer_table::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op19.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()));
}

void mq_pointer_table::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = ((esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op72.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op80.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read())));
}

void mq_pointer_table::thread_ap_condition_185() {
    ap_condition_185 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void mq_pointer_table::thread_ap_condition_216() {
    ap_condition_216 = (esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln149_fu_283_p2.read()));
}

void mq_pointer_table::thread_ap_condition_229() {
    ap_condition_229 = (esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln146_fu_263_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, mq_wait_load_load_fu_249_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, mq_isLocked_load_load_fu_245_p1.read()));
}

void mq_pointer_table::thread_ap_condition_369() {
    ap_condition_369 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void mq_pointer_table::thread_ap_condition_371() {
    ap_condition_371 = (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln149_fu_283_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_lock_fu_273_p1.read()));
}

void mq_pointer_table::thread_ap_condition_375() {
    ap_condition_375 = (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln146_fu_263_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, mq_wait_load_load_fu_249_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, mq_isLocked_load_load_fu_245_p1.read()));
}

void mq_pointer_table::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void mq_pointer_table::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void mq_pointer_table::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void mq_pointer_table::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ap_idle_pp0_0to1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0_0to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to1 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ap_predicate_op19_read_state2() {
    ap_predicate_op19_read_state2 = (esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()));
}

void mq_pointer_table::thread_ap_predicate_op72_write_state3() {
    ap_predicate_op72_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_344_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_reg_377.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln149_reg_385.read()));
}

void mq_pointer_table::thread_ap_predicate_op80_write_state3() {
    ap_predicate_op80_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_344_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln146_reg_377.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, mq_wait_load_reg_373.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, mq_isLocked_load_reg_369.read()));
}

void mq_pointer_table::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to1.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_icmp_ln879_fu_333_p2() {
    icmp_ln879_fu_333_p2 = (!mq_lockedKey_V.read().is_01() || !tmp_key_V_reg_348.read().is_01())? sc_lv<1>(): sc_lv<1>(mq_lockedKey_V.read() == tmp_key_V_reg_348.read());
}

void mq_pointer_table::thread_io_acc_block_signal_op19() {
    io_acc_block_signal_op19 = (mq_pointerReqFifo_V_1_empty_n.read() & mq_pointerReqFifo_V_s_empty_n.read());
}

void mq_pointer_table::thread_io_acc_block_signal_op6() {
    io_acc_block_signal_op6 = (mq_pointerUpdFifo_V_s_empty_n.read() & mq_pointerUpdFifo_V_1_empty_n.read() & mq_pointerUpdFifo_V_3_empty_n.read() & mq_pointerUpdFifo_V_4_empty_n.read());
}

void mq_pointer_table::thread_io_acc_block_signal_op72() {
    io_acc_block_signal_op72 = (mq_pointerRspFifo_V_1_full_n.read() & mq_pointerRspFifo_V_2_full_n.read() & mq_pointerRspFifo_V_s_full_n.read());
}

void mq_pointer_table::thread_io_acc_block_signal_op80() {
    io_acc_block_signal_op80 = (mq_pointerRspFifo_V_1_full_n.read() & mq_pointerRspFifo_V_2_full_n.read() & mq_pointerRspFifo_V_s_full_n.read());
}

void mq_pointer_table::thread_mq_isLocked_load_load_fu_245_p1() {
    mq_isLocked_load_load_fu_245_p1 = mq_isLocked.read();
}

void mq_pointer_table::thread_mq_pointerReqFifo_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        mq_pointerReqFifo_V_1_blk_n = mq_pointerReqFifo_V_1_empty_n.read();
    } else {
        mq_pointerReqFifo_V_1_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerReqFifo_V_1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_pointerReqFifo_V_1_read = ap_const_logic_1;
    } else {
        mq_pointerReqFifo_V_1_read = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerReqFifo_V_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        mq_pointerReqFifo_V_s_blk_n = mq_pointerReqFifo_V_s_empty_n.read();
    } else {
        mq_pointerReqFifo_V_s_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerReqFifo_V_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_pointerReqFifo_V_s_read = ap_const_logic_1;
    } else {
        mq_pointerReqFifo_V_s_read = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_1_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        mq_pointerRspFifo_V_1_blk_n = mq_pointerRspFifo_V_1_full_n.read();
    } else {
        mq_pointerRspFifo_V_1_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_1_din() {
    mq_pointerRspFifo_V_1_din = ptr_table_head_V_q0.read();
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_1_write() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        mq_pointerRspFifo_V_1_write = ap_const_logic_1;
    } else {
        mq_pointerRspFifo_V_1_write = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_2_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        mq_pointerRspFifo_V_2_blk_n = mq_pointerRspFifo_V_2_full_n.read();
    } else {
        mq_pointerRspFifo_V_2_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_2_din() {
    mq_pointerRspFifo_V_2_din = ptr_table_tail_V_q0.read();
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_2_write() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        mq_pointerRspFifo_V_2_write = ap_const_logic_1;
    } else {
        mq_pointerRspFifo_V_2_write = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_s_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        mq_pointerRspFifo_V_s_blk_n = mq_pointerRspFifo_V_s_full_n.read();
    } else {
        mq_pointerRspFifo_V_s_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_s_din() {
    mq_pointerRspFifo_V_s_din = ptr_table_valid_q0.read();
}

void mq_pointer_table::thread_mq_pointerRspFifo_V_s_write() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op80_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        mq_pointerRspFifo_V_s_write = ap_const_logic_1;
    } else {
        mq_pointerRspFifo_V_s_write = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_1_blk_n = mq_pointerUpdFifo_V_1_empty_n.read();
    } else {
        mq_pointerUpdFifo_V_1_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_1_read = ap_const_logic_1;
    } else {
        mq_pointerUpdFifo_V_1_read = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_3_blk_n = mq_pointerUpdFifo_V_3_empty_n.read();
    } else {
        mq_pointerUpdFifo_V_3_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_3_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_3_read = ap_const_logic_1;
    } else {
        mq_pointerUpdFifo_V_3_read = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_4_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_4_blk_n = mq_pointerUpdFifo_V_4_empty_n.read();
    } else {
        mq_pointerUpdFifo_V_4_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_4_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_4_read = ap_const_logic_1;
    } else {
        mq_pointerUpdFifo_V_4_read = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_s_blk_n = mq_pointerUpdFifo_V_s_empty_n.read();
    } else {
        mq_pointerUpdFifo_V_s_blk_n = ap_const_logic_1;
    }
}

void mq_pointer_table::thread_mq_pointerUpdFifo_V_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_72_p6.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        mq_pointerUpdFifo_V_s_read = ap_const_logic_1;
    } else {
        mq_pointerUpdFifo_V_s_read = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_mq_wait_load_load_fu_249_p1() {
    mq_wait_load_load_fu_249_p1 = mq_wait.read();
}

void mq_pointer_table::thread_or_ln146_fu_263_p2() {
    or_ln146_fu_263_p2 = (mq_wait.read() | xor_ln146_fu_257_p2.read());
}

void mq_pointer_table::thread_ptr_table_head_V_address0() {
    if (esl_seteq<1,1,1>(ap_condition_185.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read())) {
            ptr_table_head_V_address0 =  (sc_lv<9>) (zext_ln544_fu_327_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_229.read(), ap_const_boolean_1)) {
            ptr_table_head_V_address0 =  (sc_lv<9>) (zext_ln544_7_fu_308_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_216.read(), ap_const_boolean_1)) {
            ptr_table_head_V_address0 =  (sc_lv<9>) (zext_ln544_6_fu_289_p1.read());
        } else {
            ptr_table_head_V_address0 = "XXXXXXXXX";
        }
    } else {
        ptr_table_head_V_address0 = "XXXXXXXXX";
    }
}

void mq_pointer_table::thread_ptr_table_head_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln146_fu_263_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, mq_wait_load_load_fu_249_p1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, mq_isLocked_load_load_fu_245_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln149_fu_283_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read())))) {
        ptr_table_head_V_ce0 = ap_const_logic_1;
    } else {
        ptr_table_head_V_ce0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ptr_table_head_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read()))) {
        ptr_table_head_V_we0 = ap_const_logic_1;
    } else {
        ptr_table_head_V_we0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ptr_table_tail_V_address0() {
    if (esl_seteq<1,1,1>(ap_condition_185.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read())) {
            ptr_table_tail_V_address0 =  (sc_lv<9>) (zext_ln544_fu_327_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_229.read(), ap_const_boolean_1)) {
            ptr_table_tail_V_address0 =  (sc_lv<9>) (zext_ln544_7_fu_308_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_216.read(), ap_const_boolean_1)) {
            ptr_table_tail_V_address0 =  (sc_lv<9>) (zext_ln544_6_fu_289_p1.read());
        } else {
            ptr_table_tail_V_address0 = "XXXXXXXXX";
        }
    } else {
        ptr_table_tail_V_address0 = "XXXXXXXXX";
    }
}

void mq_pointer_table::thread_ptr_table_tail_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln146_fu_263_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, mq_wait_load_load_fu_249_p1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, mq_isLocked_load_load_fu_245_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln149_fu_283_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read())))) {
        ptr_table_tail_V_ce0 = ap_const_logic_1;
    } else {
        ptr_table_tail_V_ce0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ptr_table_tail_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read()))) {
        ptr_table_tail_V_we0 = ap_const_logic_1;
    } else {
        ptr_table_tail_V_we0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ptr_table_valid_address0() {
    if (esl_seteq<1,1,1>(ap_condition_185.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read())) {
            ptr_table_valid_address0 =  (sc_lv<9>) (zext_ln544_fu_327_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_229.read(), ap_const_boolean_1)) {
            ptr_table_valid_address0 =  (sc_lv<9>) (zext_ln544_7_fu_308_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_216.read(), ap_const_boolean_1)) {
            ptr_table_valid_address0 =  (sc_lv<9>) (zext_ln544_6_fu_289_p1.read());
        } else {
            ptr_table_valid_address0 = "XXXXXXXXX";
        }
    } else {
        ptr_table_valid_address0 = "XXXXXXXXX";
    }
}

void mq_pointer_table::thread_ptr_table_valid_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln146_fu_263_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, mq_wait_load_load_fu_249_p1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, mq_isLocked_load_load_fu_245_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(tmp_reg_344.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln146_fu_263_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln149_fu_283_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read())))) {
        ptr_table_valid_ce0 = ap_const_logic_1;
    } else {
        ptr_table_valid_ce0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_ptr_table_valid_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_344.read()))) {
        ptr_table_valid_we0 = ap_const_logic_1;
    } else {
        ptr_table_valid_we0 = ap_const_logic_0;
    }
}

void mq_pointer_table::thread_tmp_52_nbreadreq_fu_98_p4() {
    tmp_52_nbreadreq_fu_98_p4 =  (sc_lv<1>) ((mq_pointerReqFifo_V_1_empty_n.read() & mq_pointerReqFifo_V_s_empty_n.read()));
}

void mq_pointer_table::thread_tmp_lock_fu_273_p1() {
    tmp_lock_fu_273_p1 = mq_pointerReqFifo_V_s_dout.read();
}

void mq_pointer_table::thread_tmp_nbreadreq_fu_72_p6() {
    tmp_nbreadreq_fu_72_p6 =  (sc_lv<1>) ((mq_pointerUpdFifo_V_s_empty_n.read() & mq_pointerUpdFifo_V_1_empty_n.read() & mq_pointerUpdFifo_V_3_empty_n.read() & mq_pointerUpdFifo_V_4_empty_n.read()));
}

void mq_pointer_table::thread_xor_ln146_fu_257_p2() {
    xor_ln146_fu_257_p2 = (tmp_52_nbreadreq_fu_98_p4.read() ^ ap_const_lv1_1);
}

void mq_pointer_table::thread_zext_ln544_6_fu_289_p1() {
    zext_ln544_6_fu_289_p1 = esl_zext<64,16>(mq_pointerReqFifo_V_1_dout.read());
}

void mq_pointer_table::thread_zext_ln544_7_fu_308_p1() {
    zext_ln544_7_fu_308_p1 = esl_zext<64,16>(mq_request_key_V.read());
}

void mq_pointer_table::thread_zext_ln544_fu_327_p1() {
    zext_ln544_fu_327_p1 = esl_zext<64,16>(tmp_key_V_reg_348.read());
}

void mq_pointer_table::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

