// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _insert_icrc_512_s_HH_
#define _insert_icrc_512_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct insert_icrc_512_s : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > tx_crcDataFifo_V_dat_dout;
    sc_in< sc_logic > tx_crcDataFifo_V_dat_empty_n;
    sc_out< sc_logic > tx_crcDataFifo_V_dat_read;
    sc_in< sc_lv<64> > tx_crcDataFifo_V_kee_dout;
    sc_in< sc_logic > tx_crcDataFifo_V_kee_empty_n;
    sc_out< sc_logic > tx_crcDataFifo_V_kee_read;
    sc_in< sc_lv<1> > tx_crcDataFifo_V_las_dout;
    sc_in< sc_logic > tx_crcDataFifo_V_las_empty_n;
    sc_out< sc_logic > tx_crcDataFifo_V_las_read;
    sc_in< sc_lv<32> > crcFifo1_V_V_dout;
    sc_in< sc_logic > crcFifo1_V_V_empty_n;
    sc_out< sc_logic > crcFifo1_V_V_read;
    sc_in< sc_logic > m_axis_tx_data_TREADY;
    sc_out< sc_lv<512> > m_axis_tx_data_TDATA;
    sc_out< sc_logic > m_axis_tx_data_TVALID;
    sc_out< sc_lv<64> > m_axis_tx_data_TKEEP;
    sc_out< sc_lv<1> > m_axis_tx_data_TLAST;


    // Module declarations
    insert_icrc_512_s(sc_module_name name);
    SC_HAS_PROCESS(insert_icrc_512_s);

    ~insert_icrc_512_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > io_acc_block_signal_op10;
    sc_signal< sc_lv<2> > ii_state_load_load_fu_400_p1;
    sc_signal< sc_lv<1> > tmp_83_nbreadreq_fu_162_p5;
    sc_signal< bool > ap_predicate_op10_read_state1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_184_p3;
    sc_signal< bool > ap_predicate_op53_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > output_V_data_V_1_ack_in;
    sc_signal< sc_lv<2> > ii_state_load_reg_640;
    sc_signal< sc_lv<1> > tmp_83_reg_649;
    sc_signal< bool > ap_predicate_op62_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > output_V_data_V_1_ack_out;
    sc_signal< sc_lv<2> > output_V_data_V_1_state;
    sc_signal< sc_logic > output_V_keep_V_1_ack_out;
    sc_signal< sc_lv<2> > output_V_keep_V_1_state;
    sc_signal< sc_logic > output_V_last_V_1_ack_out;
    sc_signal< sc_lv<2> > output_V_last_V_1_state;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<2> > ii_state_load_reg_640_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_83_reg_649_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op71_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<512> > output_V_data_V_1_data_in;
    sc_signal< sc_lv<512> > output_V_data_V_1_data_out;
    sc_signal< sc_logic > output_V_data_V_1_vld_in;
    sc_signal< sc_logic > output_V_data_V_1_vld_out;
    sc_signal< sc_lv<512> > output_V_data_V_1_payload_A;
    sc_signal< sc_lv<512> > output_V_data_V_1_payload_B;
    sc_signal< sc_logic > output_V_data_V_1_sel_rd;
    sc_signal< sc_logic > output_V_data_V_1_sel_wr;
    sc_signal< sc_logic > output_V_data_V_1_sel;
    sc_signal< sc_logic > output_V_data_V_1_load_A;
    sc_signal< sc_logic > output_V_data_V_1_load_B;
    sc_signal< sc_logic > output_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<64> > output_V_keep_V_1_data_in;
    sc_signal< sc_lv<64> > output_V_keep_V_1_data_out;
    sc_signal< sc_logic > output_V_keep_V_1_vld_in;
    sc_signal< sc_logic > output_V_keep_V_1_vld_out;
    sc_signal< sc_logic > output_V_keep_V_1_ack_in;
    sc_signal< sc_lv<64> > output_V_keep_V_1_payload_A;
    sc_signal< sc_lv<64> > output_V_keep_V_1_payload_B;
    sc_signal< sc_logic > output_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > output_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > output_V_keep_V_1_sel;
    sc_signal< sc_logic > output_V_keep_V_1_load_A;
    sc_signal< sc_logic > output_V_keep_V_1_load_B;
    sc_signal< sc_logic > output_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > output_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > output_V_last_V_1_data_out;
    sc_signal< sc_logic > output_V_last_V_1_vld_in;
    sc_signal< sc_logic > output_V_last_V_1_vld_out;
    sc_signal< sc_logic > output_V_last_V_1_ack_in;
    sc_signal< sc_lv<1> > output_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > output_V_last_V_1_payload_B;
    sc_signal< sc_logic > output_V_last_V_1_sel_rd;
    sc_signal< sc_logic > output_V_last_V_1_sel_wr;
    sc_signal< sc_logic > output_V_last_V_1_sel;
    sc_signal< sc_logic > output_V_last_V_1_load_A;
    sc_signal< sc_logic > output_V_last_V_1_load_B;
    sc_signal< sc_logic > output_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > ii_state;
    sc_signal< sc_lv<32> > crc_V;
    sc_signal< sc_logic > m_axis_tx_data_TDATA_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > crcFifo1_V_V_blk_n;
    sc_signal< sc_logic > tx_crcDataFifo_V_dat_blk_n;
    sc_signal< sc_logic > tx_crcDataFifo_V_kee_blk_n;
    sc_signal< sc_logic > tx_crcDataFifo_V_las_blk_n;
    sc_signal< sc_lv<32> > crc_V_load_reg_644;
    sc_signal< sc_lv<64> > tmp_keep_V_51_fu_412_p1;
    sc_signal< sc_lv<1> > tmp_last_V_fu_416_p1;
    sc_signal< sc_lv<512> > p_Result_72_fu_428_p5;
    sc_signal< sc_lv<1> > tmp_84_fu_420_p3;
    sc_signal< sc_lv<512> > p_Result_71_fu_440_p5;
    sc_signal< sc_lv<512> > p_Result_70_fu_452_p5;
    sc_signal< sc_lv<512> > p_Result_69_fu_464_p5;
    sc_signal< sc_lv<512> > p_Result_68_fu_476_p5;
    sc_signal< sc_lv<512> > p_Result_67_fu_488_p5;
    sc_signal< sc_lv<512> > p_Result_66_fu_500_p5;
    sc_signal< sc_lv<512> > p_Result_65_fu_512_p5;
    sc_signal< sc_lv<512> > p_Result_64_fu_524_p5;
    sc_signal< sc_lv<512> > p_Result_63_fu_536_p5;
    sc_signal< sc_lv<512> > p_Result_62_fu_548_p5;
    sc_signal< sc_lv<512> > p_Result_61_fu_560_p5;
    sc_signal< sc_lv<512> > p_Result_60_fu_572_p5;
    sc_signal< sc_lv<512> > p_Result_59_fu_584_p5;
    sc_signal< sc_lv<512> > p_Result_s_fu_596_p5;
    sc_signal< sc_lv<512> > p_Result_73_fu_632_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > ap_phi_reg_pp0_iter0_tmp_keep_V_reg_213;
    sc_signal< sc_lv<64> > ap_phi_reg_pp0_iter1_tmp_keep_V_reg_213;
    sc_signal< sc_lv<512> > ap_phi_reg_pp0_iter0_tmp_data_V_55_reg_287;
    sc_signal< sc_lv<512> > ap_phi_reg_pp0_iter1_tmp_data_V_55_reg_287;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_tmp_last_V_39_reg_331;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_tmp_last_V_39_reg_331;
    sc_signal< sc_lv<32> > r_V_fu_614_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_561;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFFF;
    static const sc_lv<64> ap_const_lv64_FFFFF;
    static const sc_lv<64> ap_const_lv64_FFFF;
    static const sc_lv<64> ap_const_lv64_FFF;
    static const sc_lv<64> ap_const_lv64_FF;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFF;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<480> ap_const_lv480_lc_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_561();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_phi_reg_pp0_iter0_tmp_data_V_55_reg_287();
    void thread_ap_phi_reg_pp0_iter0_tmp_keep_V_reg_213();
    void thread_ap_phi_reg_pp0_iter0_tmp_last_V_39_reg_331();
    void thread_ap_predicate_op10_read_state1();
    void thread_ap_predicate_op53_read_state1();
    void thread_ap_predicate_op62_write_state2();
    void thread_ap_predicate_op71_write_state3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_crcFifo1_V_V_blk_n();
    void thread_crcFifo1_V_V_read();
    void thread_ii_state_load_load_fu_400_p1();
    void thread_io_acc_block_signal_op10();
    void thread_m_axis_tx_data_TDATA();
    void thread_m_axis_tx_data_TDATA_blk_n();
    void thread_m_axis_tx_data_TKEEP();
    void thread_m_axis_tx_data_TLAST();
    void thread_m_axis_tx_data_TVALID();
    void thread_output_V_data_V_1_ack_in();
    void thread_output_V_data_V_1_ack_out();
    void thread_output_V_data_V_1_data_in();
    void thread_output_V_data_V_1_data_out();
    void thread_output_V_data_V_1_load_A();
    void thread_output_V_data_V_1_load_B();
    void thread_output_V_data_V_1_sel();
    void thread_output_V_data_V_1_state_cmp_full();
    void thread_output_V_data_V_1_vld_in();
    void thread_output_V_data_V_1_vld_out();
    void thread_output_V_keep_V_1_ack_in();
    void thread_output_V_keep_V_1_ack_out();
    void thread_output_V_keep_V_1_data_in();
    void thread_output_V_keep_V_1_data_out();
    void thread_output_V_keep_V_1_load_A();
    void thread_output_V_keep_V_1_load_B();
    void thread_output_V_keep_V_1_sel();
    void thread_output_V_keep_V_1_state_cmp_full();
    void thread_output_V_keep_V_1_vld_in();
    void thread_output_V_keep_V_1_vld_out();
    void thread_output_V_last_V_1_ack_in();
    void thread_output_V_last_V_1_ack_out();
    void thread_output_V_last_V_1_data_in();
    void thread_output_V_last_V_1_data_out();
    void thread_output_V_last_V_1_load_A();
    void thread_output_V_last_V_1_load_B();
    void thread_output_V_last_V_1_sel();
    void thread_output_V_last_V_1_state_cmp_full();
    void thread_output_V_last_V_1_vld_in();
    void thread_output_V_last_V_1_vld_out();
    void thread_p_Result_59_fu_584_p5();
    void thread_p_Result_60_fu_572_p5();
    void thread_p_Result_61_fu_560_p5();
    void thread_p_Result_62_fu_548_p5();
    void thread_p_Result_63_fu_536_p5();
    void thread_p_Result_64_fu_524_p5();
    void thread_p_Result_65_fu_512_p5();
    void thread_p_Result_66_fu_500_p5();
    void thread_p_Result_67_fu_488_p5();
    void thread_p_Result_68_fu_476_p5();
    void thread_p_Result_69_fu_464_p5();
    void thread_p_Result_70_fu_452_p5();
    void thread_p_Result_71_fu_440_p5();
    void thread_p_Result_72_fu_428_p5();
    void thread_p_Result_73_fu_632_p3();
    void thread_p_Result_s_fu_596_p5();
    void thread_r_V_fu_614_p2();
    void thread_tmp_83_nbreadreq_fu_162_p5();
    void thread_tmp_84_fu_420_p3();
    void thread_tmp_keep_V_51_fu_412_p1();
    void thread_tmp_last_V_fu_416_p1();
    void thread_tmp_nbreadreq_fu_184_p3();
    void thread_tx_crcDataFifo_V_dat_blk_n();
    void thread_tx_crcDataFifo_V_dat_read();
    void thread_tx_crcDataFifo_V_kee_blk_n();
    void thread_tx_crcDataFifo_V_kee_read();
    void thread_tx_crcDataFifo_V_las_blk_n();
    void thread_tx_crcDataFifo_V_las_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
