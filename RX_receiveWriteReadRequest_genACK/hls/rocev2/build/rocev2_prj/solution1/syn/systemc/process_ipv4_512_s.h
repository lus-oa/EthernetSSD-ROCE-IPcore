// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _process_ipv4_512_s_HH_
#define _process_ipv4_512_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct process_ipv4_512_s : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > rx_crc2ipFifo_V_data_dout;
    sc_in< sc_logic > rx_crc2ipFifo_V_data_empty_n;
    sc_out< sc_logic > rx_crc2ipFifo_V_data_read;
    sc_in< sc_lv<64> > rx_crc2ipFifo_V_keep_dout;
    sc_in< sc_logic > rx_crc2ipFifo_V_keep_empty_n;
    sc_out< sc_logic > rx_crc2ipFifo_V_keep_read;
    sc_in< sc_lv<1> > rx_crc2ipFifo_V_last_dout;
    sc_in< sc_logic > rx_crc2ipFifo_V_last_empty_n;
    sc_out< sc_logic > rx_crc2ipFifo_V_last_read;
    sc_out< sc_lv<512> > rx_process2dropFifo_1_5_din;
    sc_in< sc_logic > rx_process2dropFifo_1_5_full_n;
    sc_out< sc_logic > rx_process2dropFifo_1_5_write;
    sc_out< sc_lv<64> > rx_process2dropFifo_2_4_din;
    sc_in< sc_logic > rx_process2dropFifo_2_4_full_n;
    sc_out< sc_logic > rx_process2dropFifo_2_4_write;
    sc_out< sc_lv<1> > rx_process2dropFifo_s_6_din;
    sc_in< sc_logic > rx_process2dropFifo_s_6_full_n;
    sc_out< sc_logic > rx_process2dropFifo_s_6_write;
    sc_out< sc_lv<4> > rx_process2dropLengt_1_din;
    sc_in< sc_logic > rx_process2dropLengt_1_full_n;
    sc_out< sc_logic > rx_process2dropLengt_1_write;
    sc_out< sc_lv<32> > rx_ip2udpMetaFifo_V_s_din;
    sc_in< sc_logic > rx_ip2udpMetaFifo_V_s_full_n;
    sc_out< sc_logic > rx_ip2udpMetaFifo_V_s_write;
    sc_out< sc_lv<16> > rx_ip2udpMetaFifo_V_1_din;
    sc_in< sc_logic > rx_ip2udpMetaFifo_V_1_full_n;
    sc_out< sc_logic > rx_ip2udpMetaFifo_V_1_write;


    // Module declarations
    process_ipv4_512_s(sc_module_name name);
    SC_HAS_PROCESS(process_ipv4_512_s);

    ~process_ipv4_512_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > io_acc_block_signal_op5;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_98_p5;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op57;
    sc_signal< sc_lv<1> > tmp_reg_427;
    sc_signal< sc_lv<1> > or_ln75_reg_449;
    sc_signal< bool > ap_predicate_op57_write_state2;
    sc_signal< sc_lv<1> > metaWritten_3_load_reg_453;
    sc_signal< bool > ap_predicate_op60_write_state2;
    sc_signal< sc_logic > io_acc_block_signal_op65;
    sc_signal< bool > ap_predicate_op65_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > header_ready;
    sc_signal< sc_lv<16> > header_idx_3;
    sc_signal< sc_lv<160> > header_header_V_6;
    sc_signal< sc_lv<1> > metaWritten_3;
    sc_signal< sc_logic > rx_crc2ipFifo_V_data_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > rx_crc2ipFifo_V_keep_blk_n;
    sc_signal< sc_logic > rx_crc2ipFifo_V_last_blk_n;
    sc_signal< sc_logic > rx_process2dropFifo_1_5_blk_n;
    sc_signal< sc_logic > rx_process2dropFifo_2_4_blk_n;
    sc_signal< sc_logic > rx_process2dropFifo_s_6_blk_n;
    sc_signal< sc_logic > rx_process2dropLengt_1_blk_n;
    sc_signal< sc_logic > rx_ip2udpMetaFifo_V_s_blk_n;
    sc_signal< sc_logic > rx_ip2udpMetaFifo_V_1_blk_n;
    sc_signal< sc_lv<512> > tmp_data_V_reg_431;
    sc_signal< sc_lv<64> > tmp_keep_V_reg_436;
    sc_signal< sc_lv<1> > tmp_last_V_reg_441;
    sc_signal< sc_lv<1> > or_ln75_fu_324_p2;
    sc_signal< sc_lv<1> > metaWritten_3_load_load_fu_330_p1;
    sc_signal< sc_lv<1> > or_ln143_fu_354_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<16> > ap_phi_mux_phi_ln75_phi_fu_153_p4;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_phi_ln75_reg_150;
    sc_signal< sc_lv<1> > header_ready_load_load_fu_196_p1;
    sc_signal< sc_lv<16> > add_ln69_fu_317_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_write_flag_1_i_i_phi_fu_162_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_159;
    sc_signal< sc_lv<1> > ap_phi_mux_metaWritten_5_flag_1_phi_fu_173_p6;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_metaWritten_5_flag_1_reg_170;
    sc_signal< sc_lv<1> > and_ln143_fu_340_p2;
    sc_signal< sc_lv<16> > select_ln143_fu_346_p3;
    sc_signal< sc_lv<160> > p_Result_s_fu_305_p2;
    sc_signal< sc_lv<1> > xor_ln143_fu_334_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<25> > Lo_assign_fu_205_p3;
    sc_signal< sc_lv<1> > trunc_ln414_fu_227_p1;
    sc_signal< sc_lv<1> > icmp_ln414_fu_221_p2;
    sc_signal< sc_lv<160> > st3_fu_231_p3;
    sc_signal< sc_lv<160> > tmp_V_4_fu_213_p1;
    sc_signal< sc_lv<160> > select_ln414_fu_239_p3;
    sc_signal< sc_lv<160> > tmp_40_fu_247_p4;
    sc_signal< sc_lv<160> > select_ln414_15_fu_265_p3;
    sc_signal< sc_lv<160> > select_ln414_16_fu_273_p3;
    sc_signal< sc_lv<160> > and_ln414_fu_281_p2;
    sc_signal< sc_lv<160> > xor_ln414_fu_287_p2;
    sc_signal< sc_lv<160> > select_ln414_14_fu_257_p3;
    sc_signal< sc_lv<160> > and_ln414_10_fu_293_p2;
    sc_signal< sc_lv<160> > and_ln414_11_fu_299_p2;
    sc_signal< sc_lv<8> > p_Result_128_1_i_i_fu_408_p4;
    sc_signal< sc_lv<8> > p_Result_128_i_i_i_fu_398_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_130;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<25> ap_const_lv25_9F;
    static const sc_lv<159> ap_const_lv159_lc_2;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<160> ap_const_lv160_lc_3;
    static const sc_lv<160> ap_const_lv160_lc_4;
    static const sc_lv<160> ap_const_lv160_lc_5;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Lo_assign_fu_205_p3();
    void thread_add_ln69_fu_317_p2();
    void thread_and_ln143_fu_340_p2();
    void thread_and_ln414_10_fu_293_p2();
    void thread_and_ln414_11_fu_299_p2();
    void thread_and_ln414_fu_281_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_130();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_phi_mux_metaWritten_5_flag_1_phi_fu_173_p6();
    void thread_ap_phi_mux_phi_ln75_phi_fu_153_p4();
    void thread_ap_phi_mux_write_flag_1_i_i_phi_fu_162_p4();
    void thread_ap_phi_reg_pp0_iter0_metaWritten_5_flag_1_reg_170();
    void thread_ap_phi_reg_pp0_iter0_phi_ln75_reg_150();
    void thread_ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_159();
    void thread_ap_predicate_op57_write_state2();
    void thread_ap_predicate_op60_write_state2();
    void thread_ap_predicate_op65_write_state2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_header_ready_load_load_fu_196_p1();
    void thread_icmp_ln414_fu_221_p2();
    void thread_io_acc_block_signal_op5();
    void thread_io_acc_block_signal_op57();
    void thread_io_acc_block_signal_op65();
    void thread_metaWritten_3_load_load_fu_330_p1();
    void thread_or_ln143_fu_354_p2();
    void thread_or_ln75_fu_324_p2();
    void thread_p_Result_128_1_i_i_fu_408_p4();
    void thread_p_Result_128_i_i_i_fu_398_p4();
    void thread_p_Result_s_fu_305_p2();
    void thread_rx_crc2ipFifo_V_data_blk_n();
    void thread_rx_crc2ipFifo_V_data_read();
    void thread_rx_crc2ipFifo_V_keep_blk_n();
    void thread_rx_crc2ipFifo_V_keep_read();
    void thread_rx_crc2ipFifo_V_last_blk_n();
    void thread_rx_crc2ipFifo_V_last_read();
    void thread_rx_ip2udpMetaFifo_V_1_blk_n();
    void thread_rx_ip2udpMetaFifo_V_1_din();
    void thread_rx_ip2udpMetaFifo_V_1_write();
    void thread_rx_ip2udpMetaFifo_V_s_blk_n();
    void thread_rx_ip2udpMetaFifo_V_s_din();
    void thread_rx_ip2udpMetaFifo_V_s_write();
    void thread_rx_process2dropFifo_1_5_blk_n();
    void thread_rx_process2dropFifo_1_5_din();
    void thread_rx_process2dropFifo_1_5_write();
    void thread_rx_process2dropFifo_2_4_blk_n();
    void thread_rx_process2dropFifo_2_4_din();
    void thread_rx_process2dropFifo_2_4_write();
    void thread_rx_process2dropFifo_s_6_blk_n();
    void thread_rx_process2dropFifo_s_6_din();
    void thread_rx_process2dropFifo_s_6_write();
    void thread_rx_process2dropLengt_1_blk_n();
    void thread_rx_process2dropLengt_1_din();
    void thread_rx_process2dropLengt_1_write();
    void thread_select_ln143_fu_346_p3();
    void thread_select_ln414_14_fu_257_p3();
    void thread_select_ln414_15_fu_265_p3();
    void thread_select_ln414_16_fu_273_p3();
    void thread_select_ln414_fu_239_p3();
    void thread_st3_fu_231_p3();
    void thread_tmp_40_fu_247_p4();
    void thread_tmp_V_4_fu_213_p1();
    void thread_tmp_nbreadreq_fu_98_p5();
    void thread_trunc_ln414_fu_227_p1();
    void thread_xor_ln143_fu_334_p2();
    void thread_xor_ln414_fu_287_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
