// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _process_udp_512_2150_HH_
#define _process_udp_512_2150_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct process_udp_512_2150 : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > rx_ip2udpFifo_V_data_dout;
    sc_in< sc_logic > rx_ip2udpFifo_V_data_empty_n;
    sc_out< sc_logic > rx_ip2udpFifo_V_data_read;
    sc_in< sc_lv<64> > rx_ip2udpFifo_V_keep_dout;
    sc_in< sc_logic > rx_ip2udpFifo_V_keep_empty_n;
    sc_out< sc_logic > rx_ip2udpFifo_V_keep_read;
    sc_in< sc_lv<1> > rx_ip2udpFifo_V_last_dout;
    sc_in< sc_logic > rx_ip2udpFifo_V_last_empty_n;
    sc_out< sc_logic > rx_ip2udpFifo_V_last_read;
    sc_out< sc_lv<512> > rx_udp2shiftFifo_V_d_din;
    sc_in< sc_logic > rx_udp2shiftFifo_V_d_full_n;
    sc_out< sc_logic > rx_udp2shiftFifo_V_d_write;
    sc_out< sc_lv<64> > rx_udp2shiftFifo_V_k_din;
    sc_in< sc_logic > rx_udp2shiftFifo_V_k_full_n;
    sc_out< sc_logic > rx_udp2shiftFifo_V_k_write;
    sc_out< sc_lv<1> > rx_udp2shiftFifo_V_l_din;
    sc_in< sc_logic > rx_udp2shiftFifo_V_l_full_n;
    sc_out< sc_logic > rx_udp2shiftFifo_V_l_write;
    sc_out< sc_lv<49> > rx_udpMetaFifo_V_din;
    sc_in< sc_logic > rx_udpMetaFifo_V_full_n;
    sc_out< sc_logic > rx_udpMetaFifo_V_write;


    // Module declarations
    process_udp_512_2150(sc_module_name name);
    SC_HAS_PROCESS(process_udp_512_2150);

    ~process_udp_512_2150();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > io_acc_block_signal_op6;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_102_p5;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op67;
    sc_signal< sc_lv<1> > tmp_reg_459;
    sc_signal< sc_lv<1> > tmp_reg_459_pp0_iter1_reg;
    sc_signal< sc_lv<1> > or_ln75_reg_482;
    sc_signal< sc_lv<1> > or_ln75_reg_482_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_valid_reg_505;
    sc_signal< bool > ap_predicate_op67_write_state3;
    sc_signal< sc_lv<1> > metaWritten_2_load_reg_491;
    sc_signal< bool > ap_predicate_op70_write_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > pu_header_ready;
    sc_signal< sc_lv<16> > pu_header_idx;
    sc_signal< sc_lv<64> > pu_header_header_V;
    sc_signal< sc_lv<1> > metaWritten_2;
    sc_signal< sc_logic > rx_ip2udpFifo_V_data_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > rx_ip2udpFifo_V_keep_blk_n;
    sc_signal< sc_logic > rx_ip2udpFifo_V_last_blk_n;
    sc_signal< sc_logic > rx_udp2shiftFifo_V_d_blk_n;
    sc_signal< sc_logic > rx_udp2shiftFifo_V_k_blk_n;
    sc_signal< sc_logic > rx_udp2shiftFifo_V_l_blk_n;
    sc_signal< sc_logic > rx_udpMetaFifo_V_blk_n;
    sc_signal< sc_lv<512> > tmp_data_V_reg_463;
    sc_signal< sc_lv<512> > tmp_data_V_reg_463_pp0_iter1_reg;
    sc_signal< sc_lv<64> > tmp_keep_V_reg_468;
    sc_signal< sc_lv<64> > tmp_keep_V_reg_468_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_last_V_reg_473;
    sc_signal< sc_lv<1> > tmp_last_V_reg_473_pp0_iter1_reg;
    sc_signal< sc_lv<1> > or_ln75_fu_323_p2;
    sc_signal< sc_lv<1> > xor_ln79_fu_329_p2;
    sc_signal< sc_lv<1> > xor_ln79_reg_486;
    sc_signal< sc_lv<1> > metaWritten_2_load_load_fu_361_p1;
    sc_signal< sc_lv<8> > p_Result_128_i_i9_s_fu_369_p4;
    sc_signal< sc_lv<8> > p_Result_128_i_i9_s_reg_495;
    sc_signal< sc_lv<8> > p_Result_128_1_i_i_fu_379_p4;
    sc_signal< sc_lv<8> > p_Result_128_1_i_i_reg_500;
    sc_signal< sc_lv<1> > tmp_valid_fu_397_p2;
    sc_signal< sc_lv<8> > p_Result_128_i_i_reg_510;
    sc_signal< sc_lv<8> > trunc_ln647_fu_413_p1;
    sc_signal< sc_lv<8> > trunc_ln647_reg_515;
    sc_signal< sc_lv<8> > p_Result_128_i_i1_reg_520;
    sc_signal< sc_lv<8> > p_Result_128_1_i_i_2_reg_525;
    sc_signal< sc_lv<1> > or_ln79_fu_437_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<16> > ap_phi_mux_phi_ln75_phi_fu_147_p4;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_phi_ln75_reg_144;
    sc_signal< sc_lv<1> > pu_header_ready_load_load_fu_191_p1;
    sc_signal< sc_lv<16> > add_ln69_fu_316_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_write_flag_1_i_i_phi_fu_156_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_153;
    sc_signal< sc_lv<1> > ap_phi_mux_metaWritten_6_flag_1_phi_fu_168_p6;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_metaWritten_6_flag_1_reg_164;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_metaWritten_6_flag_1_reg_164;
    sc_signal< sc_lv<1> > and_ln79_fu_335_p2;
    sc_signal< sc_lv<16> > select_ln79_fu_341_p3;
    sc_signal< sc_lv<64> > p_Result_s_fu_304_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<19> > tmp_38_fu_208_p3;
    sc_signal< sc_lv<26> > zext_ln414_fu_216_p1;
    sc_signal< sc_lv<1> > trunc_ln414_fu_226_p1;
    sc_signal< sc_lv<1> > icmp_ln414_fu_220_p2;
    sc_signal< sc_lv<64> > st3_fu_230_p3;
    sc_signal< sc_lv<64> > tmp_V_fu_200_p1;
    sc_signal< sc_lv<64> > select_ln414_fu_238_p3;
    sc_signal< sc_lv<64> > tmp_39_fu_246_p4;
    sc_signal< sc_lv<64> > select_ln414_12_fu_264_p3;
    sc_signal< sc_lv<64> > select_ln414_13_fu_272_p3;
    sc_signal< sc_lv<64> > and_ln414_fu_280_p2;
    sc_signal< sc_lv<64> > xor_ln414_fu_286_p2;
    sc_signal< sc_lv<64> > select_ln414_11_fu_256_p3;
    sc_signal< sc_lv<64> > and_ln414_8_fu_292_p2;
    sc_signal< sc_lv<64> > and_ln414_9_fu_298_p2;
    sc_signal< sc_lv<16> > dstPort_V_fu_389_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_229;
    sc_signal< bool > ap_condition_124;
    sc_signal< bool > ap_condition_111;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<26> ap_const_lv26_0;
    static const sc_lv<63> ap_const_lv63_0;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<64> ap_const_lv64_8000000000000000;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<16> ap_const_lv16_12B7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln69_fu_316_p2();
    void thread_and_ln414_8_fu_292_p2();
    void thread_and_ln414_9_fu_298_p2();
    void thread_and_ln414_fu_280_p2();
    void thread_and_ln79_fu_335_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_111();
    void thread_ap_condition_124();
    void thread_ap_condition_229();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_phi_mux_metaWritten_6_flag_1_phi_fu_168_p6();
    void thread_ap_phi_mux_phi_ln75_phi_fu_147_p4();
    void thread_ap_phi_mux_write_flag_1_i_i_phi_fu_156_p4();
    void thread_ap_phi_reg_pp0_iter0_metaWritten_6_flag_1_reg_164();
    void thread_ap_phi_reg_pp0_iter0_phi_ln75_reg_144();
    void thread_ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_153();
    void thread_ap_predicate_op67_write_state3();
    void thread_ap_predicate_op70_write_state3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_dstPort_V_fu_389_p3();
    void thread_icmp_ln414_fu_220_p2();
    void thread_io_acc_block_signal_op6();
    void thread_io_acc_block_signal_op67();
    void thread_metaWritten_2_load_load_fu_361_p1();
    void thread_or_ln75_fu_323_p2();
    void thread_or_ln79_fu_437_p2();
    void thread_p_Result_128_1_i_i_fu_379_p4();
    void thread_p_Result_128_i_i9_s_fu_369_p4();
    void thread_p_Result_s_fu_304_p2();
    void thread_pu_header_ready_load_load_fu_191_p1();
    void thread_rx_ip2udpFifo_V_data_blk_n();
    void thread_rx_ip2udpFifo_V_data_read();
    void thread_rx_ip2udpFifo_V_keep_blk_n();
    void thread_rx_ip2udpFifo_V_keep_read();
    void thread_rx_ip2udpFifo_V_last_blk_n();
    void thread_rx_ip2udpFifo_V_last_read();
    void thread_rx_udp2shiftFifo_V_d_blk_n();
    void thread_rx_udp2shiftFifo_V_d_din();
    void thread_rx_udp2shiftFifo_V_d_write();
    void thread_rx_udp2shiftFifo_V_k_blk_n();
    void thread_rx_udp2shiftFifo_V_k_din();
    void thread_rx_udp2shiftFifo_V_k_write();
    void thread_rx_udp2shiftFifo_V_l_blk_n();
    void thread_rx_udp2shiftFifo_V_l_din();
    void thread_rx_udp2shiftFifo_V_l_write();
    void thread_rx_udpMetaFifo_V_blk_n();
    void thread_rx_udpMetaFifo_V_din();
    void thread_rx_udpMetaFifo_V_write();
    void thread_select_ln414_11_fu_256_p3();
    void thread_select_ln414_12_fu_264_p3();
    void thread_select_ln414_13_fu_272_p3();
    void thread_select_ln414_fu_238_p3();
    void thread_select_ln79_fu_341_p3();
    void thread_st3_fu_230_p3();
    void thread_tmp_38_fu_208_p3();
    void thread_tmp_39_fu_246_p4();
    void thread_tmp_V_fu_200_p1();
    void thread_tmp_nbreadreq_fu_102_p5();
    void thread_tmp_valid_fu_397_p2();
    void thread_trunc_ln414_fu_226_p1();
    void thread_trunc_ln647_fu_413_p1();
    void thread_xor_ln414_fu_286_p2();
    void thread_xor_ln79_fu_329_p2();
    void thread_zext_ln414_fu_216_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
