// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mq_pointer_table_HH_
#define _mq_pointer_table_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conn_table_conn_table_remote_ud.h"
#include "mq_pointer_table_ptr_table_valid.h"

namespace ap_rtl {

struct mq_pointer_table : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > mq_pointerUpdFifo_V_s_dout;
    sc_in< sc_logic > mq_pointerUpdFifo_V_s_empty_n;
    sc_out< sc_logic > mq_pointerUpdFifo_V_s_read;
    sc_in< sc_lv<16> > mq_pointerUpdFifo_V_1_dout;
    sc_in< sc_logic > mq_pointerUpdFifo_V_1_empty_n;
    sc_out< sc_logic > mq_pointerUpdFifo_V_1_read;
    sc_in< sc_lv<16> > mq_pointerUpdFifo_V_3_dout;
    sc_in< sc_logic > mq_pointerUpdFifo_V_3_empty_n;
    sc_out< sc_logic > mq_pointerUpdFifo_V_3_read;
    sc_in< sc_lv<1> > mq_pointerUpdFifo_V_4_dout;
    sc_in< sc_logic > mq_pointerUpdFifo_V_4_empty_n;
    sc_out< sc_logic > mq_pointerUpdFifo_V_4_read;
    sc_in< sc_lv<16> > mq_pointerReqFifo_V_1_dout;
    sc_in< sc_logic > mq_pointerReqFifo_V_1_empty_n;
    sc_out< sc_logic > mq_pointerReqFifo_V_1_read;
    sc_in< sc_lv<1> > mq_pointerReqFifo_V_s_dout;
    sc_in< sc_logic > mq_pointerReqFifo_V_s_empty_n;
    sc_out< sc_logic > mq_pointerReqFifo_V_s_read;
    sc_out< sc_lv<16> > mq_pointerRspFifo_V_1_din;
    sc_in< sc_logic > mq_pointerRspFifo_V_1_full_n;
    sc_out< sc_logic > mq_pointerRspFifo_V_1_write;
    sc_out< sc_lv<16> > mq_pointerRspFifo_V_2_din;
    sc_in< sc_logic > mq_pointerRspFifo_V_2_full_n;
    sc_out< sc_logic > mq_pointerRspFifo_V_2_write;
    sc_out< sc_lv<1> > mq_pointerRspFifo_V_s_din;
    sc_in< sc_logic > mq_pointerRspFifo_V_s_full_n;
    sc_out< sc_logic > mq_pointerRspFifo_V_s_write;


    // Module declarations
    mq_pointer_table(sc_module_name name);
    SC_HAS_PROCESS(mq_pointer_table);

    ~mq_pointer_table();

    sc_trace_file* mVcdFile;

    conn_table_conn_table_remote_ud* ptr_table_head_V_U;
    conn_table_conn_table_remote_ud* ptr_table_tail_V_U;
    mq_pointer_table_ptr_table_valid* ptr_table_valid_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > io_acc_block_signal_op6;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_72_p6;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op19;
    sc_signal< sc_lv<1> > tmp_reg_344;
    sc_signal< sc_lv<1> > or_ln146_fu_263_p2;
    sc_signal< bool > ap_predicate_op19_read_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op72;
    sc_signal< sc_lv<1> > tmp_reg_344_pp0_iter1_reg;
    sc_signal< sc_lv<1> > or_ln146_reg_377;
    sc_signal< sc_lv<1> > and_ln149_reg_385;
    sc_signal< bool > ap_predicate_op72_write_state3;
    sc_signal< sc_logic > io_acc_block_signal_op80;
    sc_signal< sc_lv<1> > mq_wait_load_reg_373;
    sc_signal< sc_lv<1> > mq_isLocked_load_reg_369;
    sc_signal< bool > ap_predicate_op80_write_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > mq_lockedKey_V;
    sc_signal< sc_lv<1> > mq_isLocked;
    sc_signal< sc_lv<9> > ptr_table_head_V_address0;
    sc_signal< sc_logic > ptr_table_head_V_ce0;
    sc_signal< sc_logic > ptr_table_head_V_we0;
    sc_signal< sc_lv<16> > ptr_table_head_V_q0;
    sc_signal< sc_lv<9> > ptr_table_tail_V_address0;
    sc_signal< sc_logic > ptr_table_tail_V_ce0;
    sc_signal< sc_logic > ptr_table_tail_V_we0;
    sc_signal< sc_lv<16> > ptr_table_tail_V_q0;
    sc_signal< sc_lv<9> > ptr_table_valid_address0;
    sc_signal< sc_logic > ptr_table_valid_ce0;
    sc_signal< sc_logic > ptr_table_valid_we0;
    sc_signal< sc_lv<1> > ptr_table_valid_q0;
    sc_signal< sc_lv<1> > mq_wait;
    sc_signal< sc_lv<16> > mq_request_key_V;
    sc_signal< sc_logic > mq_pointerUpdFifo_V_s_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > mq_pointerUpdFifo_V_1_blk_n;
    sc_signal< sc_logic > mq_pointerUpdFifo_V_3_blk_n;
    sc_signal< sc_logic > mq_pointerUpdFifo_V_4_blk_n;
    sc_signal< sc_logic > mq_pointerReqFifo_V_1_blk_n;
    sc_signal< sc_logic > mq_pointerReqFifo_V_s_blk_n;
    sc_signal< sc_logic > mq_pointerRspFifo_V_1_blk_n;
    sc_signal< sc_logic > mq_pointerRspFifo_V_2_blk_n;
    sc_signal< sc_logic > mq_pointerRspFifo_V_s_blk_n;
    sc_signal< sc_lv<16> > tmp_key_V_reg_348;
    sc_signal< sc_lv<16> > tmp_entry_head_V_reg_354;
    sc_signal< sc_lv<16> > tmp_entry_tail_V_reg_359;
    sc_signal< sc_lv<1> > tmp_entry_valid_reg_364;
    sc_signal< sc_lv<1> > mq_isLocked_load_load_fu_245_p1;
    sc_signal< sc_lv<1> > mq_wait_load_load_fu_249_p1;
    sc_signal< sc_lv<1> > tmp_lock_fu_273_p1;
    sc_signal< sc_lv<1> > and_ln149_fu_283_p2;
    sc_signal< sc_lv<1> > icmp_ln879_fu_333_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln544_6_fu_289_p1;
    sc_signal< sc_lv<64> > zext_ln544_7_fu_308_p1;
    sc_signal< sc_lv<64> > zext_ln544_fu_327_p1;
    sc_signal< sc_lv<1> > tmp_52_nbreadreq_fu_98_p4;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > xor_ln146_fu_257_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_371;
    sc_signal< bool > ap_condition_375;
    sc_signal< bool > ap_condition_369;
    sc_signal< bool > ap_condition_216;
    sc_signal< bool > ap_condition_229;
    sc_signal< bool > ap_condition_185;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln149_fu_283_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_185();
    void thread_ap_condition_216();
    void thread_ap_condition_229();
    void thread_ap_condition_369();
    void thread_ap_condition_371();
    void thread_ap_condition_375();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_predicate_op19_read_state2();
    void thread_ap_predicate_op72_write_state3();
    void thread_ap_predicate_op80_write_state3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_icmp_ln879_fu_333_p2();
    void thread_io_acc_block_signal_op19();
    void thread_io_acc_block_signal_op6();
    void thread_io_acc_block_signal_op72();
    void thread_io_acc_block_signal_op80();
    void thread_mq_isLocked_load_load_fu_245_p1();
    void thread_mq_pointerReqFifo_V_1_blk_n();
    void thread_mq_pointerReqFifo_V_1_read();
    void thread_mq_pointerReqFifo_V_s_blk_n();
    void thread_mq_pointerReqFifo_V_s_read();
    void thread_mq_pointerRspFifo_V_1_blk_n();
    void thread_mq_pointerRspFifo_V_1_din();
    void thread_mq_pointerRspFifo_V_1_write();
    void thread_mq_pointerRspFifo_V_2_blk_n();
    void thread_mq_pointerRspFifo_V_2_din();
    void thread_mq_pointerRspFifo_V_2_write();
    void thread_mq_pointerRspFifo_V_s_blk_n();
    void thread_mq_pointerRspFifo_V_s_din();
    void thread_mq_pointerRspFifo_V_s_write();
    void thread_mq_pointerUpdFifo_V_1_blk_n();
    void thread_mq_pointerUpdFifo_V_1_read();
    void thread_mq_pointerUpdFifo_V_3_blk_n();
    void thread_mq_pointerUpdFifo_V_3_read();
    void thread_mq_pointerUpdFifo_V_4_blk_n();
    void thread_mq_pointerUpdFifo_V_4_read();
    void thread_mq_pointerUpdFifo_V_s_blk_n();
    void thread_mq_pointerUpdFifo_V_s_read();
    void thread_mq_wait_load_load_fu_249_p1();
    void thread_or_ln146_fu_263_p2();
    void thread_ptr_table_head_V_address0();
    void thread_ptr_table_head_V_ce0();
    void thread_ptr_table_head_V_we0();
    void thread_ptr_table_tail_V_address0();
    void thread_ptr_table_tail_V_ce0();
    void thread_ptr_table_tail_V_we0();
    void thread_ptr_table_valid_address0();
    void thread_ptr_table_valid_ce0();
    void thread_ptr_table_valid_we0();
    void thread_tmp_52_nbreadreq_fu_98_p4();
    void thread_tmp_lock_fu_273_p1();
    void thread_tmp_nbreadreq_fu_72_p6();
    void thread_xor_ln146_fu_257_p2();
    void thread_zext_ln544_6_fu_289_p1();
    void thread_zext_ln544_7_fu_308_p1();
    void thread_zext_ln544_fu_327_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
