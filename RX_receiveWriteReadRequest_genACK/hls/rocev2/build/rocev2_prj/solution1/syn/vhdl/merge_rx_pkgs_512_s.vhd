-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity merge_rx_pkgs_512_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rx_exhNoShiftFifo_V_1_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    rx_exhNoShiftFifo_V_1_empty_n : IN STD_LOGIC;
    rx_exhNoShiftFifo_V_1_read : OUT STD_LOGIC;
    rx_exhNoShiftFifo_V_4_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    rx_exhNoShiftFifo_V_4_empty_n : IN STD_LOGIC;
    rx_exhNoShiftFifo_V_4_read : OUT STD_LOGIC;
    rx_exhNoShiftFifo_V_s_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    rx_exhNoShiftFifo_V_s_empty_n : IN STD_LOGIC;
    rx_exhNoShiftFifo_V_s_read : OUT STD_LOGIC;
    rx_exhNoShiftFifo_V_3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    rx_exhNoShiftFifo_V_3_empty_n : IN STD_LOGIC;
    rx_exhNoShiftFifo_V_3_read : OUT STD_LOGIC;
    rx_rethSift2mergerFi_8_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    rx_rethSift2mergerFi_8_empty_n : IN STD_LOGIC;
    rx_rethSift2mergerFi_8_read : OUT STD_LOGIC;
    rx_rethSift2mergerFi_6_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    rx_rethSift2mergerFi_6_empty_n : IN STD_LOGIC;
    rx_rethSift2mergerFi_6_read : OUT STD_LOGIC;
    rx_rethSift2mergerFi_7_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    rx_rethSift2mergerFi_7_empty_n : IN STD_LOGIC;
    rx_rethSift2mergerFi_7_read : OUT STD_LOGIC;
    rx_rethSift2mergerFi_4_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    rx_rethSift2mergerFi_4_empty_n : IN STD_LOGIC;
    rx_rethSift2mergerFi_4_read : OUT STD_LOGIC;
    rx_aethSift2mergerFi_3_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    rx_aethSift2mergerFi_3_empty_n : IN STD_LOGIC;
    rx_aethSift2mergerFi_3_read : OUT STD_LOGIC;
    rx_aethSift2mergerFi_5_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    rx_aethSift2mergerFi_5_empty_n : IN STD_LOGIC;
    rx_aethSift2mergerFi_5_read : OUT STD_LOGIC;
    rx_aethSift2mergerFi_6_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    rx_aethSift2mergerFi_6_empty_n : IN STD_LOGIC;
    rx_aethSift2mergerFi_6_read : OUT STD_LOGIC;
    rx_pkgShiftTypeFifo_s_8_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    rx_pkgShiftTypeFifo_s_8_empty_n : IN STD_LOGIC;
    rx_pkgShiftTypeFifo_s_8_read : OUT STD_LOGIC;
    m_axis_mem_write_data_TREADY : IN STD_LOGIC;
    m_axis_mem_write_data_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axis_mem_write_data_TVALID : OUT STD_LOGIC;
    m_axis_mem_write_data_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_mem_write_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_mem_write_data_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of merge_rx_pkgs_512_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op8 : STD_LOGIC;
    signal tmp_61_nbreadreq_fu_82_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op8_read_state1 : BOOLEAN;
    signal io_acc_block_signal_op16 : STD_LOGIC;
    signal tmp_60_nbreadreq_fu_108_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op16_read_state1 : BOOLEAN;
    signal io_acc_block_signal_op24 : STD_LOGIC;
    signal tmp_59_nbreadreq_fu_134_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op24_read_state1 : BOOLEAN;
    signal tmp_nbreadreq_fu_156_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op31_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal m_axis_mem_write_data_V_data_V_1_ack_in : STD_LOGIC;
    signal state_3_load_reg_281 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_reg_285 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op38_write_state2 : BOOLEAN;
    signal tmp_60_reg_309 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op40_write_state2 : BOOLEAN;
    signal tmp_59_reg_333 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op42_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal m_axis_mem_write_data_V_data_V_1_ack_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal m_axis_mem_write_data_V_keep_V_1_ack_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal m_axis_mem_write_data_V_last_V_1_ack_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal m_axis_mem_write_data_V_dest_V_1_ack_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal state_3_load_reg_281_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_reg_285_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op58_write_state3 : BOOLEAN;
    signal tmp_60_reg_309_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op62_write_state3 : BOOLEAN;
    signal tmp_59_reg_333_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op66_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal m_axis_mem_write_data_V_data_V_1_data_in : STD_LOGIC_VECTOR (511 downto 0);
    signal m_axis_mem_write_data_V_data_V_1_data_out : STD_LOGIC_VECTOR (511 downto 0);
    signal m_axis_mem_write_data_V_data_V_1_vld_in : STD_LOGIC;
    signal m_axis_mem_write_data_V_data_V_1_vld_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_data_V_1_payload_A : STD_LOGIC_VECTOR (511 downto 0);
    signal m_axis_mem_write_data_V_data_V_1_payload_B : STD_LOGIC_VECTOR (511 downto 0);
    signal m_axis_mem_write_data_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_data_V_1_sel : STD_LOGIC;
    signal m_axis_mem_write_data_V_data_V_1_load_A : STD_LOGIC;
    signal m_axis_mem_write_data_V_data_V_1_load_B : STD_LOGIC;
    signal m_axis_mem_write_data_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_data_in : STD_LOGIC_VECTOR (63 downto 0);
    signal m_axis_mem_write_data_V_keep_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal m_axis_mem_write_data_V_keep_V_1_vld_in : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_vld_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_ack_in : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal m_axis_mem_write_data_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal m_axis_mem_write_data_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_keep_V_1_sel : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_load_A : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_load_B : STD_LOGIC;
    signal m_axis_mem_write_data_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_last_V_1_vld_in : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_vld_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_ack_in : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_last_V_1_sel : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_load_A : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_load_B : STD_LOGIC;
    signal m_axis_mem_write_data_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_dest_V_1_vld_in : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_vld_out : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_ack_in : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_mem_write_data_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal m_axis_mem_write_data_V_dest_V_1_sel : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_load_A : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_load_B : STD_LOGIC;
    signal m_axis_mem_write_data_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal state_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal m_axis_mem_write_data_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rx_pkgShiftTypeFifo_s_8_blk_n : STD_LOGIC;
    signal rx_aethSift2mergerFi_3_blk_n : STD_LOGIC;
    signal rx_aethSift2mergerFi_5_blk_n : STD_LOGIC;
    signal rx_aethSift2mergerFi_6_blk_n : STD_LOGIC;
    signal rx_rethSift2mergerFi_8_blk_n : STD_LOGIC;
    signal rx_rethSift2mergerFi_6_blk_n : STD_LOGIC;
    signal rx_rethSift2mergerFi_7_blk_n : STD_LOGIC;
    signal rx_rethSift2mergerFi_4_blk_n : STD_LOGIC;
    signal rx_exhNoShiftFifo_V_1_blk_n : STD_LOGIC;
    signal rx_exhNoShiftFifo_V_4_blk_n : STD_LOGIC;
    signal rx_exhNoShiftFifo_V_s_blk_n : STD_LOGIC;
    signal rx_exhNoShiftFifo_V_3_blk_n : STD_LOGIC;
    signal tmp_data_V_30_reg_289 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_keep_V_29_reg_294 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_25_fu_205_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_25_reg_299 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_2_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_29_reg_313 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_keep_V_28_reg_318 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_24_fu_221_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_24_reg_323 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_reg_328 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_337 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_keep_V_reg_342 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_fu_237_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_347 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal select_ln2346_1_fu_267_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln2346_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2350_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2346_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2346_fu_253_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_591 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_data_V_1_vld_out = ap_const_logic_1) and (m_axis_mem_write_data_V_data_V_1_ack_out = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_data_V_1_sel_rd <= not(m_axis_mem_write_data_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_1) and (m_axis_mem_write_data_V_data_V_1_ack_in = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_data_V_1_sel_wr <= not(m_axis_mem_write_data_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_data_V_1_ack_out = ap_const_logic_1)) or ((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_0)))) then 
                    m_axis_mem_write_data_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1)) or ((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((m_axis_mem_write_data_V_data_V_1_ack_out = ap_const_logic_1) and (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1)) or (not(((m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_data_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_1))) and (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    m_axis_mem_write_data_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_dest_V_1_vld_out = ap_const_logic_1) and (m_axis_mem_write_data_V_dest_V_1_ack_out = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_dest_V_1_sel_rd <= not(m_axis_mem_write_data_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_dest_V_1_ack_in = ap_const_logic_1) and (m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_dest_V_1_sel_wr <= not(m_axis_mem_write_data_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_dest_V_1_ack_out = ap_const_logic_1)) or ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_0)))) then 
                    m_axis_mem_write_data_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1)) or ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((m_axis_mem_write_data_V_dest_V_1_ack_out = ap_const_logic_1) and (m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1)) or (not(((m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_1))) and (m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    m_axis_mem_write_data_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_keep_V_1_vld_out = ap_const_logic_1) and (m_axis_mem_write_data_V_keep_V_1_ack_out = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_keep_V_1_sel_rd <= not(m_axis_mem_write_data_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_keep_V_1_ack_in = ap_const_logic_1) and (m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_keep_V_1_sel_wr <= not(m_axis_mem_write_data_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_keep_V_1_ack_out = ap_const_logic_1)) or ((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_0)))) then 
                    m_axis_mem_write_data_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1)) or ((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((m_axis_mem_write_data_V_keep_V_1_ack_out = ap_const_logic_1) and (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1)) or (not(((m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_1))) and (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    m_axis_mem_write_data_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_last_V_1_vld_out = ap_const_logic_1) and (m_axis_mem_write_data_V_last_V_1_ack_out = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_last_V_1_sel_rd <= not(m_axis_mem_write_data_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((m_axis_mem_write_data_V_last_V_1_ack_in = ap_const_logic_1) and (m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        m_axis_mem_write_data_V_last_V_1_sel_wr <= not(m_axis_mem_write_data_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    m_axis_mem_write_data_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                m_axis_mem_write_data_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_last_V_1_ack_out = ap_const_logic_1)) or ((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_0)))) then 
                    m_axis_mem_write_data_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1)) or ((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((m_axis_mem_write_data_V_last_V_1_ack_out = ap_const_logic_1) and (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1)) or (not(((m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_0) and (m_axis_mem_write_data_V_last_V_1_ack_out = ap_const_logic_1))) and not(((m_axis_mem_write_data_TREADY = ap_const_logic_0) and (m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_1))) and (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3)) or ((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_2) and (m_axis_mem_write_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    m_axis_mem_write_data_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    m_axis_mem_write_data_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    state_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_156_p3 = ap_const_lv1_1) and (state_3 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                state_3 <= select_ln2346_1_fu_267_p3;
            elsif ((((tmp_60_nbreadreq_fu_108_p6 = ap_const_lv1_1) and (tmp_last_V_24_fu_221_p1 = ap_const_lv1_1) and (state_3 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_last_V_25_fu_205_p1 = ap_const_lv1_1) and (tmp_61_nbreadreq_fu_82_p6 = ap_const_lv1_1) and (state_3 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_last_V_fu_237_p1 = ap_const_lv1_1) and (tmp_59_nbreadreq_fu_134_p5 = ap_const_lv1_1) and (state_3 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                state_3 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_data_V_1_load_A = ap_const_logic_1)) then
                m_axis_mem_write_data_V_data_V_1_payload_A <= m_axis_mem_write_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_data_V_1_load_B = ap_const_logic_1)) then
                m_axis_mem_write_data_V_data_V_1_payload_B <= m_axis_mem_write_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_dest_V_1_load_A = ap_const_logic_1)) then
                m_axis_mem_write_data_V_dest_V_1_payload_A <= m_axis_mem_write_data_V_dest_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_dest_V_1_load_B = ap_const_logic_1)) then
                m_axis_mem_write_data_V_dest_V_1_payload_B <= m_axis_mem_write_data_V_dest_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_keep_V_1_load_A = ap_const_logic_1)) then
                m_axis_mem_write_data_V_keep_V_1_payload_A <= m_axis_mem_write_data_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_keep_V_1_load_B = ap_const_logic_1)) then
                m_axis_mem_write_data_V_keep_V_1_payload_B <= m_axis_mem_write_data_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_last_V_1_load_A = ap_const_logic_1)) then
                m_axis_mem_write_data_V_last_V_1_payload_A <= m_axis_mem_write_data_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((m_axis_mem_write_data_V_last_V_1_load_B = ap_const_logic_1)) then
                m_axis_mem_write_data_V_last_V_1_payload_B <= m_axis_mem_write_data_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                state_3_load_reg_281 <= state_3;
                state_3_load_reg_281_pp0_iter1_reg <= state_3_load_reg_281;
                tmp_59_reg_333_pp0_iter1_reg <= tmp_59_reg_333;
                tmp_60_reg_309_pp0_iter1_reg <= tmp_60_reg_309;
                tmp_61_reg_285_pp0_iter1_reg <= tmp_61_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_3 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_59_reg_333 <= tmp_59_nbreadreq_fu_134_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_3 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_60_reg_309 <= tmp_60_nbreadreq_fu_108_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_3 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_61_reg_285 <= tmp_61_nbreadreq_fu_82_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_60_nbreadreq_fu_108_p6 = ap_const_lv1_1) and (state_3 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_29_reg_313 <= rx_rethSift2mergerFi_8_dout;
                tmp_dest_V_reg_328 <= rx_rethSift2mergerFi_4_dout;
                tmp_keep_V_28_reg_318 <= rx_rethSift2mergerFi_6_dout;
                tmp_last_V_24_reg_323 <= rx_rethSift2mergerFi_7_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_61_nbreadreq_fu_82_p6 = ap_const_lv1_1) and (state_3 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_30_reg_289 <= rx_exhNoShiftFifo_V_1_dout;
                tmp_dest_V_2_reg_304 <= rx_exhNoShiftFifo_V_3_dout;
                tmp_keep_V_29_reg_294 <= rx_exhNoShiftFifo_V_4_dout;
                tmp_last_V_25_reg_299 <= rx_exhNoShiftFifo_V_s_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_59_nbreadreq_fu_134_p5 = ap_const_lv1_1) and (state_3 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_reg_337 <= rx_aethSift2mergerFi_3_dout;
                tmp_keep_V_reg_342 <= rx_aethSift2mergerFi_5_dout;
                tmp_last_V_reg_347 <= rx_aethSift2mergerFi_6_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op16, ap_predicate_op16_read_state1, io_acc_block_signal_op24, ap_predicate_op24_read_state1, rx_pkgShiftTypeFifo_s_8_empty_n, ap_predicate_op31_read_state1, m_axis_mem_write_data_TREADY, m_axis_mem_write_data_V_data_V_1_state, m_axis_mem_write_data_V_keep_V_1_state, m_axis_mem_write_data_V_last_V_1_state, m_axis_mem_write_data_V_dest_V_1_state)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)) or ((rx_pkgShiftTypeFifo_s_8_empty_n = ap_const_logic_0) and (ap_predicate_op31_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1) or ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op16, ap_predicate_op16_read_state1, io_acc_block_signal_op24, ap_predicate_op24_read_state1, rx_pkgShiftTypeFifo_s_8_empty_n, ap_predicate_op31_read_state1, m_axis_mem_write_data_TREADY, ap_block_state2_io, m_axis_mem_write_data_V_data_V_1_state, m_axis_mem_write_data_V_keep_V_1_state, m_axis_mem_write_data_V_last_V_1_state, m_axis_mem_write_data_V_dest_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)) or ((rx_pkgShiftTypeFifo_s_8_empty_n = ap_const_logic_0) and (ap_predicate_op31_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1) or ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op16, ap_predicate_op16_read_state1, io_acc_block_signal_op24, ap_predicate_op24_read_state1, rx_pkgShiftTypeFifo_s_8_empty_n, ap_predicate_op31_read_state1, m_axis_mem_write_data_TREADY, ap_block_state2_io, m_axis_mem_write_data_V_data_V_1_state, m_axis_mem_write_data_V_keep_V_1_state, m_axis_mem_write_data_V_last_V_1_state, m_axis_mem_write_data_V_dest_V_1_state, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)) or ((rx_pkgShiftTypeFifo_s_8_empty_n = ap_const_logic_0) and (ap_predicate_op31_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1) or ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op8, ap_predicate_op8_read_state1, io_acc_block_signal_op16, ap_predicate_op16_read_state1, io_acc_block_signal_op24, ap_predicate_op24_read_state1, rx_pkgShiftTypeFifo_s_8_empty_n, ap_predicate_op31_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op16 = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op8 = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)) or ((rx_pkgShiftTypeFifo_s_8_empty_n = ap_const_logic_0) and (ap_predicate_op31_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(m_axis_mem_write_data_V_data_V_1_ack_in, ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2)
    begin
                ap_block_state2_io <= (((m_axis_mem_write_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op42_write_state2 = ap_const_boolean_1)) or ((m_axis_mem_write_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)) or ((m_axis_mem_write_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axis_mem_write_data_V_data_V_1_ack_in, ap_predicate_op58_write_state3, ap_predicate_op62_write_state3, ap_predicate_op66_write_state3)
    begin
                ap_block_state3_io <= (((m_axis_mem_write_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op66_write_state3 = ap_const_boolean_1)) or ((m_axis_mem_write_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op62_write_state3 = ap_const_boolean_1)) or ((m_axis_mem_write_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op58_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(m_axis_mem_write_data_TREADY, m_axis_mem_write_data_V_data_V_1_state, m_axis_mem_write_data_V_keep_V_1_state, m_axis_mem_write_data_V_last_V_1_state, m_axis_mem_write_data_V_dest_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1) or (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1) or ((m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)) or ((m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_3) and (m_axis_mem_write_data_TREADY = ap_const_logic_0)));
    end process;


    ap_condition_591_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_591 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op16_read_state1_assign_proc : process(tmp_60_nbreadreq_fu_108_p6, state_3)
    begin
                ap_predicate_op16_read_state1 <= ((tmp_60_nbreadreq_fu_108_p6 = ap_const_lv1_1) and (state_3 = ap_const_lv2_2));
    end process;


    ap_predicate_op24_read_state1_assign_proc : process(tmp_59_nbreadreq_fu_134_p5, state_3)
    begin
                ap_predicate_op24_read_state1 <= ((tmp_59_nbreadreq_fu_134_p5 = ap_const_lv1_1) and (state_3 = ap_const_lv2_1));
    end process;


    ap_predicate_op31_read_state1_assign_proc : process(tmp_nbreadreq_fu_156_p3, state_3)
    begin
                ap_predicate_op31_read_state1 <= ((tmp_nbreadreq_fu_156_p3 = ap_const_lv1_1) and (state_3 = ap_const_lv2_0));
    end process;


    ap_predicate_op38_write_state2_assign_proc : process(state_3_load_reg_281, tmp_61_reg_285)
    begin
                ap_predicate_op38_write_state2 <= ((tmp_61_reg_285 = ap_const_lv1_1) and (state_3_load_reg_281 = ap_const_lv2_3));
    end process;


    ap_predicate_op40_write_state2_assign_proc : process(state_3_load_reg_281, tmp_60_reg_309)
    begin
                ap_predicate_op40_write_state2 <= ((state_3_load_reg_281 = ap_const_lv2_2) and (tmp_60_reg_309 = ap_const_lv1_1));
    end process;


    ap_predicate_op42_write_state2_assign_proc : process(state_3_load_reg_281, tmp_59_reg_333)
    begin
                ap_predicate_op42_write_state2 <= ((tmp_59_reg_333 = ap_const_lv1_1) and (state_3_load_reg_281 = ap_const_lv2_1));
    end process;


    ap_predicate_op58_write_state3_assign_proc : process(state_3_load_reg_281_pp0_iter1_reg, tmp_61_reg_285_pp0_iter1_reg)
    begin
                ap_predicate_op58_write_state3 <= ((tmp_61_reg_285_pp0_iter1_reg = ap_const_lv1_1) and (state_3_load_reg_281_pp0_iter1_reg = ap_const_lv2_3));
    end process;


    ap_predicate_op62_write_state3_assign_proc : process(state_3_load_reg_281_pp0_iter1_reg, tmp_60_reg_309_pp0_iter1_reg)
    begin
                ap_predicate_op62_write_state3 <= ((state_3_load_reg_281_pp0_iter1_reg = ap_const_lv2_2) and (tmp_60_reg_309_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op66_write_state3_assign_proc : process(state_3_load_reg_281_pp0_iter1_reg, tmp_59_reg_333_pp0_iter1_reg)
    begin
                ap_predicate_op66_write_state3 <= ((tmp_59_reg_333_pp0_iter1_reg = ap_const_lv1_1) and (state_3_load_reg_281_pp0_iter1_reg = ap_const_lv2_1));
    end process;


    ap_predicate_op8_read_state1_assign_proc : process(tmp_61_nbreadreq_fu_82_p6, state_3)
    begin
                ap_predicate_op8_read_state1 <= ((tmp_61_nbreadreq_fu_82_p6 = ap_const_lv1_1) and (state_3 = ap_const_lv2_3));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln2346_fu_241_p2 <= "1" when (rx_pkgShiftTypeFifo_s_8_dout = ap_const_lv2_0) else "0";
    icmp_ln2350_fu_247_p2 <= "1" when (rx_pkgShiftTypeFifo_s_8_dout = ap_const_lv2_1) else "0";
    io_acc_block_signal_op16 <= (rx_rethSift2mergerFi_8_empty_n and rx_rethSift2mergerFi_7_empty_n and rx_rethSift2mergerFi_6_empty_n and rx_rethSift2mergerFi_4_empty_n);
    io_acc_block_signal_op24 <= (rx_aethSift2mergerFi_6_empty_n and rx_aethSift2mergerFi_5_empty_n and rx_aethSift2mergerFi_3_empty_n);
    io_acc_block_signal_op8 <= (rx_exhNoShiftFifo_V_s_empty_n and rx_exhNoShiftFifo_V_4_empty_n and rx_exhNoShiftFifo_V_3_empty_n and rx_exhNoShiftFifo_V_1_empty_n);
    m_axis_mem_write_data_TDATA <= m_axis_mem_write_data_V_data_V_1_data_out;

    m_axis_mem_write_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, m_axis_mem_write_data_V_data_V_1_state, ap_predicate_op58_write_state3, ap_predicate_op62_write_state3, ap_predicate_op66_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op66_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op62_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op58_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op42_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)))) then 
            m_axis_mem_write_data_TDATA_blk_n <= m_axis_mem_write_data_V_data_V_1_state(1);
        else 
            m_axis_mem_write_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_mem_write_data_TDEST <= m_axis_mem_write_data_V_dest_V_1_data_out;
    m_axis_mem_write_data_TKEEP <= m_axis_mem_write_data_V_keep_V_1_data_out;
    m_axis_mem_write_data_TLAST <= m_axis_mem_write_data_V_last_V_1_data_out;
    m_axis_mem_write_data_TVALID <= m_axis_mem_write_data_V_dest_V_1_state(0);
    m_axis_mem_write_data_V_data_V_1_ack_in <= m_axis_mem_write_data_V_data_V_1_state(1);
    m_axis_mem_write_data_V_data_V_1_ack_out <= m_axis_mem_write_data_TREADY;

    m_axis_mem_write_data_V_data_V_1_data_in_assign_proc : process(ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, tmp_data_V_30_reg_289, tmp_data_V_29_reg_313, tmp_data_V_reg_337, ap_condition_591)
    begin
        if ((ap_const_boolean_1 = ap_condition_591)) then
            if ((ap_predicate_op42_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_data_V_1_data_in <= tmp_data_V_reg_337;
            elsif ((ap_predicate_op40_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_data_V_1_data_in <= tmp_data_V_29_reg_313;
            elsif ((ap_predicate_op38_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_data_V_1_data_in <= tmp_data_V_30_reg_289;
            else 
                m_axis_mem_write_data_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axis_mem_write_data_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axis_mem_write_data_V_data_V_1_data_out_assign_proc : process(m_axis_mem_write_data_V_data_V_1_payload_A, m_axis_mem_write_data_V_data_V_1_payload_B, m_axis_mem_write_data_V_data_V_1_sel)
    begin
        if ((m_axis_mem_write_data_V_data_V_1_sel = ap_const_logic_1)) then 
            m_axis_mem_write_data_V_data_V_1_data_out <= m_axis_mem_write_data_V_data_V_1_payload_B;
        else 
            m_axis_mem_write_data_V_data_V_1_data_out <= m_axis_mem_write_data_V_data_V_1_payload_A;
        end if; 
    end process;

    m_axis_mem_write_data_V_data_V_1_load_A <= (m_axis_mem_write_data_V_data_V_1_state_cmp_full and not(m_axis_mem_write_data_V_data_V_1_sel_wr));
    m_axis_mem_write_data_V_data_V_1_load_B <= (m_axis_mem_write_data_V_data_V_1_state_cmp_full and m_axis_mem_write_data_V_data_V_1_sel_wr);
    m_axis_mem_write_data_V_data_V_1_sel <= m_axis_mem_write_data_V_data_V_1_sel_rd;
    m_axis_mem_write_data_V_data_V_1_state_cmp_full <= '0' when (m_axis_mem_write_data_V_data_V_1_state = ap_const_lv2_1) else '1';

    m_axis_mem_write_data_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op42_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)))) then 
            m_axis_mem_write_data_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            m_axis_mem_write_data_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_mem_write_data_V_data_V_1_vld_out <= m_axis_mem_write_data_V_data_V_1_state(0);
    m_axis_mem_write_data_V_dest_V_1_ack_in <= m_axis_mem_write_data_V_dest_V_1_state(1);
    m_axis_mem_write_data_V_dest_V_1_ack_out <= m_axis_mem_write_data_TREADY;

    m_axis_mem_write_data_V_dest_V_1_data_in_assign_proc : process(ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, tmp_dest_V_2_reg_304, tmp_dest_V_reg_328, ap_condition_591)
    begin
        if ((ap_const_boolean_1 = ap_condition_591)) then
            if ((ap_predicate_op42_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_dest_V_1_data_in <= ap_const_lv1_0;
            elsif ((ap_predicate_op40_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_dest_V_1_data_in <= tmp_dest_V_reg_328;
            elsif ((ap_predicate_op38_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_dest_V_1_data_in <= tmp_dest_V_2_reg_304;
            else 
                m_axis_mem_write_data_V_dest_V_1_data_in <= "X";
            end if;
        else 
            m_axis_mem_write_data_V_dest_V_1_data_in <= "X";
        end if; 
    end process;


    m_axis_mem_write_data_V_dest_V_1_data_out_assign_proc : process(m_axis_mem_write_data_V_dest_V_1_payload_A, m_axis_mem_write_data_V_dest_V_1_payload_B, m_axis_mem_write_data_V_dest_V_1_sel)
    begin
        if ((m_axis_mem_write_data_V_dest_V_1_sel = ap_const_logic_1)) then 
            m_axis_mem_write_data_V_dest_V_1_data_out <= m_axis_mem_write_data_V_dest_V_1_payload_B;
        else 
            m_axis_mem_write_data_V_dest_V_1_data_out <= m_axis_mem_write_data_V_dest_V_1_payload_A;
        end if; 
    end process;

    m_axis_mem_write_data_V_dest_V_1_load_A <= (m_axis_mem_write_data_V_dest_V_1_state_cmp_full and not(m_axis_mem_write_data_V_dest_V_1_sel_wr));
    m_axis_mem_write_data_V_dest_V_1_load_B <= (m_axis_mem_write_data_V_dest_V_1_state_cmp_full and m_axis_mem_write_data_V_dest_V_1_sel_wr);
    m_axis_mem_write_data_V_dest_V_1_sel <= m_axis_mem_write_data_V_dest_V_1_sel_rd;
    m_axis_mem_write_data_V_dest_V_1_state_cmp_full <= '0' when (m_axis_mem_write_data_V_dest_V_1_state = ap_const_lv2_1) else '1';

    m_axis_mem_write_data_V_dest_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op42_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)))) then 
            m_axis_mem_write_data_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            m_axis_mem_write_data_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_mem_write_data_V_dest_V_1_vld_out <= m_axis_mem_write_data_V_dest_V_1_state(0);
    m_axis_mem_write_data_V_keep_V_1_ack_in <= m_axis_mem_write_data_V_keep_V_1_state(1);
    m_axis_mem_write_data_V_keep_V_1_ack_out <= m_axis_mem_write_data_TREADY;

    m_axis_mem_write_data_V_keep_V_1_data_in_assign_proc : process(ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, tmp_keep_V_29_reg_294, tmp_keep_V_28_reg_318, tmp_keep_V_reg_342, ap_condition_591)
    begin
        if ((ap_const_boolean_1 = ap_condition_591)) then
            if ((ap_predicate_op42_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_keep_V_1_data_in <= tmp_keep_V_reg_342;
            elsif ((ap_predicate_op40_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_keep_V_1_data_in <= tmp_keep_V_28_reg_318;
            elsif ((ap_predicate_op38_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_keep_V_1_data_in <= tmp_keep_V_29_reg_294;
            else 
                m_axis_mem_write_data_V_keep_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axis_mem_write_data_V_keep_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axis_mem_write_data_V_keep_V_1_data_out_assign_proc : process(m_axis_mem_write_data_V_keep_V_1_payload_A, m_axis_mem_write_data_V_keep_V_1_payload_B, m_axis_mem_write_data_V_keep_V_1_sel)
    begin
        if ((m_axis_mem_write_data_V_keep_V_1_sel = ap_const_logic_1)) then 
            m_axis_mem_write_data_V_keep_V_1_data_out <= m_axis_mem_write_data_V_keep_V_1_payload_B;
        else 
            m_axis_mem_write_data_V_keep_V_1_data_out <= m_axis_mem_write_data_V_keep_V_1_payload_A;
        end if; 
    end process;

    m_axis_mem_write_data_V_keep_V_1_load_A <= (m_axis_mem_write_data_V_keep_V_1_state_cmp_full and not(m_axis_mem_write_data_V_keep_V_1_sel_wr));
    m_axis_mem_write_data_V_keep_V_1_load_B <= (m_axis_mem_write_data_V_keep_V_1_state_cmp_full and m_axis_mem_write_data_V_keep_V_1_sel_wr);
    m_axis_mem_write_data_V_keep_V_1_sel <= m_axis_mem_write_data_V_keep_V_1_sel_rd;
    m_axis_mem_write_data_V_keep_V_1_state_cmp_full <= '0' when (m_axis_mem_write_data_V_keep_V_1_state = ap_const_lv2_1) else '1';

    m_axis_mem_write_data_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op42_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)))) then 
            m_axis_mem_write_data_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            m_axis_mem_write_data_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_mem_write_data_V_keep_V_1_vld_out <= m_axis_mem_write_data_V_keep_V_1_state(0);
    m_axis_mem_write_data_V_last_V_1_ack_in <= m_axis_mem_write_data_V_last_V_1_state(1);
    m_axis_mem_write_data_V_last_V_1_ack_out <= m_axis_mem_write_data_TREADY;

    m_axis_mem_write_data_V_last_V_1_data_in_assign_proc : process(ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, tmp_last_V_25_reg_299, tmp_last_V_24_reg_323, tmp_last_V_reg_347, ap_condition_591)
    begin
        if ((ap_const_boolean_1 = ap_condition_591)) then
            if ((ap_predicate_op42_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_last_V_1_data_in <= tmp_last_V_reg_347;
            elsif ((ap_predicate_op40_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_last_V_1_data_in <= tmp_last_V_24_reg_323;
            elsif ((ap_predicate_op38_write_state2 = ap_const_boolean_1)) then 
                m_axis_mem_write_data_V_last_V_1_data_in <= tmp_last_V_25_reg_299;
            else 
                m_axis_mem_write_data_V_last_V_1_data_in <= "X";
            end if;
        else 
            m_axis_mem_write_data_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    m_axis_mem_write_data_V_last_V_1_data_out_assign_proc : process(m_axis_mem_write_data_V_last_V_1_payload_A, m_axis_mem_write_data_V_last_V_1_payload_B, m_axis_mem_write_data_V_last_V_1_sel)
    begin
        if ((m_axis_mem_write_data_V_last_V_1_sel = ap_const_logic_1)) then 
            m_axis_mem_write_data_V_last_V_1_data_out <= m_axis_mem_write_data_V_last_V_1_payload_B;
        else 
            m_axis_mem_write_data_V_last_V_1_data_out <= m_axis_mem_write_data_V_last_V_1_payload_A;
        end if; 
    end process;

    m_axis_mem_write_data_V_last_V_1_load_A <= (m_axis_mem_write_data_V_last_V_1_state_cmp_full and not(m_axis_mem_write_data_V_last_V_1_sel_wr));
    m_axis_mem_write_data_V_last_V_1_load_B <= (m_axis_mem_write_data_V_last_V_1_state_cmp_full and m_axis_mem_write_data_V_last_V_1_sel_wr);
    m_axis_mem_write_data_V_last_V_1_sel <= m_axis_mem_write_data_V_last_V_1_sel_rd;
    m_axis_mem_write_data_V_last_V_1_state_cmp_full <= '0' when (m_axis_mem_write_data_V_last_V_1_state = ap_const_lv2_1) else '1';

    m_axis_mem_write_data_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op38_write_state2, ap_predicate_op40_write_state2, ap_predicate_op42_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op42_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op40_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)))) then 
            m_axis_mem_write_data_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            m_axis_mem_write_data_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    m_axis_mem_write_data_V_last_V_1_vld_out <= m_axis_mem_write_data_V_last_V_1_state(0);
    or_ln2346_fu_261_p2 <= (icmp_ln2350_fu_247_p2 or icmp_ln2346_fu_241_p2);

    rx_aethSift2mergerFi_3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_aethSift2mergerFi_3_empty_n, ap_predicate_op24_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1))) then 
            rx_aethSift2mergerFi_3_blk_n <= rx_aethSift2mergerFi_3_empty_n;
        else 
            rx_aethSift2mergerFi_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_aethSift2mergerFi_3_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op24_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1))) then 
            rx_aethSift2mergerFi_3_read <= ap_const_logic_1;
        else 
            rx_aethSift2mergerFi_3_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_aethSift2mergerFi_5_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_aethSift2mergerFi_5_empty_n, ap_predicate_op24_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1))) then 
            rx_aethSift2mergerFi_5_blk_n <= rx_aethSift2mergerFi_5_empty_n;
        else 
            rx_aethSift2mergerFi_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_aethSift2mergerFi_5_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op24_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1))) then 
            rx_aethSift2mergerFi_5_read <= ap_const_logic_1;
        else 
            rx_aethSift2mergerFi_5_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_aethSift2mergerFi_6_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_aethSift2mergerFi_6_empty_n, ap_predicate_op24_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1))) then 
            rx_aethSift2mergerFi_6_blk_n <= rx_aethSift2mergerFi_6_empty_n;
        else 
            rx_aethSift2mergerFi_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_aethSift2mergerFi_6_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op24_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_read_state1 = ap_const_boolean_1))) then 
            rx_aethSift2mergerFi_6_read <= ap_const_logic_1;
        else 
            rx_aethSift2mergerFi_6_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_exhNoShiftFifo_V_1_empty_n, ap_predicate_op8_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_1_blk_n <= rx_exhNoShiftFifo_V_1_empty_n;
        else 
            rx_exhNoShiftFifo_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_1_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_1_read <= ap_const_logic_1;
        else 
            rx_exhNoShiftFifo_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_exhNoShiftFifo_V_3_empty_n, ap_predicate_op8_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_3_blk_n <= rx_exhNoShiftFifo_V_3_empty_n;
        else 
            rx_exhNoShiftFifo_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_3_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_3_read <= ap_const_logic_1;
        else 
            rx_exhNoShiftFifo_V_3_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_exhNoShiftFifo_V_4_empty_n, ap_predicate_op8_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_4_blk_n <= rx_exhNoShiftFifo_V_4_empty_n;
        else 
            rx_exhNoShiftFifo_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_4_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_4_read <= ap_const_logic_1;
        else 
            rx_exhNoShiftFifo_V_4_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_exhNoShiftFifo_V_s_empty_n, ap_predicate_op8_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_s_blk_n <= rx_exhNoShiftFifo_V_s_empty_n;
        else 
            rx_exhNoShiftFifo_V_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_exhNoShiftFifo_V_s_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1))) then 
            rx_exhNoShiftFifo_V_s_read <= ap_const_logic_1;
        else 
            rx_exhNoShiftFifo_V_s_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_pkgShiftTypeFifo_s_8_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_pkgShiftTypeFifo_s_8_empty_n, ap_predicate_op31_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op31_read_state1 = ap_const_boolean_1))) then 
            rx_pkgShiftTypeFifo_s_8_blk_n <= rx_pkgShiftTypeFifo_s_8_empty_n;
        else 
            rx_pkgShiftTypeFifo_s_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_pkgShiftTypeFifo_s_8_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op31_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op31_read_state1 = ap_const_boolean_1))) then 
            rx_pkgShiftTypeFifo_s_8_read <= ap_const_logic_1;
        else 
            rx_pkgShiftTypeFifo_s_8_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_rethSift2mergerFi_4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_rethSift2mergerFi_4_empty_n, ap_predicate_op16_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_4_blk_n <= rx_rethSift2mergerFi_4_empty_n;
        else 
            rx_rethSift2mergerFi_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_rethSift2mergerFi_4_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op16_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_4_read <= ap_const_logic_1;
        else 
            rx_rethSift2mergerFi_4_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_rethSift2mergerFi_6_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_rethSift2mergerFi_6_empty_n, ap_predicate_op16_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_6_blk_n <= rx_rethSift2mergerFi_6_empty_n;
        else 
            rx_rethSift2mergerFi_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_rethSift2mergerFi_6_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op16_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_6_read <= ap_const_logic_1;
        else 
            rx_rethSift2mergerFi_6_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_rethSift2mergerFi_7_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_rethSift2mergerFi_7_empty_n, ap_predicate_op16_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_7_blk_n <= rx_rethSift2mergerFi_7_empty_n;
        else 
            rx_rethSift2mergerFi_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_rethSift2mergerFi_7_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op16_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_7_read <= ap_const_logic_1;
        else 
            rx_rethSift2mergerFi_7_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_rethSift2mergerFi_8_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_rethSift2mergerFi_8_empty_n, ap_predicate_op16_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_8_blk_n <= rx_rethSift2mergerFi_8_empty_n;
        else 
            rx_rethSift2mergerFi_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_rethSift2mergerFi_8_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op16_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            rx_rethSift2mergerFi_8_read <= ap_const_logic_1;
        else 
            rx_rethSift2mergerFi_8_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln2346_1_fu_267_p3 <= 
        select_ln2346_fu_253_p3 when (or_ln2346_fu_261_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln2346_fu_253_p3 <= 
        ap_const_lv2_1 when (icmp_ln2346_fu_241_p2(0) = '1') else 
        ap_const_lv2_2;
    tmp_59_nbreadreq_fu_134_p5 <= (0=>(rx_aethSift2mergerFi_6_empty_n and rx_aethSift2mergerFi_5_empty_n and rx_aethSift2mergerFi_3_empty_n), others=>'-');
    tmp_60_nbreadreq_fu_108_p6 <= (0=>(rx_rethSift2mergerFi_8_empty_n and rx_rethSift2mergerFi_7_empty_n and rx_rethSift2mergerFi_6_empty_n and rx_rethSift2mergerFi_4_empty_n), others=>'-');
    tmp_61_nbreadreq_fu_82_p6 <= (0=>(rx_exhNoShiftFifo_V_s_empty_n and rx_exhNoShiftFifo_V_4_empty_n and rx_exhNoShiftFifo_V_3_empty_n and rx_exhNoShiftFifo_V_1_empty_n), others=>'-');
    tmp_last_V_24_fu_221_p1 <= rx_rethSift2mergerFi_7_dout;
    tmp_last_V_25_fu_205_p1 <= rx_exhNoShiftFifo_V_s_dout;
    tmp_last_V_fu_237_p1 <= rx_aethSift2mergerFi_6_dout;
    tmp_nbreadreq_fu_156_p3 <= (0=>(rx_pkgShiftTypeFifo_s_8_empty_n), others=>'-');
end behav;
