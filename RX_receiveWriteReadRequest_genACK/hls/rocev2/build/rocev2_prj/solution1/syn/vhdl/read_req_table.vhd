-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity read_req_table is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tx_readReqTable_upd_s_0_dout : IN STD_LOGIC_VECTOR (39 downto 0);
    tx_readReqTable_upd_s_0_empty_n : IN STD_LOGIC;
    tx_readReqTable_upd_s_0_read : OUT STD_LOGIC;
    rx_readReqTable_upd_1_dout : IN STD_LOGIC_VECTOR (40 downto 0);
    rx_readReqTable_upd_1_empty_n : IN STD_LOGIC;
    rx_readReqTable_upd_1_read : OUT STD_LOGIC );
end;


architecture behav of read_req_table is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_52_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_nbreadreq_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op17_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal req_table_max_fwd_re_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal req_table_max_fwd_re_ce1 : STD_LOGIC;
    signal req_table_max_fwd_re_we1 : STD_LOGIC;
    signal req_table_max_fwd_re_d1 : STD_LOGIC_VECTOR (23 downto 0);
    signal req_table_oldest_out_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal req_table_oldest_out_ce1 : STD_LOGIC;
    signal req_table_oldest_out_we1 : STD_LOGIC;
    signal req_table_oldest_out_d1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tx_readReqTable_upd_s_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rx_readReqTable_upd_1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln544_fu_129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_3_fu_157_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_fu_114_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln321_3_fu_134_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component read_req_table_req_table_max_fwd_re IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    req_table_max_fwd_re_U : component read_req_table_req_table_max_fwd_re
    generic map (
        DataWidth => 24,
        AddressRange => 500,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address1 => req_table_max_fwd_re_address1,
        ce1 => req_table_max_fwd_re_ce1,
        we1 => req_table_max_fwd_re_we1,
        d1 => req_table_max_fwd_re_d1);

    req_table_oldest_out_U : component read_req_table_req_table_max_fwd_re
    generic map (
        DataWidth => 24,
        AddressRange => 500,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address1 => req_table_oldest_out_address1,
        ce1 => req_table_oldest_out_ce1,
        we1 => req_table_oldest_out_we1,
        d1 => req_table_oldest_out_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_162 <= tmp_nbreadreq_fu_52_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, tx_readReqTable_upd_s_0_empty_n, tmp_nbreadreq_fu_52_p3, rx_readReqTable_upd_1_empty_n, ap_predicate_op17_read_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((rx_readReqTable_upd_1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op17_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_52_p3 = ap_const_lv1_1) and (tx_readReqTable_upd_s_0_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, tx_readReqTable_upd_s_0_empty_n, tmp_nbreadreq_fu_52_p3, rx_readReqTable_upd_1_empty_n, ap_predicate_op17_read_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((rx_readReqTable_upd_1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op17_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_52_p3 = ap_const_lv1_1) and (tx_readReqTable_upd_s_0_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, tx_readReqTable_upd_s_0_empty_n, tmp_nbreadreq_fu_52_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_52_p3 = ap_const_lv1_1) and (tx_readReqTable_upd_s_0_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(rx_readReqTable_upd_1_empty_n, ap_predicate_op17_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((rx_readReqTable_upd_1_empty_n = ap_const_logic_0) and (ap_predicate_op17_read_state2 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op17_read_state2_assign_proc : process(tmp_reg_162, tmp_34_nbreadreq_fu_66_p3)
    begin
                ap_predicate_op17_read_state2 <= ((tmp_reg_162 = ap_const_lv1_0) and (tmp_34_nbreadreq_fu_66_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    req_table_max_fwd_re_address1 <= zext_ln544_fu_129_p1(9 - 1 downto 0);

    req_table_max_fwd_re_ce1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            req_table_max_fwd_re_ce1 <= ap_const_logic_1;
        else 
            req_table_max_fwd_re_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    req_table_max_fwd_re_d1 <= tx_readReqTable_upd_s_0_dout(39 downto 16);

    req_table_max_fwd_re_we1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_52_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_52_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            req_table_max_fwd_re_we1 <= ap_const_logic_1;
        else 
            req_table_max_fwd_re_we1 <= ap_const_logic_0;
        end if; 
    end process;

    req_table_oldest_out_address1 <= zext_ln544_3_fu_157_p1(9 - 1 downto 0);

    req_table_oldest_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            req_table_oldest_out_ce1 <= ap_const_logic_1;
        else 
            req_table_oldest_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    req_table_oldest_out_d1 <= rx_readReqTable_upd_1_dout(39 downto 16);

    req_table_oldest_out_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_162, tmp_34_nbreadreq_fu_66_p3, ap_block_pp0_stage0_11001, tmp_35_fu_149_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_162 = ap_const_lv1_0) and (tmp_34_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tmp_35_fu_149_p3 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            req_table_oldest_out_we1 <= ap_const_logic_1;
        else 
            req_table_oldest_out_we1 <= ap_const_logic_0;
        end if; 
    end process;


    rx_readReqTable_upd_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rx_readReqTable_upd_1_empty_n, ap_predicate_op17_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state2 = ap_const_boolean_1))) then 
            rx_readReqTable_upd_1_blk_n <= rx_readReqTable_upd_1_empty_n;
        else 
            rx_readReqTable_upd_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_readReqTable_upd_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op17_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op17_read_state2 = ap_const_boolean_1))) then 
            rx_readReqTable_upd_1_read <= ap_const_logic_1;
        else 
            rx_readReqTable_upd_1_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_34_nbreadreq_fu_66_p3 <= (0=>(rx_readReqTable_upd_1_empty_n), others=>'-');
    tmp_35_fu_149_p3 <= rx_readReqTable_upd_1_dout(40 downto 40);
    tmp_nbreadreq_fu_52_p3 <= (0=>(tx_readReqTable_upd_s_0_empty_n), others=>'-');
    trunc_ln321_3_fu_134_p1 <= rx_readReqTable_upd_1_dout(16 - 1 downto 0);
    trunc_ln321_fu_114_p1 <= tx_readReqTable_upd_s_0_dout(16 - 1 downto 0);

    tx_readReqTable_upd_s_0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_readReqTable_upd_s_0_empty_n, tmp_nbreadreq_fu_52_p3, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_nbreadreq_fu_52_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx_readReqTable_upd_s_0_blk_n <= tx_readReqTable_upd_s_0_empty_n;
        else 
            tx_readReqTable_upd_s_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_readReqTable_upd_s_0_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_52_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_52_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx_readReqTable_upd_s_0_read <= ap_const_logic_1;
        else 
            tx_readReqTable_upd_s_0_read <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln544_3_fu_157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln321_3_fu_134_p1),64));
    zext_ln544_fu_129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln321_fu_114_p1),64));
end behav;
