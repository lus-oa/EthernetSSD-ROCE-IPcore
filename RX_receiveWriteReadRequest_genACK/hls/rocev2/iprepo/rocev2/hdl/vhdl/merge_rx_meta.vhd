-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity merge_rx_meta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rx_ip2udpMetaFifo_V_s_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rx_ip2udpMetaFifo_V_s_empty_n : IN STD_LOGIC;
    rx_ip2udpMetaFifo_V_s_read : OUT STD_LOGIC;
    rx_ip2udpMetaFifo_V_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    rx_ip2udpMetaFifo_V_1_empty_n : IN STD_LOGIC;
    rx_ip2udpMetaFifo_V_1_read : OUT STD_LOGIC;
    rx_udpMetaFifo_V_dout : IN STD_LOGIC_VECTOR (48 downto 0);
    rx_udpMetaFifo_V_empty_n : IN STD_LOGIC;
    rx_udpMetaFifo_V_read : OUT STD_LOGIC;
    rx_ipUdpMetaFifo_V_t_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    rx_ipUdpMetaFifo_V_t_1_full_n : IN STD_LOGIC;
    rx_ipUdpMetaFifo_V_t_1_write : OUT STD_LOGIC;
    rx_ipUdpMetaFifo_V_t_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    rx_ipUdpMetaFifo_V_t_full_n : IN STD_LOGIC;
    rx_ipUdpMetaFifo_V_t_write : OUT STD_LOGIC;
    rx_ipUdpMetaFifo_V_m_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    rx_ipUdpMetaFifo_V_m_full_n : IN STD_LOGIC;
    rx_ipUdpMetaFifo_V_m_write : OUT STD_LOGIC;
    rx_ipUdpMetaFifo_V_l_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    rx_ipUdpMetaFifo_V_l_full_n : IN STD_LOGIC;
    rx_ipUdpMetaFifo_V_l_write : OUT STD_LOGIC );
end;


architecture behav of merge_rx_meta is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op7 : STD_LOGIC;
    signal tmp_nbreadreq_fu_54_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_nbreadreq_fu_64_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op7_read_state1 : BOOLEAN;
    signal ap_predicate_op9_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op24 : STD_LOGIC;
    signal tmp_reg_142 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_reg_146 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_170 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op24_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal rx_ip2udpMetaFifo_V_s_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rx_ip2udpMetaFifo_V_1_blk_n : STD_LOGIC;
    signal rx_udpMetaFifo_V_blk_n : STD_LOGIC;
    signal rx_ipUdpMetaFifo_V_t_1_blk_n : STD_LOGIC;
    signal rx_ipUdpMetaFifo_V_t_blk_n : STD_LOGIC;
    signal rx_ipUdpMetaFifo_V_m_blk_n : STD_LOGIC;
    signal rx_ipUdpMetaFifo_V_l_blk_n : STD_LOGIC;
    signal tmp_their_address_V_reg_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_their_port_V_fu_106_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_their_port_V_reg_155 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_my_port_V_reg_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_length_V_reg_165 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_54_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_64_reg_146 <= tmp_64_nbreadreq_fu_64_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_64_nbreadreq_fu_64_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_54_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_65_reg_170 <= rx_udpMetaFifo_V_dout(48 downto 48);
                tmp_length_V_reg_165 <= rx_udpMetaFifo_V_dout(47 downto 32);
                tmp_my_port_V_reg_160 <= rx_udpMetaFifo_V_dout(31 downto 16);
                tmp_their_address_V_reg_150 <= rx_ip2udpMetaFifo_V_s_dout;
                tmp_their_port_V_reg_155 <= tmp_their_port_V_fu_106_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_142 <= tmp_nbreadreq_fu_54_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op7, ap_predicate_op7_read_state1, rx_udpMetaFifo_V_empty_n, ap_predicate_op9_read_state1, io_acc_block_signal_op24, ap_predicate_op24_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op24_write_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rx_udpMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op7 = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op7, ap_predicate_op7_read_state1, rx_udpMetaFifo_V_empty_n, ap_predicate_op9_read_state1, io_acc_block_signal_op24, ap_predicate_op24_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op24_write_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rx_udpMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op7 = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op7, ap_predicate_op7_read_state1, rx_udpMetaFifo_V_empty_n, ap_predicate_op9_read_state1, io_acc_block_signal_op24, ap_predicate_op24_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op24_write_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rx_udpMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op7 = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op7, ap_predicate_op7_read_state1, rx_udpMetaFifo_V_empty_n, ap_predicate_op9_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rx_udpMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)) or ((io_acc_block_signal_op7 = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op24, ap_predicate_op24_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((io_acc_block_signal_op24 = ap_const_logic_0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op24_write_state2_assign_proc : process(tmp_reg_142, tmp_64_reg_146, tmp_65_reg_170)
    begin
                ap_predicate_op24_write_state2 <= ((tmp_65_reg_170 = ap_const_lv1_1) and (tmp_64_reg_146 = ap_const_lv1_1) and (tmp_reg_142 = ap_const_lv1_1));
    end process;


    ap_predicate_op7_read_state1_assign_proc : process(tmp_nbreadreq_fu_54_p4, tmp_64_nbreadreq_fu_64_p3)
    begin
                ap_predicate_op7_read_state1 <= ((tmp_64_nbreadreq_fu_64_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_54_p4 = ap_const_lv1_1));
    end process;


    ap_predicate_op9_read_state1_assign_proc : process(tmp_nbreadreq_fu_54_p4, tmp_64_nbreadreq_fu_64_p3)
    begin
                ap_predicate_op9_read_state1 <= ((tmp_64_nbreadreq_fu_64_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_54_p4 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op24 <= (rx_ipUdpMetaFifo_V_t_full_n and rx_ipUdpMetaFifo_V_t_1_full_n and rx_ipUdpMetaFifo_V_m_full_n and rx_ipUdpMetaFifo_V_l_full_n);
    io_acc_block_signal_op7 <= (rx_ip2udpMetaFifo_V_s_empty_n and rx_ip2udpMetaFifo_V_1_empty_n);

    rx_ip2udpMetaFifo_V_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_ip2udpMetaFifo_V_1_empty_n, ap_predicate_op7_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rx_ip2udpMetaFifo_V_1_blk_n <= rx_ip2udpMetaFifo_V_1_empty_n;
        else 
            rx_ip2udpMetaFifo_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_ip2udpMetaFifo_V_1_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op7_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_ip2udpMetaFifo_V_1_read <= ap_const_logic_1;
        else 
            rx_ip2udpMetaFifo_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_ip2udpMetaFifo_V_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_ip2udpMetaFifo_V_s_empty_n, ap_predicate_op7_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rx_ip2udpMetaFifo_V_s_blk_n <= rx_ip2udpMetaFifo_V_s_empty_n;
        else 
            rx_ip2udpMetaFifo_V_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_ip2udpMetaFifo_V_s_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op7_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_ip2udpMetaFifo_V_s_read <= ap_const_logic_1;
        else 
            rx_ip2udpMetaFifo_V_s_read <= ap_const_logic_0;
        end if; 
    end process;


    rx_ipUdpMetaFifo_V_l_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rx_ipUdpMetaFifo_V_l_full_n, ap_predicate_op24_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rx_ipUdpMetaFifo_V_l_blk_n <= rx_ipUdpMetaFifo_V_l_full_n;
        else 
            rx_ipUdpMetaFifo_V_l_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rx_ipUdpMetaFifo_V_l_din <= tmp_length_V_reg_165;

    rx_ipUdpMetaFifo_V_l_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op24_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_ipUdpMetaFifo_V_l_write <= ap_const_logic_1;
        else 
            rx_ipUdpMetaFifo_V_l_write <= ap_const_logic_0;
        end if; 
    end process;


    rx_ipUdpMetaFifo_V_m_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rx_ipUdpMetaFifo_V_m_full_n, ap_predicate_op24_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rx_ipUdpMetaFifo_V_m_blk_n <= rx_ipUdpMetaFifo_V_m_full_n;
        else 
            rx_ipUdpMetaFifo_V_m_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rx_ipUdpMetaFifo_V_m_din <= tmp_my_port_V_reg_160;

    rx_ipUdpMetaFifo_V_m_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op24_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_ipUdpMetaFifo_V_m_write <= ap_const_logic_1;
        else 
            rx_ipUdpMetaFifo_V_m_write <= ap_const_logic_0;
        end if; 
    end process;


    rx_ipUdpMetaFifo_V_t_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rx_ipUdpMetaFifo_V_t_1_full_n, ap_predicate_op24_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rx_ipUdpMetaFifo_V_t_1_blk_n <= rx_ipUdpMetaFifo_V_t_1_full_n;
        else 
            rx_ipUdpMetaFifo_V_t_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rx_ipUdpMetaFifo_V_t_1_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_their_address_V_reg_150),128));

    rx_ipUdpMetaFifo_V_t_1_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op24_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_ipUdpMetaFifo_V_t_1_write <= ap_const_logic_1;
        else 
            rx_ipUdpMetaFifo_V_t_1_write <= ap_const_logic_0;
        end if; 
    end process;


    rx_ipUdpMetaFifo_V_t_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rx_ipUdpMetaFifo_V_t_full_n, ap_predicate_op24_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rx_ipUdpMetaFifo_V_t_blk_n <= rx_ipUdpMetaFifo_V_t_full_n;
        else 
            rx_ipUdpMetaFifo_V_t_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rx_ipUdpMetaFifo_V_t_din <= tmp_their_port_V_reg_155;

    rx_ipUdpMetaFifo_V_t_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op24_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op24_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_ipUdpMetaFifo_V_t_write <= ap_const_logic_1;
        else 
            rx_ipUdpMetaFifo_V_t_write <= ap_const_logic_0;
        end if; 
    end process;


    rx_udpMetaFifo_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, rx_udpMetaFifo_V_empty_n, ap_predicate_op9_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rx_udpMetaFifo_V_blk_n <= rx_udpMetaFifo_V_empty_n;
        else 
            rx_udpMetaFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rx_udpMetaFifo_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op9_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rx_udpMetaFifo_V_read <= ap_const_logic_1;
        else 
            rx_udpMetaFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_64_nbreadreq_fu_64_p3 <= (0=>(rx_udpMetaFifo_V_empty_n), others=>'-');
    tmp_nbreadreq_fu_54_p4 <= (0=>(rx_ip2udpMetaFifo_V_s_empty_n and rx_ip2udpMetaFifo_V_1_empty_n), others=>'-');
    tmp_their_port_V_fu_106_p1 <= rx_udpMetaFifo_V_dout(16 - 1 downto 0);
end behav;
