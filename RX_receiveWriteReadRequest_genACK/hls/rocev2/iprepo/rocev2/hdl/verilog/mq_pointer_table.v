// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mq_pointer_table (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        mq_pointerUpdFifo_V_s_dout,
        mq_pointerUpdFifo_V_s_empty_n,
        mq_pointerUpdFifo_V_s_read,
        mq_pointerUpdFifo_V_1_dout,
        mq_pointerUpdFifo_V_1_empty_n,
        mq_pointerUpdFifo_V_1_read,
        mq_pointerUpdFifo_V_3_dout,
        mq_pointerUpdFifo_V_3_empty_n,
        mq_pointerUpdFifo_V_3_read,
        mq_pointerUpdFifo_V_4_dout,
        mq_pointerUpdFifo_V_4_empty_n,
        mq_pointerUpdFifo_V_4_read,
        mq_pointerReqFifo_V_1_dout,
        mq_pointerReqFifo_V_1_empty_n,
        mq_pointerReqFifo_V_1_read,
        mq_pointerReqFifo_V_s_dout,
        mq_pointerReqFifo_V_s_empty_n,
        mq_pointerReqFifo_V_s_read,
        mq_pointerRspFifo_V_1_din,
        mq_pointerRspFifo_V_1_full_n,
        mq_pointerRspFifo_V_1_write,
        mq_pointerRspFifo_V_2_din,
        mq_pointerRspFifo_V_2_full_n,
        mq_pointerRspFifo_V_2_write,
        mq_pointerRspFifo_V_s_din,
        mq_pointerRspFifo_V_s_full_n,
        mq_pointerRspFifo_V_s_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] mq_pointerUpdFifo_V_s_dout;
input   mq_pointerUpdFifo_V_s_empty_n;
output   mq_pointerUpdFifo_V_s_read;
input  [15:0] mq_pointerUpdFifo_V_1_dout;
input   mq_pointerUpdFifo_V_1_empty_n;
output   mq_pointerUpdFifo_V_1_read;
input  [15:0] mq_pointerUpdFifo_V_3_dout;
input   mq_pointerUpdFifo_V_3_empty_n;
output   mq_pointerUpdFifo_V_3_read;
input  [0:0] mq_pointerUpdFifo_V_4_dout;
input   mq_pointerUpdFifo_V_4_empty_n;
output   mq_pointerUpdFifo_V_4_read;
input  [15:0] mq_pointerReqFifo_V_1_dout;
input   mq_pointerReqFifo_V_1_empty_n;
output   mq_pointerReqFifo_V_1_read;
input  [0:0] mq_pointerReqFifo_V_s_dout;
input   mq_pointerReqFifo_V_s_empty_n;
output   mq_pointerReqFifo_V_s_read;
output  [15:0] mq_pointerRspFifo_V_1_din;
input   mq_pointerRspFifo_V_1_full_n;
output   mq_pointerRspFifo_V_1_write;
output  [15:0] mq_pointerRspFifo_V_2_din;
input   mq_pointerRspFifo_V_2_full_n;
output   mq_pointerRspFifo_V_2_write;
output  [0:0] mq_pointerRspFifo_V_s_din;
input   mq_pointerRspFifo_V_s_full_n;
output   mq_pointerRspFifo_V_s_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mq_pointerUpdFifo_V_s_read;
reg mq_pointerUpdFifo_V_1_read;
reg mq_pointerUpdFifo_V_3_read;
reg mq_pointerUpdFifo_V_4_read;
reg mq_pointerReqFifo_V_1_read;
reg mq_pointerReqFifo_V_s_read;
reg mq_pointerRspFifo_V_1_write;
reg mq_pointerRspFifo_V_2_write;
reg mq_pointerRspFifo_V_s_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op6;
wire   [0:0] tmp_nbreadreq_fu_72_p6;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op19;
reg   [0:0] tmp_reg_344;
wire   [0:0] or_ln146_fu_263_p2;
reg    ap_predicate_op19_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    io_acc_block_signal_op72;
reg   [0:0] tmp_reg_344_pp0_iter1_reg;
reg   [0:0] or_ln146_reg_377;
reg   [0:0] and_ln149_reg_385;
reg    ap_predicate_op72_write_state3;
wire    io_acc_block_signal_op80;
reg   [0:0] mq_wait_load_reg_373;
reg   [0:0] mq_isLocked_load_reg_369;
reg    ap_predicate_op80_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] mq_lockedKey_V;
reg   [0:0] mq_isLocked;
reg   [8:0] ptr_table_head_V_address0;
reg    ptr_table_head_V_ce0;
reg    ptr_table_head_V_we0;
wire   [15:0] ptr_table_head_V_q0;
reg   [8:0] ptr_table_tail_V_address0;
reg    ptr_table_tail_V_ce0;
reg    ptr_table_tail_V_we0;
wire   [15:0] ptr_table_tail_V_q0;
reg   [8:0] ptr_table_valid_address0;
reg    ptr_table_valid_ce0;
reg    ptr_table_valid_we0;
wire   [0:0] ptr_table_valid_q0;
reg   [0:0] mq_wait;
reg   [15:0] mq_request_key_V;
reg    mq_pointerUpdFifo_V_s_blk_n;
wire    ap_block_pp0_stage0;
reg    mq_pointerUpdFifo_V_1_blk_n;
reg    mq_pointerUpdFifo_V_3_blk_n;
reg    mq_pointerUpdFifo_V_4_blk_n;
reg    mq_pointerReqFifo_V_1_blk_n;
reg    mq_pointerReqFifo_V_s_blk_n;
reg    mq_pointerRspFifo_V_1_blk_n;
reg    mq_pointerRspFifo_V_2_blk_n;
reg    mq_pointerRspFifo_V_s_blk_n;
reg   [15:0] tmp_key_V_reg_348;
reg   [15:0] tmp_entry_head_V_reg_354;
reg   [15:0] tmp_entry_tail_V_reg_359;
reg   [0:0] tmp_entry_valid_reg_364;
wire   [0:0] mq_isLocked_load_load_fu_245_p1;
wire   [0:0] mq_wait_load_load_fu_249_p1;
wire   [0:0] tmp_lock_fu_273_p1;
wire   [0:0] and_ln149_fu_283_p2;
wire   [0:0] icmp_ln879_fu_333_p2;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_6_fu_289_p1;
wire   [63:0] zext_ln544_7_fu_308_p1;
wire   [63:0] zext_ln544_fu_327_p1;
wire   [0:0] tmp_52_nbreadreq_fu_98_p4;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] xor_ln146_fu_257_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_371;
reg    ap_condition_375;
reg    ap_condition_369;
reg    ap_condition_216;
reg    ap_condition_229;
reg    ap_condition_185;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 mq_lockedKey_V = 16'd0;
#0 mq_isLocked = 1'd0;
#0 mq_wait = 1'd0;
#0 mq_request_key_V = 16'd0;
end

conn_table_conn_table_remote_ud #(
    .DataWidth( 16 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
ptr_table_head_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ptr_table_head_V_address0),
    .ce0(ptr_table_head_V_ce0),
    .we0(ptr_table_head_V_we0),
    .d0(tmp_entry_head_V_reg_354),
    .q0(ptr_table_head_V_q0)
);

conn_table_conn_table_remote_ud #(
    .DataWidth( 16 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
ptr_table_tail_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ptr_table_tail_V_address0),
    .ce0(ptr_table_tail_V_ce0),
    .we0(ptr_table_tail_V_we0),
    .d0(tmp_entry_tail_V_reg_359),
    .q0(ptr_table_tail_V_q0)
);

mq_pointer_table_ptr_table_valid #(
    .DataWidth( 1 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
ptr_table_valid_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ptr_table_valid_address0),
    .ce0(ptr_table_valid_ce0),
    .we0(ptr_table_valid_we0),
    .d0(tmp_entry_valid_reg_364),
    .q0(ptr_table_valid_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_344 == 1'd1) & (icmp_ln879_fu_333_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_isLocked <= 1'd0;
    end else if ((((mq_isLocked_load_load_fu_245_p1 == 1'd0) & (tmp_reg_344 == 1'd0) & (or_ln146_fu_263_p2 == 1'd1) & (mq_wait_load_load_fu_249_p1 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln146_fu_263_p2 == 1'd0) & (1'd0 == and_ln149_fu_283_p2) & (tmp_reg_344 == 1'd0) & (tmp_lock_fu_273_p1 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        mq_isLocked <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_369)) begin
        if ((1'b1 == ap_condition_375)) begin
            mq_lockedKey_V <= mq_request_key_V;
        end else if ((1'b1 == ap_condition_371)) begin
            mq_lockedKey_V <= mq_pointerReqFifo_V_1_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_369)) begin
        if ((1'b1 == ap_condition_375)) begin
            mq_wait <= 1'd0;
        end else if (((or_ln146_fu_263_p2 == 1'd0) & (1'd1 == and_ln149_fu_283_p2))) begin
            mq_wait <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln146_fu_263_p2 == 1'd0) & (tmp_reg_344 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln149_reg_385 <= and_ln149_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_isLocked_load_reg_369 <= mq_isLocked;
        tmp_reg_344 <= tmp_nbreadreq_fu_72_p6;
        tmp_reg_344_pp0_iter1_reg <= tmp_reg_344;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln146_fu_263_p2 == 1'd0) & (tmp_reg_344 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_request_key_V <= mq_pointerReqFifo_V_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_344 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_wait_load_reg_373 <= mq_wait;
        or_ln146_reg_377 <= or_ln146_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_72_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_entry_head_V_reg_354 <= mq_pointerUpdFifo_V_1_dout;
        tmp_entry_tail_V_reg_359 <= mq_pointerUpdFifo_V_3_dout;
        tmp_entry_valid_reg_364 <= mq_pointerUpdFifo_V_4_dout;
        tmp_key_V_reg_348 <= mq_pointerUpdFifo_V_s_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mq_pointerReqFifo_V_1_blk_n = mq_pointerReqFifo_V_1_empty_n;
    end else begin
        mq_pointerReqFifo_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_pointerReqFifo_V_1_read = 1'b1;
    end else begin
        mq_pointerReqFifo_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mq_pointerReqFifo_V_s_blk_n = mq_pointerReqFifo_V_s_empty_n;
    end else begin
        mq_pointerReqFifo_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_pointerReqFifo_V_s_read = 1'b1;
    end else begin
        mq_pointerReqFifo_V_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op72_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        mq_pointerRspFifo_V_1_blk_n = mq_pointerRspFifo_V_1_full_n;
    end else begin
        mq_pointerRspFifo_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op72_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        mq_pointerRspFifo_V_1_write = 1'b1;
    end else begin
        mq_pointerRspFifo_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op72_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        mq_pointerRspFifo_V_2_blk_n = mq_pointerRspFifo_V_2_full_n;
    end else begin
        mq_pointerRspFifo_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op72_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        mq_pointerRspFifo_V_2_write = 1'b1;
    end else begin
        mq_pointerRspFifo_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op72_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        mq_pointerRspFifo_V_s_blk_n = mq_pointerRspFifo_V_s_full_n;
    end else begin
        mq_pointerRspFifo_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op80_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op72_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        mq_pointerRspFifo_V_s_write = 1'b1;
    end else begin
        mq_pointerRspFifo_V_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mq_pointerUpdFifo_V_1_blk_n = mq_pointerUpdFifo_V_1_empty_n;
    end else begin
        mq_pointerUpdFifo_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_pointerUpdFifo_V_1_read = 1'b1;
    end else begin
        mq_pointerUpdFifo_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mq_pointerUpdFifo_V_3_blk_n = mq_pointerUpdFifo_V_3_empty_n;
    end else begin
        mq_pointerUpdFifo_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_pointerUpdFifo_V_3_read = 1'b1;
    end else begin
        mq_pointerUpdFifo_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mq_pointerUpdFifo_V_4_blk_n = mq_pointerUpdFifo_V_4_empty_n;
    end else begin
        mq_pointerUpdFifo_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_pointerUpdFifo_V_4_read = 1'b1;
    end else begin
        mq_pointerUpdFifo_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mq_pointerUpdFifo_V_s_blk_n = mq_pointerUpdFifo_V_s_empty_n;
    end else begin
        mq_pointerUpdFifo_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_72_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mq_pointerUpdFifo_V_s_read = 1'b1;
    end else begin
        mq_pointerUpdFifo_V_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_185)) begin
        if ((tmp_reg_344 == 1'd1)) begin
            ptr_table_head_V_address0 = zext_ln544_fu_327_p1;
        end else if ((1'b1 == ap_condition_229)) begin
            ptr_table_head_V_address0 = zext_ln544_7_fu_308_p1;
        end else if ((1'b1 == ap_condition_216)) begin
            ptr_table_head_V_address0 = zext_ln544_6_fu_289_p1;
        end else begin
            ptr_table_head_V_address0 = 'bx;
        end
    end else begin
        ptr_table_head_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_reg_344 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((mq_isLocked_load_load_fu_245_p1 == 1'd0) & (tmp_reg_344 == 1'd0) & (or_ln146_fu_263_p2 == 1'd1) & (mq_wait_load_load_fu_249_p1 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln146_fu_263_p2 == 1'd0) & (1'd0 == and_ln149_fu_283_p2) & (tmp_reg_344 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ptr_table_head_V_ce0 = 1'b1;
    end else begin
        ptr_table_head_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_344 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ptr_table_head_V_we0 = 1'b1;
    end else begin
        ptr_table_head_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_185)) begin
        if ((tmp_reg_344 == 1'd1)) begin
            ptr_table_tail_V_address0 = zext_ln544_fu_327_p1;
        end else if ((1'b1 == ap_condition_229)) begin
            ptr_table_tail_V_address0 = zext_ln544_7_fu_308_p1;
        end else if ((1'b1 == ap_condition_216)) begin
            ptr_table_tail_V_address0 = zext_ln544_6_fu_289_p1;
        end else begin
            ptr_table_tail_V_address0 = 'bx;
        end
    end else begin
        ptr_table_tail_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_reg_344 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((mq_isLocked_load_load_fu_245_p1 == 1'd0) & (tmp_reg_344 == 1'd0) & (or_ln146_fu_263_p2 == 1'd1) & (mq_wait_load_load_fu_249_p1 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln146_fu_263_p2 == 1'd0) & (1'd0 == and_ln149_fu_283_p2) & (tmp_reg_344 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ptr_table_tail_V_ce0 = 1'b1;
    end else begin
        ptr_table_tail_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_344 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ptr_table_tail_V_we0 = 1'b1;
    end else begin
        ptr_table_tail_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_185)) begin
        if ((tmp_reg_344 == 1'd1)) begin
            ptr_table_valid_address0 = zext_ln544_fu_327_p1;
        end else if ((1'b1 == ap_condition_229)) begin
            ptr_table_valid_address0 = zext_ln544_7_fu_308_p1;
        end else if ((1'b1 == ap_condition_216)) begin
            ptr_table_valid_address0 = zext_ln544_6_fu_289_p1;
        end else begin
            ptr_table_valid_address0 = 'bx;
        end
    end else begin
        ptr_table_valid_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_reg_344 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((mq_isLocked_load_load_fu_245_p1 == 1'd0) & (tmp_reg_344 == 1'd0) & (or_ln146_fu_263_p2 == 1'd1) & (mq_wait_load_load_fu_249_p1 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln146_fu_263_p2 == 1'd0) & (1'd0 == and_ln149_fu_283_p2) & (tmp_reg_344 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ptr_table_valid_ce0 = 1'b1;
    end else begin
        ptr_table_valid_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_344 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ptr_table_valid_we0 = 1'b1;
    end else begin
        ptr_table_valid_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln149_fu_283_p2 = (mq_pointerReqFifo_V_s_dout & mq_isLocked);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op19 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op19_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((io_acc_block_signal_op80 == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((io_acc_block_signal_op72 == 1'b0) & (ap_predicate_op72_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op19 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op19_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((io_acc_block_signal_op80 == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((io_acc_block_signal_op72 == 1'b0) & (ap_predicate_op72_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((io_acc_block_signal_op19 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op19_read_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((io_acc_block_signal_op80 == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((io_acc_block_signal_op72 == 1'b0) & (ap_predicate_op72_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_nbreadreq_fu_72_p6 == 1'd1) & (io_acc_block_signal_op6 == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((io_acc_block_signal_op19 == 1'b0) & (ap_predicate_op19_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((io_acc_block_signal_op80 == 1'b0) & (ap_predicate_op80_write_state3 == 1'b1)) | ((io_acc_block_signal_op72 == 1'b0) & (ap_predicate_op72_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_185 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_216 = ((or_ln146_fu_263_p2 == 1'd0) & (1'd0 == and_ln149_fu_283_p2) & (tmp_reg_344 == 1'd0));
end

always @ (*) begin
    ap_condition_229 = ((mq_isLocked_load_load_fu_245_p1 == 1'd0) & (tmp_reg_344 == 1'd0) & (or_ln146_fu_263_p2 == 1'd1) & (mq_wait_load_load_fu_249_p1 == 1'd1));
end

always @ (*) begin
    ap_condition_369 = ((tmp_reg_344 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_371 = ((or_ln146_fu_263_p2 == 1'd0) & (1'd0 == and_ln149_fu_283_p2) & (tmp_lock_fu_273_p1 == 1'd1));
end

always @ (*) begin
    ap_condition_375 = ((mq_isLocked_load_load_fu_245_p1 == 1'd0) & (or_ln146_fu_263_p2 == 1'd1) & (mq_wait_load_load_fu_249_p1 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op19_read_state2 = ((or_ln146_fu_263_p2 == 1'd0) & (tmp_reg_344 == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_write_state3 = ((1'd0 == and_ln149_reg_385) & (or_ln146_reg_377 == 1'd0) & (tmp_reg_344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op80_write_state3 = ((mq_isLocked_load_reg_369 == 1'd0) & (tmp_reg_344_pp0_iter1_reg == 1'd0) & (mq_wait_load_reg_373 == 1'd1) & (or_ln146_reg_377 == 1'd1));
end

assign icmp_ln879_fu_333_p2 = ((mq_lockedKey_V == tmp_key_V_reg_348) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op19 = (mq_pointerReqFifo_V_s_empty_n & mq_pointerReqFifo_V_1_empty_n);

assign io_acc_block_signal_op6 = (mq_pointerUpdFifo_V_s_empty_n & mq_pointerUpdFifo_V_4_empty_n & mq_pointerUpdFifo_V_3_empty_n & mq_pointerUpdFifo_V_1_empty_n);

assign io_acc_block_signal_op72 = (mq_pointerRspFifo_V_s_full_n & mq_pointerRspFifo_V_2_full_n & mq_pointerRspFifo_V_1_full_n);

assign io_acc_block_signal_op80 = (mq_pointerRspFifo_V_s_full_n & mq_pointerRspFifo_V_2_full_n & mq_pointerRspFifo_V_1_full_n);

assign mq_isLocked_load_load_fu_245_p1 = mq_isLocked;

assign mq_pointerRspFifo_V_1_din = ptr_table_head_V_q0;

assign mq_pointerRspFifo_V_2_din = ptr_table_tail_V_q0;

assign mq_pointerRspFifo_V_s_din = ptr_table_valid_q0;

assign mq_wait_load_load_fu_249_p1 = mq_wait;

assign or_ln146_fu_263_p2 = (xor_ln146_fu_257_p2 | mq_wait);

assign tmp_52_nbreadreq_fu_98_p4 = (mq_pointerReqFifo_V_s_empty_n & mq_pointerReqFifo_V_1_empty_n);

assign tmp_lock_fu_273_p1 = mq_pointerReqFifo_V_s_dout;

assign tmp_nbreadreq_fu_72_p6 = (mq_pointerUpdFifo_V_s_empty_n & mq_pointerUpdFifo_V_4_empty_n & mq_pointerUpdFifo_V_3_empty_n & mq_pointerUpdFifo_V_1_empty_n);

assign xor_ln146_fu_257_p2 = (tmp_52_nbreadreq_fu_98_p4 ^ 1'd1);

assign zext_ln544_6_fu_289_p1 = mq_pointerReqFifo_V_1_dout;

assign zext_ln544_7_fu_308_p1 = mq_request_key_V;

assign zext_ln544_fu_327_p1 = tmp_key_V_reg_348;

endmodule //mq_pointer_table
